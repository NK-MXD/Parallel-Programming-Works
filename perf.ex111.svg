<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="646" onload="init(evt)" viewBox="0 0 1200 646" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="646.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="629" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="629" > </text>
<g id="frames">
<g >
<title>snd_pcm_update_hw_ptr0 (22 samples, 0.10%)</title><rect x="1186.5" y="373" width="1.2" height="15.0" fill="rgb(237,69,0)" rx="2" ry="2" />
<text  x="1189.54" y="383.5" ></text>
</g>
<g >
<title>snd_audiopci_interrupt (150 samples, 0.66%)</title><rect x="1179.9" y="405" width="7.8" height="15.0" fill="rgb(254,136,37)" rx="2" ry="2" />
<text  x="1182.93" y="415.5" ></text>
</g>
<g >
<title>tty_flip_buffer_push (2 samples, 0.01%)</title><rect x="10.7" y="373" width="0.1" height="15.0" fill="rgb(220,204,53)" rx="2" ry="2" />
<text  x="13.72" y="383.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (2 samples, 0.01%)</title><rect x="933.7" y="325" width="0.1" height="15.0" fill="rgb(215,25,11)" rx="2" ry="2" />
<text  x="936.66" y="335.5" ></text>
</g>
<g >
<title>delay_tsc (4 samples, 0.02%)</title><rect x="10.1" y="229" width="0.2" height="15.0" fill="rgb(216,194,2)" rx="2" ry="2" />
<text  x="13.10" y="239.5" ></text>
</g>
<g >
<title>file_tty_write.isra.0 (15 samples, 0.07%)</title><rect x="10.1" y="421" width="0.7" height="15.0" fill="rgb(219,136,53)" rx="2" ry="2" />
<text  x="13.05" y="431.5" ></text>
</g>
<g >
<title>exit_mmap (25 samples, 0.11%)</title><rect x="1188.3" y="469" width="1.3" height="15.0" fill="rgb(232,75,53)" rx="2" ry="2" />
<text  x="1191.35" y="479.5" ></text>
</g>
<g >
<title>perf_pmu_disable.part.0 (2 samples, 0.01%)</title><rect x="931.3" y="389" width="0.1" height="15.0" fill="rgb(246,15,22)" rx="2" ry="2" />
<text  x="934.33" y="399.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (3 samples, 0.01%)</title><rect x="1187.8" y="373" width="0.2" height="15.0" fill="rgb(230,174,19)" rx="2" ry="2" />
<text  x="1190.83" y="383.5" ></text>
</g>
<g >
<title>group_sched_out.part.0 (6 samples, 0.03%)</title><rect x="10.4" y="277" width="0.3" height="15.0" fill="rgb(225,146,54)" rx="2" ry="2" />
<text  x="13.41" y="287.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (2 samples, 0.01%)</title><rect x="933.8" y="357" width="0.1" height="15.0" fill="rgb(245,105,13)" rx="2" ry="2" />
<text  x="936.76" y="367.5" ></text>
</g>
<g >
<title>rh_timer_func (5 samples, 0.02%)</title><rect x="787.2" y="277" width="0.3" height="15.0" fill="rgb(215,80,31)" rx="2" ry="2" />
<text  x="790.20" y="287.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (53 samples, 0.23%)</title><rect x="928.6" y="437" width="2.7" height="15.0" fill="rgb(233,26,16)" rx="2" ry="2" />
<text  x="931.59" y="447.5" ></text>
</g>
<g >
<title>__smp_call_single_queue (8 samples, 0.04%)</title><rect x="785.2" y="85" width="0.4" height="15.0" fill="rgb(228,226,33)" rx="2" ry="2" />
<text  x="788.18" y="95.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (4 samples, 0.02%)</title><rect x="786.5" y="213" width="0.2" height="15.0" fill="rgb(246,41,25)" rx="2" ry="2" />
<text  x="789.52" y="223.5" ></text>
</g>
<g >
<title>mutex_lock (12 samples, 0.05%)</title><rect x="10.1" y="389" width="0.6" height="15.0" fill="rgb(226,9,4)" rx="2" ry="2" />
<text  x="13.10" y="399.5" ></text>
</g>
<g >
<title>native_write_msr (8 samples, 0.04%)</title><rect x="786.8" y="117" width="0.4" height="15.0" fill="rgb(228,25,20)" rx="2" ry="2" />
<text  x="789.78" y="127.5" ></text>
</g>
<g >
<title>snd_ensoniq_playback1_pointer (15 samples, 0.07%)</title><rect x="784.4" y="213" width="0.8" height="15.0" fill="rgb(224,17,21)" rx="2" ry="2" />
<text  x="787.41" y="223.5" ></text>
</g>
<g >
<title>handle_fasteoi_irq (4 samples, 0.02%)</title><rect x="786.5" y="261" width="0.2" height="15.0" fill="rgb(220,8,49)" rx="2" ry="2" />
<text  x="789.52" y="271.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (7 samples, 0.03%)</title><rect x="1189.6" y="549" width="0.4" height="15.0" fill="rgb(249,190,16)" rx="2" ry="2" />
<text  x="1192.64" y="559.5" ></text>
</g>
<g >
<title>x86_pmu_disable (6 samples, 0.03%)</title><rect x="10.1" y="293" width="0.3" height="15.0" fill="rgb(220,137,37)" rx="2" ry="2" />
<text  x="13.10" y="303.5" ></text>
</g>
<g >
<title>clear_page_erms (14,839 samples, 64.97%)</title><rect x="20.9" y="389" width="766.6" height="15.0" fill="rgb(222,60,17)" rx="2" ry="2" />
<text  x="23.90" y="399.5" >clear_page_erms</text>
</g>
<g >
<title>send_call_function_single_ipi (8 samples, 0.04%)</title><rect x="786.8" y="149" width="0.4" height="15.0" fill="rgb(248,179,19)" rx="2" ry="2" />
<text  x="789.78" y="159.5" ></text>
</g>
<g >
<title>__const_udelay (5 samples, 0.02%)</title><rect x="10.4" y="181" width="0.3" height="15.0" fill="rgb(237,157,3)" rx="2" ry="2" />
<text  x="13.41" y="191.5" ></text>
</g>
<g >
<title>delay_tsc (3 samples, 0.01%)</title><rect x="789.0" y="325" width="0.1" height="15.0" fill="rgb(236,127,31)" rx="2" ry="2" />
<text  x="791.95" y="335.5" ></text>
</g>
<g >
<title>__GI___libc_write (17 samples, 0.07%)</title><rect x="10.0" y="549" width="0.9" height="15.0" fill="rgb(215,198,39)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>handle_fasteoi_irq (2 samples, 0.01%)</title><rect x="933.8" y="405" width="0.1" height="15.0" fill="rgb(220,147,37)" rx="2" ry="2" />
<text  x="936.76" y="415.5" ></text>
</g>
<g >
<title>ttwu_queue_wakelist (2 samples, 0.01%)</title><rect x="933.7" y="245" width="0.1" height="15.0" fill="rgb(235,98,10)" rx="2" ry="2" />
<text  x="936.66" y="255.5" ></text>
</g>
<g >
<title>handle_fasteoi_irq (2 samples, 0.01%)</title><rect x="17.5" y="437" width="0.1" height="15.0" fill="rgb(225,153,25)" rx="2" ry="2" />
<text  x="20.54" y="447.5" ></text>
</g>
<g >
<title>__sched_text_start (2 samples, 0.01%)</title><rect x="1188.1" y="421" width="0.1" height="15.0" fill="rgb(239,62,26)" rx="2" ry="2" />
<text  x="1191.09" y="431.5" ></text>
</g>
<g >
<title>common_interrupt (3 samples, 0.01%)</title><rect x="1187.8" y="437" width="0.2" height="15.0" fill="rgb(250,91,5)" rx="2" ry="2" />
<text  x="1190.83" y="447.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (157 samples, 0.69%)</title><rect x="777.5" y="293" width="8.1" height="15.0" fill="rgb(224,65,20)" rx="2" ry="2" />
<text  x="780.53" y="303.5" ></text>
</g>
<g >
<title>handle_fasteoi_irq (8 samples, 0.04%)</title><rect x="16.5" y="485" width="0.4" height="15.0" fill="rgb(221,108,10)" rx="2" ry="2" />
<text  x="19.51" y="495.5" ></text>
</g>
<g >
<title>__queue_work (2 samples, 0.01%)</title><rect x="10.7" y="341" width="0.1" height="15.0" fill="rgb(222,217,17)" rx="2" ry="2" />
<text  x="13.72" y="351.5" ></text>
</g>
<g >
<title>handle_irq_event (4 samples, 0.02%)</title><rect x="786.5" y="245" width="0.2" height="15.0" fill="rgb(246,221,27)" rx="2" ry="2" />
<text  x="789.52" y="255.5" ></text>
</g>
<g >
<title>normal (4,923 samples, 21.55%)</title><rect x="933.9" y="533" width="254.3" height="15.0" fill="rgb(225,154,46)" rx="2" ry="2" />
<text  x="936.86" y="543.5" >normal</text>
</g>
<g >
<title>__perf_event_task_sched_out (2 samples, 0.01%)</title><rect x="1188.1" y="405" width="0.1" height="15.0" fill="rgb(246,55,5)" rx="2" ry="2" />
<text  x="1191.09" y="415.5" ></text>
</g>
<g >
<title>event_sched_out.isra.0 (2 samples, 0.01%)</title><rect x="789.3" y="357" width="0.1" height="15.0" fill="rgb(248,75,4)" rx="2" ry="2" />
<text  x="792.26" y="367.5" ></text>
</g>
<g >
<title>perf_event_task_tick (16 samples, 0.07%)</title><rect x="785.6" y="229" width="0.9" height="15.0" fill="rgb(215,81,19)" rx="2" ry="2" />
<text  x="788.65" y="239.5" ></text>
</g>
<g >
<title>swake_up_locked.part.0 (8 samples, 0.04%)</title><rect x="786.8" y="229" width="0.4" height="15.0" fill="rgb(236,121,23)" rx="2" ry="2" />
<text  x="789.78" y="239.5" ></text>
</g>
<g >
<title>snd_pcm_period_elapsed (22 samples, 0.10%)</title><rect x="1186.5" y="389" width="1.2" height="15.0" fill="rgb(228,172,46)" rx="2" ry="2" />
<text  x="1189.54" y="399.5" ></text>
</g>
<g >
<title>irq_exit_rcu (4 samples, 0.02%)</title><rect x="1187.8" y="485" width="0.2" height="15.0" fill="rgb(206,146,38)" rx="2" ry="2" />
<text  x="1190.83" y="495.5" ></text>
</g>
<g >
<title>new_sync_write (15 samples, 0.07%)</title><rect x="10.1" y="453" width="0.7" height="15.0" fill="rgb(209,13,34)" rx="2" ry="2" />
<text  x="13.05" y="463.5" ></text>
</g>
<g >
<title>__sched_text_start (12 samples, 0.05%)</title><rect x="10.1" y="341" width="0.6" height="15.0" fill="rgb(250,40,16)" rx="2" ry="2" />
<text  x="13.10" y="351.5" ></text>
</g>
<g >
<title>amd_pmu_disable_all (11 samples, 0.05%)</title><rect x="785.6" y="181" width="0.6" height="15.0" fill="rgb(218,202,53)" rx="2" ry="2" />
<text  x="788.65" y="191.5" ></text>
</g>
<g >
<title>x86_pmu_disable (6 samples, 0.03%)</title><rect x="789.0" y="389" width="0.3" height="15.0" fill="rgb(251,225,18)" rx="2" ry="2" />
<text  x="791.95" y="399.5" ></text>
</g>
<g >
<title>ttwu_queue_wakelist (8 samples, 0.04%)</title><rect x="786.8" y="181" width="0.4" height="15.0" fill="rgb(220,138,10)" rx="2" ry="2" />
<text  x="789.78" y="191.5" ></text>
</g>
<g >
<title>default_wake_function (7 samples, 0.03%)</title><rect x="1187.3" y="277" width="0.4" height="15.0" fill="rgb(225,3,23)" rx="2" ry="2" />
<text  x="1190.31" y="287.5" ></text>
</g>
<g >
<title>handle_mm_fault (14,927 samples, 65.35%)</title><rect x="17.6" y="485" width="771.2" height="15.0" fill="rgb(241,42,5)" rx="2" ry="2" />
<text  x="20.65" y="495.5" >handle_mm_fault</text>
</g>
<g >
<title>__sched_text_start (2 samples, 0.01%)</title><rect x="931.3" y="421" width="0.1" height="15.0" fill="rgb(236,225,34)" rx="2" ry="2" />
<text  x="934.33" y="431.5" ></text>
</g>
<g >
<title>usb_hcd_poll_rh_status (5 samples, 0.02%)</title><rect x="787.2" y="261" width="0.3" height="15.0" fill="rgb(217,55,47)" rx="2" ry="2" />
<text  x="790.20" y="271.5" ></text>
</g>
<g >
<title>schedule (2 samples, 0.01%)</title><rect x="931.3" y="437" width="0.1" height="15.0" fill="rgb(234,155,19)" rx="2" ry="2" />
<text  x="934.33" y="447.5" ></text>
</g>
<g >
<title>x86_pmu_disable (2 samples, 0.01%)</title><rect x="1188.1" y="373" width="0.1" height="15.0" fill="rgb(208,163,26)" rx="2" ry="2" />
<text  x="1191.09" y="383.5" ></text>
</g>
<g >
<title>amd_pmu_disable_event (5 samples, 0.02%)</title><rect x="786.2" y="197" width="0.3" height="15.0" fill="rgb(249,195,5)" rx="2" ry="2" />
<text  x="789.21" y="207.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (150 samples, 0.66%)</title><rect x="1179.9" y="437" width="7.8" height="15.0" fill="rgb(215,82,9)" rx="2" ry="2" />
<text  x="1182.93" y="447.5" ></text>
</g>
<g >
<title>__smp_call_single_queue (2 samples, 0.01%)</title><rect x="933.7" y="229" width="0.1" height="15.0" fill="rgb(214,31,48)" rx="2" ry="2" />
<text  x="936.66" y="239.5" ></text>
</g>
<g >
<title>default_wake_function (8 samples, 0.04%)</title><rect x="785.2" y="133" width="0.4" height="15.0" fill="rgb(230,178,32)" rx="2" ry="2" />
<text  x="788.18" y="143.5" ></text>
</g>
<g >
<title>get_page_from_freelist (55 samples, 0.24%)</title><rect x="18.0" y="389" width="2.8" height="15.0" fill="rgb(250,212,41)" rx="2" ry="2" />
<text  x="21.01" y="399.5" ></text>
</g>
<g >
<title>improve (45 samples, 0.20%)</title><rect x="931.5" y="533" width="2.4" height="15.0" fill="rgb(208,109,18)" rx="2" ry="2" />
<text  x="934.54" y="543.5" ></text>
</g>
<g >
<title>irqentry_exit (2 samples, 0.01%)</title><rect x="1188.1" y="485" width="0.1" height="15.0" fill="rgb(237,14,31)" rx="2" ry="2" />
<text  x="1191.09" y="495.5" ></text>
</g>
<g >
<title>__smp_call_single_queue (8 samples, 0.04%)</title><rect x="786.8" y="165" width="0.4" height="15.0" fill="rgb(245,148,50)" rx="2" ry="2" />
<text  x="789.78" y="175.5" ></text>
</g>
<g >
<title>snd_ensoniq_playback1_pointer (15 samples, 0.07%)</title><rect x="1186.5" y="357" width="0.8" height="15.0" fill="rgb(205,38,30)" rx="2" ry="2" />
<text  x="1189.54" y="367.5" ></text>
</g>
<g >
<title>handle_irq_event (2 samples, 0.01%)</title><rect x="789.4" y="341" width="0.1" height="15.0" fill="rgb(231,155,50)" rx="2" ry="2" />
<text  x="792.37" y="351.5" ></text>
</g>
<g >
<title>dl_main (4 samples, 0.02%)</title><rect x="10.9" y="533" width="0.2" height="15.0" fill="rgb(238,69,12)" rx="2" ry="2" />
<text  x="13.88" y="543.5" ></text>
</g>
<g >
<title>schedule (10 samples, 0.04%)</title><rect x="789.0" y="453" width="0.5" height="15.0" fill="rgb(211,61,10)" rx="2" ry="2" />
<text  x="791.95" y="463.5" ></text>
</g>
<g >
<title>__common_interrupt (2 samples, 0.01%)</title><rect x="933.8" y="421" width="0.1" height="15.0" fill="rgb(227,7,16)" rx="2" ry="2" />
<text  x="936.76" y="431.5" ></text>
</g>
<g >
<title>native_write_msr (7 samples, 0.03%)</title><rect x="1189.6" y="357" width="0.4" height="15.0" fill="rgb(227,198,27)" rx="2" ry="2" />
<text  x="1192.64" y="367.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.01%)</title><rect x="933.8" y="469" width="0.1" height="15.0" fill="rgb(250,29,36)" rx="2" ry="2" />
<text  x="936.76" y="479.5" ></text>
</g>
<g >
<title>queue_work_on (2 samples, 0.01%)</title><rect x="10.7" y="357" width="0.1" height="15.0" fill="rgb(208,198,20)" rx="2" ry="2" />
<text  x="13.72" y="367.5" ></text>
</g>
<g >
<title>common_interrupt (4 samples, 0.02%)</title><rect x="786.5" y="293" width="0.2" height="15.0" fill="rgb(246,100,24)" rx="2" ry="2" />
<text  x="789.52" y="303.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (25 samples, 0.11%)</title><rect x="1188.3" y="565" width="1.3" height="15.0" fill="rgb(243,92,8)" rx="2" ry="2" />
<text  x="1191.35" y="575.5" ></text>
</g>
<g >
<title>native_read_msr (2 samples, 0.01%)</title><rect x="10.3" y="245" width="0.1" height="15.0" fill="rgb(220,2,15)" rx="2" ry="2" />
<text  x="13.31" y="255.5" ></text>
</g>
<g >
<title>asm_sysvec_call_function_single (2 samples, 0.01%)</title><rect x="1188.1" y="517" width="0.1" height="15.0" fill="rgb(217,77,33)" rx="2" ry="2" />
<text  x="1191.09" y="527.5" ></text>
</g>
<g >
<title>common_interrupt (151 samples, 0.66%)</title><rect x="1179.9" y="501" width="7.8" height="15.0" fill="rgb(252,72,16)" rx="2" ry="2" />
<text  x="1182.93" y="511.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (18 samples, 0.08%)</title><rect x="1188.7" y="373" width="0.9" height="15.0" fill="rgb(212,153,27)" rx="2" ry="2" />
<text  x="1191.66" y="383.5" ></text>
</g>
<g >
<title>native_read_msr (2 samples, 0.01%)</title><rect x="789.1" y="341" width="0.1" height="15.0" fill="rgb(213,148,51)" rx="2" ry="2" />
<text  x="792.11" y="351.5" ></text>
</g>
<g >
<title>asm_sysvec_call_function_single (2 samples, 0.01%)</title><rect x="931.3" y="517" width="0.1" height="15.0" fill="rgb(234,75,20)" rx="2" ry="2" />
<text  x="934.33" y="527.5" ></text>
</g>
<g >
<title>__handle_mm_fault (14,926 samples, 65.35%)</title><rect x="17.7" y="469" width="771.1" height="15.0" fill="rgb(207,118,8)" rx="2" ry="2" />
<text  x="20.70" y="479.5" >__handle_mm_fault</text>
</g>
<g >
<title>irq_exit_rcu (2 samples, 0.01%)</title><rect x="933.8" y="485" width="0.1" height="15.0" fill="rgb(254,82,48)" rx="2" ry="2" />
<text  x="936.76" y="495.5" ></text>
</g>
<g >
<title>__common_interrupt (8 samples, 0.04%)</title><rect x="16.5" y="501" width="0.4" height="15.0" fill="rgb(239,32,37)" rx="2" ry="2" />
<text  x="19.51" y="511.5" ></text>
</g>
<g >
<title>__common_interrupt (53 samples, 0.23%)</title><rect x="928.6" y="485" width="2.7" height="15.0" fill="rgb(217,70,51)" rx="2" ry="2" />
<text  x="931.59" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (17 samples, 0.07%)</title><rect x="10.0" y="533" width="0.9" height="15.0" fill="rgb(211,10,45)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>delay_tsc (5 samples, 0.02%)</title><rect x="786.2" y="149" width="0.3" height="15.0" fill="rgb(253,170,25)" rx="2" ry="2" />
<text  x="789.21" y="159.5" ></text>
</g>
<g >
<title>ttwu_queue_wakelist (8 samples, 0.04%)</title><rect x="785.2" y="101" width="0.4" height="15.0" fill="rgb(216,74,37)" rx="2" ry="2" />
<text  x="788.18" y="111.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (7 samples, 0.03%)</title><rect x="1189.6" y="389" width="0.4" height="15.0" fill="rgb(210,229,7)" rx="2" ry="2" />
<text  x="1192.64" y="399.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (156 samples, 0.68%)</title><rect x="777.5" y="277" width="8.1" height="15.0" fill="rgb(245,93,46)" rx="2" ry="2" />
<text  x="780.53" y="287.5" ></text>
</g>
<g >
<title>snd_pcm_update_hw_ptr0 (5 samples, 0.02%)</title><rect x="931.1" y="373" width="0.2" height="15.0" fill="rgb(227,45,5)" rx="2" ry="2" />
<text  x="934.07" y="383.5" ></text>
</g>
<g >
<title>asm_common_interrupt (53 samples, 0.23%)</title><rect x="928.6" y="517" width="2.7" height="15.0" fill="rgb(251,179,40)" rx="2" ry="2" />
<text  x="931.59" y="527.5" ></text>
</g>
<g >
<title>sysvec_call_function_single (2 samples, 0.01%)</title><rect x="931.3" y="501" width="0.1" height="15.0" fill="rgb(209,72,30)" rx="2" ry="2" />
<text  x="934.33" y="511.5" ></text>
</g>
<g >
<title>amd_pmu_disable_all (6 samples, 0.03%)</title><rect x="10.1" y="277" width="0.3" height="15.0" fill="rgb(238,60,0)" rx="2" ry="2" />
<text  x="13.10" y="287.5" ></text>
</g>
<g >
<title>n_tty_write (15 samples, 0.07%)</title><rect x="10.1" y="405" width="0.7" height="15.0" fill="rgb(253,209,39)" rx="2" ry="2" />
<text  x="13.05" y="415.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (4 samples, 0.02%)</title><rect x="10.9" y="549" width="0.2" height="15.0" fill="rgb(225,189,0)" rx="2" ry="2" />
<text  x="13.88" y="559.5" ></text>
</g>
<g >
<title>event_sched_out.isra.0 (6 samples, 0.03%)</title><rect x="10.4" y="261" width="0.3" height="15.0" fill="rgb(247,158,24)" rx="2" ry="2" />
<text  x="13.41" y="271.5" ></text>
</g>
<g >
<title>native_send_call_func_single_ipi (7 samples, 0.03%)</title><rect x="1187.3" y="197" width="0.4" height="15.0" fill="rgb(224,23,48)" rx="2" ry="2" />
<text  x="1190.31" y="207.5" ></text>
</g>
<g >
<title>get_page_from_freelist (14,856 samples, 65.04%)</title><rect x="20.8" y="405" width="767.5" height="15.0" fill="rgb(232,107,26)" rx="2" ry="2" />
<text  x="23.85" y="415.5" >get_page_from_freelist</text>
</g>
<g >
<title>asm_common_interrupt (4 samples, 0.02%)</title><rect x="786.5" y="309" width="0.2" height="15.0" fill="rgb(210,150,32)" rx="2" ry="2" />
<text  x="789.52" y="319.5" ></text>
</g>
<g >
<title>perf_pmu_disable.part.0 (2 samples, 0.01%)</title><rect x="1188.1" y="389" width="0.1" height="15.0" fill="rgb(218,221,49)" rx="2" ry="2" />
<text  x="1191.09" y="399.5" ></text>
</g>
<g >
<title>ctx_sched_out (6 samples, 0.03%)</title><rect x="10.4" y="293" width="0.3" height="15.0" fill="rgb(211,53,15)" rx="2" ry="2" />
<text  x="13.41" y="303.5" ></text>
</g>
<g >
<title>snd_pcm_update_hw_ptr0 (23 samples, 0.10%)</title><rect x="784.4" y="229" width="1.2" height="15.0" fill="rgb(213,35,37)" rx="2" ry="2" />
<text  x="787.41" y="239.5" ></text>
</g>
<g >
<title>x86_pmu_disable (2 samples, 0.01%)</title><rect x="1187.7" y="341" width="0.1" height="15.0" fill="rgb(223,159,33)" rx="2" ry="2" />
<text  x="1190.73" y="351.5" ></text>
</g>
<g >
<title>__common_interrupt (150 samples, 0.66%)</title><rect x="1179.9" y="485" width="7.8" height="15.0" fill="rgb(250,202,17)" rx="2" ry="2" />
<text  x="1182.93" y="495.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (36 samples, 0.16%)</title><rect x="785.6" y="357" width="1.9" height="15.0" fill="rgb(244,12,39)" rx="2" ry="2" />
<text  x="788.65" y="367.5" ></text>
</g>
<g >
<title>snd_audiopci_interrupt (2 samples, 0.01%)</title><rect x="789.4" y="293" width="0.1" height="15.0" fill="rgb(209,46,28)" rx="2" ry="2" />
<text  x="792.37" y="303.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (2 samples, 0.01%)</title><rect x="789.4" y="309" width="0.1" height="15.0" fill="rgb(234,221,46)" rx="2" ry="2" />
<text  x="792.37" y="319.5" ></text>
</g>
<g >
<title>rcu_core (9 samples, 0.04%)</title><rect x="786.7" y="293" width="0.5" height="15.0" fill="rgb(231,11,39)" rx="2" ry="2" />
<text  x="789.73" y="303.5" ></text>
</g>
<g >
<title>group_sched_out.part.0 (2 samples, 0.01%)</title><rect x="789.3" y="373" width="0.1" height="15.0" fill="rgb(205,34,28)" rx="2" ry="2" />
<text  x="792.26" y="383.5" ></text>
</g>
<g >
<title>mmput (25 samples, 0.11%)</title><rect x="1188.3" y="485" width="1.3" height="15.0" fill="rgb(227,47,42)" rx="2" ry="2" />
<text  x="1191.35" y="495.5" ></text>
</g>
<g >
<title>x86_pmu_del (2 samples, 0.01%)</title><rect x="789.3" y="341" width="0.1" height="15.0" fill="rgb(225,68,54)" rx="2" ry="2" />
<text  x="792.26" y="351.5" ></text>
</g>
<g >
<title>page_mapping (2 samples, 0.01%)</title><rect x="788.4" y="389" width="0.1" height="15.0" fill="rgb(235,88,23)" rx="2" ry="2" />
<text  x="791.44" y="399.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.0 (16 samples, 0.07%)</title><rect x="785.6" y="277" width="0.9" height="15.0" fill="rgb(239,212,6)" rx="2" ry="2" />
<text  x="788.65" y="287.5" ></text>
</g>
<g >
<title>all (22,841 samples, 100%)</title><rect x="10.0" y="597" width="1180.0" height="15.0" fill="rgb(252,70,54)" rx="2" ry="2" />
<text  x="13.00" y="607.5" ></text>
</g>
<g >
<title>ctx_sched_out (2 samples, 0.01%)</title><rect x="789.3" y="389" width="0.1" height="15.0" fill="rgb(225,116,52)" rx="2" ry="2" />
<text  x="792.26" y="399.5" ></text>
</g>
<g >
<title>page_remove_rmap (5 samples, 0.02%)</title><rect x="1188.4" y="389" width="0.3" height="15.0" fill="rgb(207,69,11)" rx="2" ry="2" />
<text  x="1191.40" y="399.5" ></text>
</g>
<g >
<title>uhci_scan_schedule.part.0 (2 samples, 0.01%)</title><rect x="787.4" y="229" width="0.1" height="15.0" fill="rgb(248,37,29)" rx="2" ry="2" />
<text  x="790.35" y="239.5" ></text>
</g>
<g >
<title>amd_pmu_disable_all (2 samples, 0.01%)</title><rect x="1187.7" y="325" width="0.1" height="15.0" fill="rgb(211,82,41)" rx="2" ry="2" />
<text  x="1190.73" y="335.5" ></text>
</g>
<g >
<title>rmqueue (2 samples, 0.01%)</title><rect x="20.7" y="373" width="0.1" height="15.0" fill="rgb(205,41,9)" rx="2" ry="2" />
<text  x="23.75" y="383.5" ></text>
</g>
<g >
<title>x86_pmu_del (6 samples, 0.03%)</title><rect x="10.4" y="245" width="0.3" height="15.0" fill="rgb(219,169,18)" rx="2" ry="2" />
<text  x="13.41" y="255.5" ></text>
</g>
<g >
<title>x86_pmu_enable (7 samples, 0.03%)</title><rect x="1189.6" y="373" width="0.4" height="15.0" fill="rgb(230,210,33)" rx="2" ry="2" />
<text  x="1192.64" y="383.5" ></text>
</g>
<g >
<title>rcu_gp_kthread_wake (8 samples, 0.04%)</title><rect x="786.8" y="261" width="0.4" height="15.0" fill="rgb(226,137,3)" rx="2" ry="2" />
<text  x="789.78" y="271.5" ></text>
</g>
<g >
<title>unmap_vmas (25 samples, 0.11%)</title><rect x="1188.3" y="453" width="1.3" height="15.0" fill="rgb(226,173,24)" rx="2" ry="2" />
<text  x="1191.35" y="463.5" ></text>
</g>
<g >
<title>x86_pmu_stop (6 samples, 0.03%)</title><rect x="10.4" y="229" width="0.3" height="15.0" fill="rgb(234,57,31)" rx="2" ry="2" />
<text  x="13.41" y="239.5" ></text>
</g>
<g >
<title>__wake_up_common (2 samples, 0.01%)</title><rect x="933.7" y="309" width="0.1" height="15.0" fill="rgb(233,208,27)" rx="2" ry="2" />
<text  x="936.66" y="319.5" ></text>
</g>
<g >
<title>asm_common_interrupt (2 samples, 0.01%)</title><rect x="17.5" y="485" width="0.1" height="15.0" fill="rgb(214,209,31)" rx="2" ry="2" />
<text  x="20.54" y="495.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (18 samples, 0.08%)</title><rect x="786.5" y="325" width="1.0" height="15.0" fill="rgb(252,84,44)" rx="2" ry="2" />
<text  x="789.52" y="335.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (2 samples, 0.01%)</title><rect x="933.8" y="373" width="0.1" height="15.0" fill="rgb(239,26,16)" rx="2" ry="2" />
<text  x="936.76" y="383.5" ></text>
</g>
<g >
<title>do_syscall_64 (25 samples, 0.11%)</title><rect x="1188.3" y="549" width="1.3" height="15.0" fill="rgb(246,24,38)" rx="2" ry="2" />
<text  x="1191.35" y="559.5" ></text>
</g>
<g >
<title>ksys_write (16 samples, 0.07%)</title><rect x="10.0" y="485" width="0.8" height="15.0" fill="rgb(217,102,8)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>handle_irq_event (53 samples, 0.23%)</title><rect x="928.6" y="453" width="2.7" height="15.0" fill="rgb(213,38,32)" rx="2" ry="2" />
<text  x="931.59" y="463.5" ></text>
</g>
<g >
<title>uhci_hub_status_data (5 samples, 0.02%)</title><rect x="787.2" y="245" width="0.3" height="15.0" fill="rgb(224,220,54)" rx="2" ry="2" />
<text  x="790.20" y="255.5" ></text>
</g>
<g >
<title>common_interrupt (157 samples, 0.69%)</title><rect x="777.5" y="357" width="8.1" height="15.0" fill="rgb(236,175,15)" rx="2" ry="2" />
<text  x="780.53" y="367.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (4 samples, 0.02%)</title><rect x="786.5" y="229" width="0.2" height="15.0" fill="rgb(206,195,43)" rx="2" ry="2" />
<text  x="789.52" y="239.5" ></text>
</g>
<g >
<title>wake_up_process (8 samples, 0.04%)</title><rect x="786.8" y="213" width="0.4" height="15.0" fill="rgb(244,221,36)" rx="2" ry="2" />
<text  x="789.78" y="223.5" ></text>
</g>
<g >
<title>amd_pmu_disable_all (6 samples, 0.03%)</title><rect x="789.0" y="373" width="0.3" height="15.0" fill="rgb(247,216,32)" rx="2" ry="2" />
<text  x="791.95" y="383.5" ></text>
</g>
<g >
<title>__irqentry_text_end (3 samples, 0.01%)</title><rect x="16.4" y="533" width="0.1" height="15.0" fill="rgb(221,227,33)" rx="2" ry="2" />
<text  x="19.35" y="543.5" ></text>
</g>
<g >
<title>__x64_sys_write (16 samples, 0.07%)</title><rect x="10.0" y="501" width="0.8" height="15.0" fill="rgb(241,94,5)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>delay_tsc (10 samples, 0.04%)</title><rect x="785.6" y="133" width="0.6" height="15.0" fill="rgb(214,101,46)" rx="2" ry="2" />
<text  x="788.65" y="143.5" ></text>
</g>
<g >
<title>amd_pmu_wait_on_overflow (2 samples, 0.01%)</title><rect x="931.3" y="341" width="0.1" height="15.0" fill="rgb(252,36,16)" rx="2" ry="2" />
<text  x="934.33" y="351.5" ></text>
</g>
<g >
<title>handle_irq_event (150 samples, 0.66%)</title><rect x="1179.9" y="453" width="7.8" height="15.0" fill="rgb(231,97,24)" rx="2" ry="2" />
<text  x="1182.93" y="463.5" ></text>
</g>
<g >
<title>schedule (2 samples, 0.01%)</title><rect x="1188.1" y="437" width="0.1" height="15.0" fill="rgb(217,3,9)" rx="2" ry="2" />
<text  x="1191.09" y="447.5" ></text>
</g>
<g >
<title>perf_pmu_disable.part.0 (6 samples, 0.03%)</title><rect x="10.1" y="309" width="0.3" height="15.0" fill="rgb(231,54,40)" rx="2" ry="2" />
<text  x="13.10" y="319.5" ></text>
</g>
<g >
<title>snd_audiopci_interrupt (8 samples, 0.04%)</title><rect x="16.5" y="421" width="0.4" height="15.0" fill="rgb(226,200,49)" rx="2" ry="2" />
<text  x="19.51" y="431.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (14,954 samples, 65.47%)</title><rect x="16.9" y="533" width="772.6" height="15.0" fill="rgb(216,223,52)" rx="2" ry="2" />
<text  x="19.92" y="543.5" >asm_exc_page_fault</text>
</g>
<g >
<title>common_interrupt (43 samples, 0.19%)</title><rect x="931.5" y="501" width="2.3" height="15.0" fill="rgb(216,43,2)" rx="2" ry="2" />
<text  x="934.54" y="511.5" ></text>
</g>
<g >
<title>[unknown] (7 samples, 0.03%)</title><rect x="1189.6" y="565" width="0.4" height="15.0" fill="rgb(212,185,21)" rx="2" ry="2" />
<text  x="1192.64" y="575.5" ></text>
</g>
<g >
<title>do_anonymous_page (14,924 samples, 65.34%)</title><rect x="17.8" y="453" width="771.0" height="15.0" fill="rgb(225,53,27)" rx="2" ry="2" />
<text  x="20.80" y="463.5" >do_anonymous_page</text>
</g>
<g >
<title>__hrtimer_run_queues (16 samples, 0.07%)</title><rect x="785.6" y="309" width="0.9" height="15.0" fill="rgb(219,97,2)" rx="2" ry="2" />
<text  x="788.65" y="319.5" ></text>
</g>
<g >
<title>snd_pcm_period_elapsed (3 samples, 0.01%)</title><rect x="786.6" y="181" width="0.1" height="15.0" fill="rgb(246,216,25)" rx="2" ry="2" />
<text  x="789.58" y="191.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (2 samples, 0.01%)</title><rect x="17.5" y="405" width="0.1" height="15.0" fill="rgb(239,225,0)" rx="2" ry="2" />
<text  x="20.54" y="415.5" ></text>
</g>
<g >
<title>__common_interrupt (2 samples, 0.01%)</title><rect x="789.4" y="373" width="0.1" height="15.0" fill="rgb(218,100,43)" rx="2" ry="2" />
<text  x="792.37" y="383.5" ></text>
</g>
<g >
<title>__const_udelay (2 samples, 0.01%)</title><rect x="1187.7" y="293" width="0.1" height="15.0" fill="rgb(251,55,22)" rx="2" ry="2" />
<text  x="1190.73" y="303.5" ></text>
</g>
<g >
<title>amd_pmu_wait_on_overflow (5 samples, 0.02%)</title><rect x="789.0" y="357" width="0.2" height="15.0" fill="rgb(253,179,20)" rx="2" ry="2" />
<text  x="791.95" y="367.5" ></text>
</g>
<g >
<title>handle_fasteoi_irq (53 samples, 0.23%)</title><rect x="928.6" y="469" width="2.7" height="15.0" fill="rgb(240,122,9)" rx="2" ry="2" />
<text  x="931.59" y="479.5" ></text>
</g>
<g >
<title>scheduler_tick (16 samples, 0.07%)</title><rect x="785.6" y="245" width="0.9" height="15.0" fill="rgb(226,166,43)" rx="2" ry="2" />
<text  x="788.65" y="255.5" ></text>
</g>
<g >
<title>amd_pmu_disable_event (2 samples, 0.01%)</title><rect x="789.3" y="309" width="0.1" height="15.0" fill="rgb(208,226,2)" rx="2" ry="2" />
<text  x="792.26" y="319.5" ></text>
</g>
<g >
<title>native_send_call_func_single_ipi (8 samples, 0.04%)</title><rect x="786.8" y="133" width="0.4" height="15.0" fill="rgb(248,69,35)" rx="2" ry="2" />
<text  x="789.78" y="143.5" ></text>
</g>
<g >
<title>[unknown] (21 samples, 0.09%)</title><rect x="10.0" y="565" width="1.1" height="15.0" fill="rgb(235,82,11)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>__wake_up_common (8 samples, 0.04%)</title><rect x="785.2" y="165" width="0.4" height="15.0" fill="rgb(235,190,35)" rx="2" ry="2" />
<text  x="788.18" y="175.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (25 samples, 0.11%)</title><rect x="1188.3" y="533" width="1.3" height="15.0" fill="rgb(225,89,33)" rx="2" ry="2" />
<text  x="1191.35" y="543.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (8 samples, 0.04%)</title><rect x="16.5" y="453" width="0.4" height="15.0" fill="rgb(232,102,7)" rx="2" ry="2" />
<text  x="19.51" y="463.5" ></text>
</g>
<g >
<title>load_elf_binary (7 samples, 0.03%)</title><rect x="1189.6" y="453" width="0.4" height="15.0" fill="rgb(215,209,1)" rx="2" ry="2" />
<text  x="1192.64" y="463.5" ></text>
</g>
<g >
<title>try_to_wake_up (7 samples, 0.03%)</title><rect x="1187.3" y="261" width="0.4" height="15.0" fill="rgb(237,137,18)" rx="2" ry="2" />
<text  x="1190.31" y="271.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (2 samples, 0.01%)</title><rect x="931.3" y="469" width="0.1" height="15.0" fill="rgb(247,159,35)" rx="2" ry="2" />
<text  x="934.33" y="479.5" ></text>
</g>
<g >
<title>sysvec_call_function_single (2 samples, 0.01%)</title><rect x="1188.1" y="501" width="0.1" height="15.0" fill="rgb(209,155,14)" rx="2" ry="2" />
<text  x="1191.09" y="511.5" ></text>
</g>
<g >
<title>update_process_times (16 samples, 0.07%)</title><rect x="785.6" y="261" width="0.9" height="15.0" fill="rgb(206,186,17)" rx="2" ry="2" />
<text  x="788.65" y="271.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (4 samples, 0.02%)</title><rect x="1187.8" y="469" width="0.2" height="15.0" fill="rgb(249,19,54)" rx="2" ry="2" />
<text  x="1190.83" y="479.5" ></text>
</g>
<g >
<title>__sched_text_start (10 samples, 0.04%)</title><rect x="789.0" y="437" width="0.5" height="15.0" fill="rgb(241,216,36)" rx="2" ry="2" />
<text  x="791.95" y="447.5" ></text>
</g>
<g >
<title>__alloc_pages (14,911 samples, 65.28%)</title><rect x="18.0" y="421" width="770.3" height="15.0" fill="rgb(210,153,41)" rx="2" ry="2" />
<text  x="21.01" y="431.5" >__alloc_pages</text>
</g>
<g >
<title>try_to_wake_up (8 samples, 0.04%)</title><rect x="785.2" y="117" width="0.4" height="15.0" fill="rgb(251,164,31)" rx="2" ry="2" />
<text  x="788.18" y="127.5" ></text>
</g>
<g >
<title>amd_pmu_disable_event (6 samples, 0.03%)</title><rect x="10.4" y="213" width="0.3" height="15.0" fill="rgb(230,196,27)" rx="2" ry="2" />
<text  x="13.41" y="223.5" ></text>
</g>
<g >
<title>asm_common_interrupt (2 samples, 0.01%)</title><rect x="789.4" y="405" width="0.1" height="15.0" fill="rgb(226,99,7)" rx="2" ry="2" />
<text  x="792.37" y="415.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (7 samples, 0.03%)</title><rect x="1187.7" y="501" width="0.4" height="15.0" fill="rgb(210,11,2)" rx="2" ry="2" />
<text  x="1190.73" y="511.5" ></text>
</g>
<g >
<title>snd_ensoniq_playback1_pointer (2 samples, 0.01%)</title><rect x="786.6" y="149" width="0.1" height="15.0" fill="rgb(250,143,14)" rx="2" ry="2" />
<text  x="789.58" y="159.5" ></text>
</g>
<g >
<title>amd_pmu_disable_all (2 samples, 0.01%)</title><rect x="931.3" y="357" width="0.1" height="15.0" fill="rgb(250,181,38)" rx="2" ry="2" />
<text  x="934.33" y="367.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (150 samples, 0.66%)</title><rect x="1179.9" y="421" width="7.8" height="15.0" fill="rgb(252,9,12)" rx="2" ry="2" />
<text  x="1182.93" y="431.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (7 samples, 0.03%)</title><rect x="1187.3" y="325" width="0.4" height="15.0" fill="rgb(211,210,14)" rx="2" ry="2" />
<text  x="1190.31" y="335.5" ></text>
</g>
<g >
<title>handle_irq_event (3 samples, 0.01%)</title><rect x="1187.8" y="389" width="0.2" height="15.0" fill="rgb(252,216,29)" rx="2" ry="2" />
<text  x="1190.83" y="399.5" ></text>
</g>
<g >
<title>do_group_exit (25 samples, 0.11%)</title><rect x="1188.3" y="517" width="1.3" height="15.0" fill="rgb(249,70,12)" rx="2" ry="2" />
<text  x="1191.35" y="527.5" ></text>
</g>
<g >
<title>perf_pmu_disable.part.0 (2 samples, 0.01%)</title><rect x="1187.7" y="357" width="0.1" height="15.0" fill="rgb(252,84,35)" rx="2" ry="2" />
<text  x="1190.73" y="367.5" ></text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (3 samples, 0.01%)</title><rect x="788.4" y="437" width="0.2" height="15.0" fill="rgb(246,56,21)" rx="2" ry="2" />
<text  x="791.44" y="447.5" ></text>
</g>
<g >
<title>begin_new_exec (7 samples, 0.03%)</title><rect x="1189.6" y="437" width="0.4" height="15.0" fill="rgb(243,206,29)" rx="2" ry="2" />
<text  x="1192.64" y="447.5" ></text>
</g>
<g >
<title>handle_irq_event (2 samples, 0.01%)</title><rect x="17.5" y="421" width="0.1" height="15.0" fill="rgb(248,112,43)" rx="2" ry="2" />
<text  x="20.54" y="431.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (12 samples, 0.05%)</title><rect x="788.8" y="485" width="0.7" height="15.0" fill="rgb(233,144,34)" rx="2" ry="2" />
<text  x="791.85" y="495.5" ></text>
</g>
<g >
<title>main (22,786 samples, 99.76%)</title><rect x="11.1" y="549" width="1177.1" height="15.0" fill="rgb(213,122,50)" rx="2" ry="2" />
<text  x="14.08" y="559.5" >main</text>
</g>
<g >
<title>handle_irq_event_percpu (2 samples, 0.01%)</title><rect x="789.4" y="325" width="0.1" height="15.0" fill="rgb(229,19,8)" rx="2" ry="2" />
<text  x="792.37" y="335.5" ></text>
</g>
<g >
<title>clear_page_erms (53 samples, 0.23%)</title><rect x="18.0" y="373" width="2.7" height="15.0" fill="rgb(247,20,32)" rx="2" ry="2" />
<text  x="21.01" y="383.5" ></text>
</g>
<g >
<title>ctx_resched (7 samples, 0.03%)</title><rect x="1189.6" y="405" width="0.4" height="15.0" fill="rgb(246,198,15)" rx="2" ry="2" />
<text  x="1192.64" y="415.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="1187.7" y="485" width="0.1" height="15.0" fill="rgb(243,8,8)" rx="2" ry="2" />
<text  x="1190.73" y="495.5" ></text>
</g>
<g >
<title>asm_common_interrupt (151 samples, 0.66%)</title><rect x="1179.9" y="517" width="7.8" height="15.0" fill="rgb(219,79,24)" rx="2" ry="2" />
<text  x="1182.93" y="527.5" ></text>
</g>
<g >
<title>free_unref_page_commit (10 samples, 0.04%)</title><rect x="1189.0" y="325" width="0.5" height="15.0" fill="rgb(233,73,32)" rx="2" ry="2" />
<text  x="1191.97" y="335.5" ></text>
</g>
<g >
<title>__wake_up (2 samples, 0.01%)</title><rect x="933.7" y="341" width="0.1" height="15.0" fill="rgb(216,134,21)" rx="2" ry="2" />
<text  x="936.66" y="351.5" ></text>
</g>
<g >
<title>snd_audiopci_interrupt (43 samples, 0.19%)</title><rect x="931.5" y="405" width="2.3" height="15.0" fill="rgb(209,159,50)" rx="2" ry="2" />
<text  x="934.54" y="415.5" ></text>
</g>
<g >
<title>snd_ensoniq_playback1_pointer (2 samples, 0.01%)</title><rect x="933.6" y="357" width="0.1" height="15.0" fill="rgb(221,137,22)" rx="2" ry="2" />
<text  x="936.55" y="367.5" ></text>
</g>
<g >
<title>x86_pmu_stop (5 samples, 0.02%)</title><rect x="786.2" y="213" width="0.3" height="15.0" fill="rgb(222,1,6)" rx="2" ry="2" />
<text  x="789.21" y="223.5" ></text>
</g>
<g >
<title>asm_common_interrupt (2 samples, 0.01%)</title><rect x="933.8" y="453" width="0.1" height="15.0" fill="rgb(242,185,34)" rx="2" ry="2" />
<text  x="936.76" y="463.5" ></text>
</g>
<g >
<title>call_timer_fn (5 samples, 0.02%)</title><rect x="787.2" y="293" width="0.3" height="15.0" fill="rgb(249,94,53)" rx="2" ry="2" />
<text  x="790.20" y="303.5" ></text>
</g>
<g >
<title>snd_pcm_period_elapsed (23 samples, 0.10%)</title><rect x="784.4" y="245" width="1.2" height="15.0" fill="rgb(253,29,4)" rx="2" ry="2" />
<text  x="787.41" y="255.5" ></text>
</g>
<g >
<title>amd_pmu_wait_on_overflow (6 samples, 0.03%)</title><rect x="10.4" y="197" width="0.3" height="15.0" fill="rgb(212,0,43)" rx="2" ry="2" />
<text  x="13.41" y="207.5" ></text>
</g>
<g >
<title>zap_pte_range.isra.0 (25 samples, 0.11%)</title><rect x="1188.3" y="405" width="1.3" height="15.0" fill="rgb(238,166,3)" rx="2" ry="2" />
<text  x="1191.35" y="415.5" ></text>
</g>
<g >
<title>__smp_call_single_queue (7 samples, 0.03%)</title><rect x="1187.3" y="229" width="0.4" height="15.0" fill="rgb(239,165,19)" rx="2" ry="2" />
<text  x="1190.31" y="239.5" ></text>
</g>
<g >
<title>common_interrupt (53 samples, 0.23%)</title><rect x="928.6" y="501" width="2.7" height="15.0" fill="rgb(223,96,43)" rx="2" ry="2" />
<text  x="931.59" y="511.5" ></text>
</g>
<g >
<title>tty_write (15 samples, 0.07%)</title><rect x="10.1" y="437" width="0.7" height="15.0" fill="rgb(231,50,27)" rx="2" ry="2" />
<text  x="13.05" y="447.5" ></text>
</g>
<g >
<title>improve (1,313 samples, 5.75%)</title><rect x="789.5" y="533" width="67.9" height="15.0" fill="rgb(252,220,48)" rx="2" ry="2" />
<text  x="792.52" y="543.5" >improve</text>
</g>
<g >
<title>__perf_event_task_sched_out (12 samples, 0.05%)</title><rect x="10.1" y="325" width="0.6" height="15.0" fill="rgb(236,10,39)" rx="2" ry="2" />
<text  x="13.10" y="335.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (8 samples, 0.04%)</title><rect x="785.2" y="181" width="0.4" height="15.0" fill="rgb(224,79,47)" rx="2" ry="2" />
<text  x="788.18" y="191.5" ></text>
</g>
<g >
<title>do_syscall_64 (7 samples, 0.03%)</title><rect x="1189.6" y="533" width="0.4" height="15.0" fill="rgb(214,204,7)" rx="2" ry="2" />
<text  x="1192.64" y="543.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (17 samples, 0.07%)</title><rect x="785.6" y="341" width="0.9" height="15.0" fill="rgb(238,181,42)" rx="2" ry="2" />
<text  x="788.65" y="351.5" ></text>
</g>
<g >
<title>amd_pmu_wait_on_overflow (2 samples, 0.01%)</title><rect x="1187.7" y="309" width="0.1" height="15.0" fill="rgb(213,164,27)" rx="2" ry="2" />
<text  x="1190.73" y="319.5" ></text>
</g>
<g >
<title>handle_fasteoi_irq (3 samples, 0.01%)</title><rect x="1187.8" y="405" width="0.2" height="15.0" fill="rgb(206,123,49)" rx="2" ry="2" />
<text  x="1190.83" y="415.5" ></text>
</g>
<g >
<title>x86_pmu_disable (2 samples, 0.01%)</title><rect x="931.3" y="373" width="0.1" height="15.0" fill="rgb(243,125,35)" rx="2" ry="2" />
<text  x="934.33" y="383.5" ></text>
</g>
<g >
<title>uhci_get_current_frame_number.part.0 (2 samples, 0.01%)</title><rect x="787.4" y="213" width="0.1" height="15.0" fill="rgb(210,203,29)" rx="2" ry="2" />
<text  x="790.35" y="223.5" ></text>
</g>
<g >
<title>exc_page_fault (14,944 samples, 65.43%)</title><rect x="17.4" y="517" width="772.1" height="15.0" fill="rgb(217,143,32)" rx="2" ry="2" />
<text  x="20.44" y="527.5" >exc_page_fault</text>
</g>
<g >
<title>asm_common_interrupt (157 samples, 0.69%)</title><rect x="777.5" y="373" width="8.1" height="15.0" fill="rgb(219,65,31)" rx="2" ry="2" />
<text  x="780.53" y="383.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (53 samples, 0.23%)</title><rect x="928.6" y="421" width="2.7" height="15.0" fill="rgb(244,220,44)" rx="2" ry="2" />
<text  x="931.59" y="431.5" ></text>
</g>
<g >
<title>__wake_up (8 samples, 0.04%)</title><rect x="785.2" y="197" width="0.4" height="15.0" fill="rgb(219,22,15)" rx="2" ry="2" />
<text  x="788.18" y="207.5" ></text>
</g>
<g >
<title>send_call_function_single_ipi (8 samples, 0.04%)</title><rect x="785.2" y="69" width="0.4" height="15.0" fill="rgb(219,149,52)" rx="2" ry="2" />
<text  x="788.18" y="79.5" ></text>
</g>
<g >
<title>rcu_report_qs_rnp (8 samples, 0.04%)</title><rect x="786.8" y="277" width="0.4" height="15.0" fill="rgb(220,81,32)" rx="2" ry="2" />
<text  x="789.78" y="287.5" ></text>
</g>
<g >
<title>amd_pmu_wait_on_overflow (5 samples, 0.02%)</title><rect x="786.2" y="181" width="0.3" height="15.0" fill="rgb(212,148,44)" rx="2" ry="2" />
<text  x="789.21" y="191.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (8 samples, 0.04%)</title><rect x="16.5" y="437" width="0.4" height="15.0" fill="rgb(242,75,2)" rx="2" ry="2" />
<text  x="19.51" y="447.5" ></text>
</g>
<g >
<title>__libc_start_main (22,786 samples, 99.76%)</title><rect x="11.1" y="565" width="1177.1" height="15.0" fill="rgb(212,26,11)" rx="2" ry="2" />
<text  x="14.08" y="575.5" >__libc_start_main</text>
</g>
<g >
<title>prep_new_page (2 samples, 0.01%)</title><rect x="787.5" y="389" width="0.1" height="15.0" fill="rgb(250,143,15)" rx="2" ry="2" />
<text  x="790.51" y="399.5" ></text>
</g>
<g >
<title>amd_pmu_disable_all (2 samples, 0.01%)</title><rect x="1188.1" y="357" width="0.1" height="15.0" fill="rgb(214,161,47)" rx="2" ry="2" />
<text  x="1191.09" y="367.5" ></text>
</g>
<g >
<title>ttwu_queue_wakelist (7 samples, 0.03%)</title><rect x="1187.3" y="245" width="0.4" height="15.0" fill="rgb(215,38,42)" rx="2" ry="2" />
<text  x="1190.31" y="255.5" ></text>
</g>
<g >
<title>native_write_msr (7 samples, 0.03%)</title><rect x="1187.3" y="181" width="0.4" height="15.0" fill="rgb(218,169,10)" rx="2" ry="2" />
<text  x="1190.31" y="191.5" ></text>
</g>
<g >
<title>__const_udelay (3 samples, 0.01%)</title><rect x="789.0" y="341" width="0.1" height="15.0" fill="rgb(213,135,46)" rx="2" ry="2" />
<text  x="791.95" y="351.5" ></text>
</g>
<g >
<title>perf_event_task_tick (2 samples, 0.01%)</title><rect x="1187.7" y="373" width="0.1" height="15.0" fill="rgb(253,100,8)" rx="2" ry="2" />
<text  x="1190.73" y="383.5" ></text>
</g>
<g >
<title>__pagevec_lru_add (2 samples, 0.01%)</title><rect x="788.4" y="405" width="0.1" height="15.0" fill="rgb(234,203,18)" rx="2" ry="2" />
<text  x="791.44" y="415.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (2 samples, 0.01%)</title><rect x="1188.1" y="469" width="0.1" height="15.0" fill="rgb(210,186,11)" rx="2" ry="2" />
<text  x="1191.09" y="479.5" ></text>
</g>
<g >
<title>__alloc_pages_slowpath.constprop.0 (55 samples, 0.24%)</title><rect x="18.0" y="405" width="2.8" height="15.0" fill="rgb(224,207,12)" rx="2" ry="2" />
<text  x="21.01" y="415.5" ></text>
</g>
<g >
<title>update_process_times (2 samples, 0.01%)</title><rect x="1187.7" y="405" width="0.1" height="15.0" fill="rgb(240,67,1)" rx="2" ry="2" />
<text  x="1190.73" y="415.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (43 samples, 0.19%)</title><rect x="931.5" y="421" width="2.3" height="15.0" fill="rgb(224,29,16)" rx="2" ry="2" />
<text  x="934.54" y="431.5" ></text>
</g>
<g >
<title>handle_fasteoi_irq (43 samples, 0.19%)</title><rect x="931.5" y="469" width="2.3" height="15.0" fill="rgb(239,4,13)" rx="2" ry="2" />
<text  x="934.54" y="479.5" ></text>
</g>
<g >
<title>perf_pmu_disable.part.0 (6 samples, 0.03%)</title><rect x="789.0" y="405" width="0.3" height="15.0" fill="rgb(245,166,20)" rx="2" ry="2" />
<text  x="791.95" y="415.5" ></text>
</g>
<g >
<title>rmqueue_bulk.constprop.0 (14 samples, 0.06%)</title><rect x="787.6" y="373" width="0.7" height="15.0" fill="rgb(240,140,6)" rx="2" ry="2" />
<text  x="790.61" y="383.5" ></text>
</g>
<g >
<title>improve2 (1,436 samples, 6.29%)</title><rect x="857.4" y="533" width="74.1" height="15.0" fill="rgb(235,108,37)" rx="2" ry="2" />
<text  x="860.35" y="543.5" >improve2</text>
</g>
<g >
<title>tick_sched_handle.isra.0 (2 samples, 0.01%)</title><rect x="1187.7" y="421" width="0.1" height="15.0" fill="rgb(218,32,27)" rx="2" ry="2" />
<text  x="1190.73" y="431.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (4 samples, 0.02%)</title><rect x="788.6" y="421" width="0.2" height="15.0" fill="rgb(229,95,3)" rx="2" ry="2" />
<text  x="791.59" y="431.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2 samples, 0.01%)</title><rect x="1187.7" y="469" width="0.1" height="15.0" fill="rgb(252,11,22)" rx="2" ry="2" />
<text  x="1190.73" y="479.5" ></text>
</g>
<g >
<title>__common_interrupt (157 samples, 0.69%)</title><rect x="777.5" y="341" width="8.1" height="15.0" fill="rgb(220,158,32)" rx="2" ry="2" />
<text  x="780.53" y="351.5" ></text>
</g>
<g >
<title>pollwake (7 samples, 0.03%)</title><rect x="1187.3" y="293" width="0.4" height="15.0" fill="rgb(245,153,9)" rx="2" ry="2" />
<text  x="1190.31" y="303.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (2 samples, 0.01%)</title><rect x="17.5" y="389" width="0.1" height="15.0" fill="rgb(225,192,7)" rx="2" ry="2" />
<text  x="20.54" y="399.5" ></text>
</g>
<g >
<title>unmap_page_range (25 samples, 0.11%)</title><rect x="1188.3" y="421" width="1.3" height="15.0" fill="rgb(225,145,48)" rx="2" ry="2" />
<text  x="1191.35" y="431.5" ></text>
</g>
<g >
<title>common_interrupt (2 samples, 0.01%)</title><rect x="789.4" y="389" width="0.1" height="15.0" fill="rgb(205,50,36)" rx="2" ry="2" />
<text  x="792.37" y="399.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (7 samples, 0.03%)</title><rect x="1187.7" y="517" width="0.4" height="15.0" fill="rgb(254,11,46)" rx="2" ry="2" />
<text  x="1190.73" y="527.5" ></text>
</g>
<g >
<title>task_ctx_sched_out (6 samples, 0.03%)</title><rect x="10.4" y="309" width="0.3" height="15.0" fill="rgb(206,111,13)" rx="2" ry="2" />
<text  x="13.41" y="319.5" ></text>
</g>
<g >
<title>snd_pcm_update_hw_ptr0 (4 samples, 0.02%)</title><rect x="933.6" y="373" width="0.2" height="15.0" fill="rgb(228,30,40)" rx="2" ry="2" />
<text  x="936.55" y="383.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (7 samples, 0.03%)</title><rect x="1189.6" y="501" width="0.4" height="15.0" fill="rgb(218,18,50)" rx="2" ry="2" />
<text  x="1192.64" y="511.5" ></text>
</g>
<g >
<title>handle_fasteoi_irq (150 samples, 0.66%)</title><rect x="1179.9" y="469" width="7.8" height="15.0" fill="rgb(215,137,36)" rx="2" ry="2" />
<text  x="1182.93" y="479.5" ></text>
</g>
<g >
<title>pollwake (2 samples, 0.01%)</title><rect x="933.7" y="293" width="0.1" height="15.0" fill="rgb(205,116,12)" rx="2" ry="2" />
<text  x="936.66" y="303.5" ></text>
</g>
<g >
<title>asm_common_interrupt (43 samples, 0.19%)</title><rect x="931.5" y="517" width="2.3" height="15.0" fill="rgb(237,115,9)" rx="2" ry="2" />
<text  x="934.54" y="527.5" ></text>
</g>
<g >
<title>__common_interrupt (4 samples, 0.02%)</title><rect x="786.5" y="277" width="0.2" height="15.0" fill="rgb(214,47,40)" rx="2" ry="2" />
<text  x="789.52" y="287.5" ></text>
</g>
<g >
<title>__common_interrupt (43 samples, 0.19%)</title><rect x="931.5" y="485" width="2.3" height="15.0" fill="rgb(227,174,45)" rx="2" ry="2" />
<text  x="934.54" y="495.5" ></text>
</g>
<g >
<title>delay_tsc (2 samples, 0.01%)</title><rect x="1187.7" y="277" width="0.1" height="15.0" fill="rgb(226,131,29)" rx="2" ry="2" />
<text  x="1190.73" y="287.5" ></text>
</g>
<g >
<title>handle_fasteoi_irq (2 samples, 0.01%)</title><rect x="789.4" y="357" width="0.1" height="15.0" fill="rgb(236,69,30)" rx="2" ry="2" />
<text  x="792.37" y="367.5" ></text>
</g>
<g >
<title>__const_udelay (5 samples, 0.02%)</title><rect x="786.2" y="165" width="0.3" height="15.0" fill="rgb(241,123,28)" rx="2" ry="2" />
<text  x="789.21" y="175.5" ></text>
</g>
<g >
<title>mem_cgroup_charge (4 samples, 0.02%)</title><rect x="788.6" y="437" width="0.2" height="15.0" fill="rgb(212,113,18)" rx="2" ry="2" />
<text  x="791.59" y="447.5" ></text>
</g>
<g >
<title>release_pages (18 samples, 0.08%)</title><rect x="1188.7" y="357" width="0.9" height="15.0" fill="rgb(246,18,29)" rx="2" ry="2" />
<text  x="1191.66" y="367.5" ></text>
</g>
<g >
<title>task_ctx_sched_out (2 samples, 0.01%)</title><rect x="789.3" y="405" width="0.1" height="15.0" fill="rgb(254,126,53)" rx="2" ry="2" />
<text  x="792.26" y="415.5" ></text>
</g>
<g >
<title>common_interrupt (2 samples, 0.01%)</title><rect x="17.5" y="469" width="0.1" height="15.0" fill="rgb(228,193,24)" rx="2" ry="2" />
<text  x="20.54" y="479.5" ></text>
</g>
<g >
<title>handle_irq_event (43 samples, 0.19%)</title><rect x="931.5" y="453" width="2.3" height="15.0" fill="rgb(241,137,46)" rx="2" ry="2" />
<text  x="934.54" y="463.5" ></text>
</g>
<g >
<title>snd_audiopci_interrupt (2 samples, 0.01%)</title><rect x="933.8" y="341" width="0.1" height="15.0" fill="rgb(245,38,34)" rx="2" ry="2" />
<text  x="936.76" y="351.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (36 samples, 0.16%)</title><rect x="785.6" y="373" width="1.9" height="15.0" fill="rgb(214,19,14)" rx="2" ry="2" />
<text  x="788.65" y="383.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (43 samples, 0.19%)</title><rect x="931.5" y="437" width="2.3" height="15.0" fill="rgb(250,177,0)" rx="2" ry="2" />
<text  x="934.54" y="447.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (2 samples, 0.01%)</title><rect x="1188.8" y="325" width="0.1" height="15.0" fill="rgb(248,82,51)" rx="2" ry="2" />
<text  x="1191.81" y="335.5" ></text>
</g>
<g >
<title>free_unref_page_list (12 samples, 0.05%)</title><rect x="1188.9" y="341" width="0.6" height="15.0" fill="rgb(239,8,29)" rx="2" ry="2" />
<text  x="1191.92" y="351.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_out (2 samples, 0.01%)</title><rect x="931.3" y="405" width="0.1" height="15.0" fill="rgb(254,204,30)" rx="2" ry="2" />
<text  x="934.33" y="415.5" ></text>
</g>
<g >
<title>send_call_function_single_ipi (2 samples, 0.01%)</title><rect x="933.7" y="213" width="0.1" height="15.0" fill="rgb(241,144,15)" rx="2" ry="2" />
<text  x="936.66" y="223.5" ></text>
</g>
<g >
<title>native_read_msr (2 samples, 0.01%)</title><rect x="1188.1" y="325" width="0.1" height="15.0" fill="rgb(240,99,3)" rx="2" ry="2" />
<text  x="1191.09" y="335.5" ></text>
</g>
<g >
<title>__cond_resched (12 samples, 0.05%)</title><rect x="10.1" y="373" width="0.6" height="15.0" fill="rgb(240,143,53)" rx="2" ry="2" />
<text  x="13.10" y="383.5" ></text>
</g>
<g >
<title>handle_irq_event (2 samples, 0.01%)</title><rect x="933.8" y="389" width="0.1" height="15.0" fill="rgb(235,220,49)" rx="2" ry="2" />
<text  x="936.76" y="399.5" ></text>
</g>
<g >
<title>default_wake_function (2 samples, 0.01%)</title><rect x="933.7" y="277" width="0.1" height="15.0" fill="rgb(245,15,5)" rx="2" ry="2" />
<text  x="936.66" y="287.5" ></text>
</g>
<g >
<title>try_to_wake_up (2 samples, 0.01%)</title><rect x="933.7" y="261" width="0.1" height="15.0" fill="rgb(242,32,48)" rx="2" ry="2" />
<text  x="936.66" y="271.5" ></text>
</g>
<g >
<title>snd_pcm_update_state (8 samples, 0.04%)</title><rect x="785.2" y="213" width="0.4" height="15.0" fill="rgb(210,127,34)" rx="2" ry="2" />
<text  x="788.18" y="223.5" ></text>
</g>
<g >
<title>snd_audiopci_interrupt (53 samples, 0.23%)</title><rect x="928.6" y="405" width="2.7" height="15.0" fill="rgb(221,125,22)" rx="2" ry="2" />
<text  x="931.59" y="415.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (3 samples, 0.01%)</title><rect x="1188.5" y="373" width="0.1" height="15.0" fill="rgb(206,144,14)" rx="2" ry="2" />
<text  x="1191.45" y="383.5" ></text>
</g>
<g >
<title>preempt_schedule_common (12 samples, 0.05%)</title><rect x="10.1" y="357" width="0.6" height="15.0" fill="rgb(235,225,32)" rx="2" ry="2" />
<text  x="13.10" y="367.5" ></text>
</g>
<g >
<title>unmap_single_vma (25 samples, 0.11%)</title><rect x="1188.3" y="437" width="1.3" height="15.0" fill="rgb(223,60,49)" rx="2" ry="2" />
<text  x="1191.35" y="447.5" ></text>
</g>
<g >
<title>__common_interrupt (2 samples, 0.01%)</title><rect x="17.5" y="453" width="0.1" height="15.0" fill="rgb(218,35,27)" rx="2" ry="2" />
<text  x="20.54" y="463.5" ></text>
</g>
<g >
<title>do_user_addr_fault (14,930 samples, 65.36%)</title><rect x="17.5" y="501" width="771.3" height="15.0" fill="rgb(240,211,18)" rx="2" ry="2" />
<text  x="20.49" y="511.5" >do_user_addr_fault</text>
</g>
<g >
<title>snd_audiopci_interrupt (3 samples, 0.01%)</title><rect x="1187.8" y="341" width="0.2" height="15.0" fill="rgb(225,227,10)" rx="2" ry="2" />
<text  x="1190.83" y="351.5" ></text>
</g>
<g >
<title>__wake_up_common (7 samples, 0.03%)</title><rect x="1187.3" y="309" width="0.4" height="15.0" fill="rgb(218,110,41)" rx="2" ry="2" />
<text  x="1190.31" y="319.5" ></text>
</g>
<g >
<title>irq_exit_rcu (18 samples, 0.08%)</title><rect x="786.5" y="341" width="1.0" height="15.0" fill="rgb(207,11,37)" rx="2" ry="2" />
<text  x="789.52" y="351.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (2 samples, 0.01%)</title><rect x="1187.7" y="453" width="0.1" height="15.0" fill="rgb(218,13,3)" rx="2" ry="2" />
<text  x="1190.73" y="463.5" ></text>
</g>
<g >
<title>do_syscall_64 (17 samples, 0.07%)</title><rect x="10.0" y="517" width="0.9" height="15.0" fill="rgb(205,63,4)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>x86_pmu_stop (2 samples, 0.01%)</title><rect x="789.3" y="325" width="0.1" height="15.0" fill="rgb(207,219,7)" rx="2" ry="2" />
<text  x="792.26" y="335.5" ></text>
</g>
<g >
<title>alloc_pages_vma (14,914 samples, 65.29%)</title><rect x="17.9" y="437" width="770.5" height="15.0" fill="rgb(236,68,17)" rx="2" ry="2" />
<text  x="20.90" y="447.5" >alloc_pages_vma</text>
</g>
<g >
<title>ex111 (22,834 samples, 99.97%)</title><rect x="10.0" y="581" width="1179.6" height="15.0" fill="rgb(212,81,23)" rx="2" ry="2" />
<text  x="13.00" y="591.5" >ex111</text>
</g>
<g >
<title>__const_udelay (4 samples, 0.02%)</title><rect x="10.1" y="245" width="0.2" height="15.0" fill="rgb(220,218,14)" rx="2" ry="2" />
<text  x="13.10" y="255.5" ></text>
</g>
<g >
<title>snd_audiopci_interrupt (4 samples, 0.02%)</title><rect x="786.5" y="197" width="0.2" height="15.0" fill="rgb(245,219,5)" rx="2" ry="2" />
<text  x="789.52" y="207.5" ></text>
</g>
<g >
<title>pty_write (2 samples, 0.01%)</title><rect x="10.7" y="389" width="0.1" height="15.0" fill="rgb(250,54,4)" rx="2" ry="2" />
<text  x="13.72" y="399.5" ></text>
</g>
<g >
<title>common_interrupt (8 samples, 0.04%)</title><rect x="16.5" y="517" width="0.4" height="15.0" fill="rgb(234,56,18)" rx="2" ry="2" />
<text  x="19.51" y="527.5" ></text>
</g>
<g >
<title>snd_audiopci_interrupt (156 samples, 0.68%)</title><rect x="777.5" y="261" width="8.1" height="15.0" fill="rgb(228,19,38)" rx="2" ry="2" />
<text  x="780.53" y="271.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (12 samples, 0.05%)</title><rect x="788.8" y="469" width="0.7" height="15.0" fill="rgb(244,63,40)" rx="2" ry="2" />
<text  x="791.85" y="479.5" ></text>
</g>
<g >
<title>native_send_call_func_single_ipi (8 samples, 0.04%)</title><rect x="785.2" y="53" width="0.4" height="15.0" fill="rgb(232,146,4)" rx="2" ry="2" />
<text  x="788.18" y="63.5" ></text>
</g>
<g >
<title>tick_sched_timer (2 samples, 0.01%)</title><rect x="1187.7" y="437" width="0.1" height="15.0" fill="rgb(233,135,36)" rx="2" ry="2" />
<text  x="1190.73" y="447.5" ></text>
</g>
<g >
<title>amd_pmu_wait_on_overflow (11 samples, 0.05%)</title><rect x="785.6" y="165" width="0.6" height="15.0" fill="rgb(247,9,13)" rx="2" ry="2" />
<text  x="788.65" y="175.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (8 samples, 0.04%)</title><rect x="1189.1" y="309" width="0.4" height="15.0" fill="rgb(234,172,35)" rx="2" ry="2" />
<text  x="1192.07" y="319.5" ></text>
</g>
<g >
<title>pollwake (8 samples, 0.04%)</title><rect x="785.2" y="149" width="0.4" height="15.0" fill="rgb(224,4,40)" rx="2" ry="2" />
<text  x="788.18" y="159.5" ></text>
</g>
<g >
<title>asm_common_interrupt (8 samples, 0.04%)</title><rect x="16.5" y="533" width="0.4" height="15.0" fill="rgb(214,108,30)" rx="2" ry="2" />
<text  x="19.51" y="543.5" ></text>
</g>
<g >
<title>x86_pmu_disable (11 samples, 0.05%)</title><rect x="785.6" y="197" width="0.6" height="15.0" fill="rgb(209,3,38)" rx="2" ry="2" />
<text  x="788.65" y="207.5" ></text>
</g>
<g >
<title>perf_pmu_disable.part.0 (11 samples, 0.05%)</title><rect x="785.6" y="213" width="0.6" height="15.0" fill="rgb(253,204,28)" rx="2" ry="2" />
<text  x="788.65" y="223.5" ></text>
</g>
<g >
<title>scheduler_tick (2 samples, 0.01%)</title><rect x="1187.7" y="389" width="0.1" height="15.0" fill="rgb(220,136,37)" rx="2" ry="2" />
<text  x="1190.73" y="399.5" ></text>
</g>
<g >
<title>amd_pmu_wait_on_overflow (6 samples, 0.03%)</title><rect x="10.1" y="261" width="0.3" height="15.0" fill="rgb(242,14,39)" rx="2" ry="2" />
<text  x="13.10" y="271.5" ></text>
</g>
<g >
<title>snd_pcm_update_hw_ptr0 (3 samples, 0.01%)</title><rect x="786.6" y="165" width="0.1" height="15.0" fill="rgb(249,148,41)" rx="2" ry="2" />
<text  x="789.58" y="175.5" ></text>
</g>
<g >
<title>snd_ensoniq_playback1_pointer (5 samples, 0.02%)</title><rect x="931.1" y="357" width="0.2" height="15.0" fill="rgb(233,21,28)" rx="2" ry="2" />
<text  x="934.07" y="367.5" ></text>
</g>
<g >
<title>snd_pcm_period_elapsed (5 samples, 0.02%)</title><rect x="931.1" y="389" width="0.2" height="15.0" fill="rgb(212,94,26)" rx="2" ry="2" />
<text  x="934.07" y="399.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (17 samples, 0.07%)</title><rect x="785.6" y="325" width="0.9" height="15.0" fill="rgb(227,32,16)" rx="2" ry="2" />
<text  x="788.65" y="335.5" ></text>
</g>
<g >
<title>handle_irq_event (8 samples, 0.04%)</title><rect x="16.5" y="469" width="0.4" height="15.0" fill="rgb(207,125,17)" rx="2" ry="2" />
<text  x="19.51" y="479.5" ></text>
</g>
<g >
<title>run_timer_softirq (5 samples, 0.02%)</title><rect x="787.2" y="309" width="0.3" height="15.0" fill="rgb(226,73,43)" rx="2" ry="2" />
<text  x="790.20" y="319.5" ></text>
</g>
<g >
<title>exec_binprm (7 samples, 0.03%)</title><rect x="1189.6" y="469" width="0.4" height="15.0" fill="rgb(235,90,54)" rx="2" ry="2" />
<text  x="1192.64" y="479.5" ></text>
</g>
<g >
<title>rmqueue (14 samples, 0.06%)</title><rect x="787.6" y="389" width="0.7" height="15.0" fill="rgb(243,154,53)" rx="2" ry="2" />
<text  x="790.61" y="399.5" ></text>
</g>
<g >
<title>uhci_check_ports (2 samples, 0.01%)</title><rect x="787.2" y="229" width="0.2" height="15.0" fill="rgb(228,68,22)" rx="2" ry="2" />
<text  x="790.25" y="239.5" ></text>
</g>
<g >
<title>rcu_core_si (9 samples, 0.04%)</title><rect x="786.7" y="309" width="0.5" height="15.0" fill="rgb(234,68,4)" rx="2" ry="2" />
<text  x="789.73" y="319.5" ></text>
</g>
<g >
<title>send_call_function_single_ipi (7 samples, 0.03%)</title><rect x="1187.3" y="213" width="0.4" height="15.0" fill="rgb(244,128,12)" rx="2" ry="2" />
<text  x="1190.31" y="223.5" ></text>
</g>
<g >
<title>swake_up_one (8 samples, 0.04%)</title><rect x="786.8" y="245" width="0.4" height="15.0" fill="rgb(220,76,43)" rx="2" ry="2" />
<text  x="789.78" y="255.5" ></text>
</g>
<g >
<title>tick_sched_timer (16 samples, 0.07%)</title><rect x="785.6" y="293" width="0.9" height="15.0" fill="rgb(248,26,39)" rx="2" ry="2" />
<text  x="788.65" y="303.5" ></text>
</g>
<g >
<title>perf_event_exec (7 samples, 0.03%)</title><rect x="1189.6" y="421" width="0.4" height="15.0" fill="rgb(208,161,16)" rx="2" ry="2" />
<text  x="1192.64" y="431.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (18 samples, 0.08%)</title><rect x="1188.7" y="389" width="0.9" height="15.0" fill="rgb(231,210,33)" rx="2" ry="2" />
<text  x="1191.66" y="399.5" ></text>
</g>
<g >
<title>handle_irq_event (157 samples, 0.69%)</title><rect x="777.5" y="309" width="8.1" height="15.0" fill="rgb(209,114,37)" rx="2" ry="2" />
<text  x="780.53" y="319.5" ></text>
</g>
<g >
<title>do_lookup_x (2 samples, 0.01%)</title><rect x="1188.2" y="565" width="0.1" height="15.0" fill="rgb(238,229,53)" rx="2" ry="2" />
<text  x="1191.24" y="575.5" ></text>
</g>
<g >
<title>finish_task_switch (2 samples, 0.01%)</title><rect x="789.4" y="421" width="0.1" height="15.0" fill="rgb(206,179,22)" rx="2" ry="2" />
<text  x="792.37" y="431.5" ></text>
</g>
<g >
<title>delay_tsc (5 samples, 0.02%)</title><rect x="10.4" y="165" width="0.3" height="15.0" fill="rgb(207,91,52)" rx="2" ry="2" />
<text  x="13.41" y="175.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="933.8" y="517" width="0.1" height="15.0" fill="rgb(247,168,47)" rx="2" ry="2" />
<text  x="936.76" y="527.5" ></text>
</g>
<g >
<title>lru_cache_add (3 samples, 0.01%)</title><rect x="788.4" y="421" width="0.2" height="15.0" fill="rgb(238,184,2)" rx="2" ry="2" />
<text  x="791.44" y="431.5" ></text>
</g>
<g >
<title>common_interrupt (2 samples, 0.01%)</title><rect x="933.8" y="437" width="0.1" height="15.0" fill="rgb(219,8,42)" rx="2" ry="2" />
<text  x="936.76" y="447.5" ></text>
</g>
<g >
<title>try_to_wake_up (8 samples, 0.04%)</title><rect x="786.8" y="197" width="0.4" height="15.0" fill="rgb(229,74,9)" rx="2" ry="2" />
<text  x="789.78" y="207.5" ></text>
</g>
<g >
<title>irqentry_exit (13 samples, 0.06%)</title><rect x="788.8" y="501" width="0.7" height="15.0" fill="rgb(242,75,16)" rx="2" ry="2" />
<text  x="791.80" y="511.5" ></text>
</g>
<g >
<title>bprm_execve (7 samples, 0.03%)</title><rect x="1189.6" y="485" width="0.4" height="15.0" fill="rgb(226,10,38)" rx="2" ry="2" />
<text  x="1192.64" y="495.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2 samples, 0.01%)</title><rect x="933.8" y="501" width="0.1" height="15.0" fill="rgb(230,119,26)" rx="2" ry="2" />
<text  x="936.76" y="511.5" ></text>
</g>
<g >
<title>vfs_write (15 samples, 0.07%)</title><rect x="10.1" y="469" width="0.7" height="15.0" fill="rgb(235,117,37)" rx="2" ry="2" />
<text  x="13.05" y="479.5" ></text>
</g>
<g >
<title>amd_pmu_wait_on_overflow (2 samples, 0.01%)</title><rect x="789.3" y="293" width="0.1" height="15.0" fill="rgb(247,212,23)" rx="2" ry="2" />
<text  x="792.26" y="303.5" ></text>
</g>
<g >
<title>native_send_call_func_single_ipi (2 samples, 0.01%)</title><rect x="933.7" y="197" width="0.1" height="15.0" fill="rgb(248,223,41)" rx="2" ry="2" />
<text  x="936.66" y="207.5" ></text>
</g>
<g >
<title>asm_common_interrupt (3 samples, 0.01%)</title><rect x="1187.8" y="453" width="0.2" height="15.0" fill="rgb(214,186,42)" rx="2" ry="2" />
<text  x="1190.83" y="463.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (2 samples, 0.01%)</title><rect x="1188.1" y="453" width="0.1" height="15.0" fill="rgb(241,228,52)" rx="2" ry="2" />
<text  x="1191.09" y="463.5" ></text>
</g>
<g >
<title>__common_interrupt (3 samples, 0.01%)</title><rect x="1187.8" y="421" width="0.2" height="15.0" fill="rgb(235,3,41)" rx="2" ry="2" />
<text  x="1190.83" y="431.5" ></text>
</g>
<g >
<title>perf-exec (7 samples, 0.03%)</title><rect x="1189.6" y="581" width="0.4" height="15.0" fill="rgb(210,121,34)" rx="2" ry="2" />
<text  x="1192.64" y="591.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (3 samples, 0.01%)</title><rect x="1188.8" y="341" width="0.1" height="15.0" fill="rgb(225,163,11)" rx="2" ry="2" />
<text  x="1191.76" y="351.5" ></text>
</g>
<g >
<title>handle_fasteoi_irq (157 samples, 0.69%)</title><rect x="777.5" y="325" width="8.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="780.53" y="335.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (2 samples, 0.01%)</title><rect x="931.3" y="453" width="0.1" height="15.0" fill="rgb(217,223,29)" rx="2" ry="2" />
<text  x="934.33" y="463.5" ></text>
</g>
<g >
<title>snd_pcm_period_elapsed (4 samples, 0.02%)</title><rect x="933.6" y="389" width="0.2" height="15.0" fill="rgb(241,133,24)" rx="2" ry="2" />
<text  x="936.55" y="399.5" ></text>
</g>
<g >
<title>amd_pmu_wait_on_overflow (2 samples, 0.01%)</title><rect x="1188.1" y="341" width="0.1" height="15.0" fill="rgb(205,95,46)" rx="2" ry="2" />
<text  x="1191.09" y="351.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_out (8 samples, 0.04%)</title><rect x="789.0" y="421" width="0.4" height="15.0" fill="rgb(240,224,28)" rx="2" ry="2" />
<text  x="791.95" y="431.5" ></text>
</g>
<g >
<title>snd_pcm_update_state (7 samples, 0.03%)</title><rect x="1187.3" y="357" width="0.4" height="15.0" fill="rgb(215,166,3)" rx="2" ry="2" />
<text  x="1190.31" y="367.5" ></text>
</g>
<g >
<title>irqentry_exit (2 samples, 0.01%)</title><rect x="931.3" y="485" width="0.1" height="15.0" fill="rgb(216,86,15)" rx="2" ry="2" />
<text  x="934.33" y="495.5" ></text>
</g>
<g >
<title>__x64_sys_execve (7 samples, 0.03%)</title><rect x="1189.6" y="517" width="0.4" height="15.0" fill="rgb(209,156,26)" rx="2" ry="2" />
<text  x="1192.64" y="527.5" ></text>
</g>
<g >
<title>snd_pcm_update_state (2 samples, 0.01%)</title><rect x="933.7" y="357" width="0.1" height="15.0" fill="rgb(240,87,9)" rx="2" ry="2" />
<text  x="936.66" y="367.5" ></text>
</g>
<g >
<title>native_write_msr (8 samples, 0.04%)</title><rect x="785.2" y="37" width="0.4" height="15.0" fill="rgb(237,119,43)" rx="2" ry="2" />
<text  x="788.18" y="47.5" ></text>
</g>
<g >
<title>snd_audiopci_interrupt (2 samples, 0.01%)</title><rect x="17.5" y="373" width="0.1" height="15.0" fill="rgb(227,154,52)" rx="2" ry="2" />
<text  x="20.54" y="383.5" ></text>
</g>
<g >
<title>do_exit (25 samples, 0.11%)</title><rect x="1188.3" y="501" width="1.3" height="15.0" fill="rgb(244,151,51)" rx="2" ry="2" />
<text  x="1191.35" y="511.5" ></text>
</g>
<g >
<title>__const_udelay (10 samples, 0.04%)</title><rect x="785.6" y="149" width="0.6" height="15.0" fill="rgb(232,153,31)" rx="2" ry="2" />
<text  x="788.65" y="159.5" ></text>
</g>
<g >
<title>_dl_relocate_object (4 samples, 0.02%)</title><rect x="10.9" y="517" width="0.2" height="15.0" fill="rgb(242,58,54)" rx="2" ry="2" />
<text  x="13.88" y="527.5" ></text>
</g>
<g >
<title>__wake_up (7 samples, 0.03%)</title><rect x="1187.3" y="341" width="0.4" height="15.0" fill="rgb(214,214,17)" rx="2" ry="2" />
<text  x="1190.31" y="351.5" ></text>
</g>
<g >
<title>native_write_msr (2 samples, 0.01%)</title><rect x="933.7" y="181" width="0.1" height="15.0" fill="rgb(205,111,24)" rx="2" ry="2" />
<text  x="936.66" y="191.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (3 samples, 0.01%)</title><rect x="1187.8" y="357" width="0.2" height="15.0" fill="rgb(238,50,15)" rx="2" ry="2" />
<text  x="1190.83" y="367.5" ></text>
</g>
</g>
</svg>
