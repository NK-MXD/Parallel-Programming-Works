<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="566" onload="init(evt)" viewBox="0 0 1200 566" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="566.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="549" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="549" > </text>
<g id="frames">
<g >
<title>native_read_msr (2 samples, 0.03%)</title><rect x="340.3" y="229" width="0.4" height="15.0" fill="rgb(235,126,53)" rx="2" ry="2" />
<text  x="343.35" y="239.5" ></text>
</g>
<g >
<title>page_remove_rmap (1 samples, 0.01%)</title><rect x="1185.0" y="325" width="0.2" height="15.0" fill="rgb(228,87,47)" rx="2" ry="2" />
<text  x="1188.02" y="335.5" ></text>
</g>
<g >
<title>mptscsih_io_done (1 samples, 0.01%)</title><rect x="139.8" y="325" width="0.2" height="15.0" fill="rgb(220,163,43)" rx="2" ry="2" />
<text  x="142.83" y="335.5" ></text>
</g>
<g >
<title>update_process_times (2 samples, 0.03%)</title><rect x="340.3" y="341" width="0.4" height="15.0" fill="rgb(206,225,3)" rx="2" ry="2" />
<text  x="343.35" y="351.5" ></text>
</g>
<g >
<title>alloc_pages_vma (2 samples, 0.03%)</title><rect x="148.2" y="373" width="0.3" height="15.0" fill="rgb(234,47,22)" rx="2" ry="2" />
<text  x="151.18" y="383.5" ></text>
</g>
<g >
<title>asm_common_interrupt (1 samples, 0.01%)</title><rect x="520.8" y="437" width="0.1" height="15.0" fill="rgb(222,121,25)" rx="2" ry="2" />
<text  x="523.79" y="447.5" ></text>
</g>
<g >
<title>irq_exit_rcu (1 samples, 0.01%)</title><rect x="327.0" y="261" width="0.2" height="15.0" fill="rgb(244,166,4)" rx="2" ry="2" />
<text  x="330.01" y="271.5" ></text>
</g>
<g >
<title>handle_fasteoi_irq (1 samples, 0.01%)</title><rect x="139.8" y="405" width="0.2" height="15.0" fill="rgb(231,161,52)" rx="2" ry="2" />
<text  x="142.83" y="415.5" ></text>
</g>
<g >
<title>main (7,287 samples, 99.22%)</title><rect x="13.9" y="469" width="1170.8" height="15.0" fill="rgb(237,166,5)" rx="2" ry="2" />
<text  x="16.86" y="479.5" >main</text>
</g>
<g >
<title>perf_pmu_enable.part.0 (7 samples, 0.10%)</title><rect x="1182.3" y="293" width="1.1" height="15.0" fill="rgb(248,31,10)" rx="2" ry="2" />
<text  x="1185.29" y="303.5" ></text>
</g>
<g >
<title>autoremove_wake_function (2 samples, 0.03%)</title><rect x="1183.4" y="213" width="0.3" height="15.0" fill="rgb(233,86,15)" rx="2" ry="2" />
<text  x="1186.41" y="223.5" ></text>
</g>
<g >
<title>sysvec_irq_work (1 samples, 0.01%)</title><rect x="341.2" y="357" width="0.1" height="15.0" fill="rgb(218,142,26)" rx="2" ry="2" />
<text  x="344.15" y="367.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (2 samples, 0.03%)</title><rect x="336.8" y="325" width="0.3" height="15.0" fill="rgb(253,86,10)" rx="2" ry="2" />
<text  x="339.81" y="335.5" ></text>
</g>
<g >
<title>pud_val (1 samples, 0.01%)</title><rect x="337.8" y="389" width="0.1" height="15.0" fill="rgb(237,216,36)" rx="2" ry="2" />
<text  x="340.78" y="399.5" ></text>
</g>
<g >
<title>vmci_dispatch_dgs (1 samples, 0.01%)</title><rect x="520.8" y="341" width="0.1" height="15.0" fill="rgb(211,40,32)" rx="2" ry="2" />
<text  x="523.79" y="351.5" ></text>
</g>
<g >
<title>exc_page_fault (1,218 samples, 16.58%)</title><rect x="144.6" y="437" width="195.7" height="15.0" fill="rgb(232,198,20)" rx="2" ry="2" />
<text  x="147.65" y="447.5" >exc_page_fault</text>
</g>
<g >
<title>find_vma (2 samples, 0.03%)</title><rect x="145.6" y="405" width="0.3" height="15.0" fill="rgb(212,35,7)" rx="2" ry="2" />
<text  x="148.61" y="415.5" ></text>
</g>
<g >
<title>begin_new_exec (6 samples, 0.08%)</title><rect x="1189.0" y="357" width="1.0" height="15.0" fill="rgb(234,134,35)" rx="2" ry="2" />
<text  x="1192.04" y="367.5" ></text>
</g>
<g >
<title>queued_spin_unlock (1 samples, 0.01%)</title><rect x="337.6" y="373" width="0.2" height="15.0" fill="rgb(206,106,53)" rx="2" ry="2" />
<text  x="340.62" y="383.5" ></text>
</g>
<g >
<title>x86_pmu_disable (1 samples, 0.01%)</title><rect x="340.0" y="309" width="0.2" height="15.0" fill="rgb(231,206,39)" rx="2" ry="2" />
<text  x="343.03" y="319.5" ></text>
</g>
<g >
<title>mutex_lock (2 samples, 0.03%)</title><rect x="10.0" y="309" width="0.3" height="15.0" fill="rgb(230,23,27)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>ttwu_queue_wakelist (2 samples, 0.03%)</title><rect x="1183.4" y="165" width="0.3" height="15.0" fill="rgb(245,51,22)" rx="2" ry="2" />
<text  x="1186.41" y="175.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.08%)</title><rect x="1189.0" y="469" width="1.0" height="15.0" fill="rgb(241,38,14)" rx="2" ry="2" />
<text  x="1192.04" y="479.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="139.8" y="357" width="0.2" height="15.0" fill="rgb(216,70,53)" rx="2" ry="2" />
<text  x="142.83" y="367.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.01%)</title><rect x="520.9" y="245" width="0.2" height="15.0" fill="rgb(218,110,13)" rx="2" ry="2" />
<text  x="523.95" y="255.5" ></text>
</g>
<g >
<title>amd_pmu_disable_all (2 samples, 0.03%)</title><rect x="340.3" y="261" width="0.4" height="15.0" fill="rgb(243,80,45)" rx="2" ry="2" />
<text  x="343.35" y="271.5" ></text>
</g>
<g >
<title>cgroup_throttle_swaprate (3 samples, 0.04%)</title><rect x="332.0" y="357" width="0.5" height="15.0" fill="rgb(219,38,46)" rx="2" ry="2" />
<text  x="334.99" y="367.5" ></text>
</g>
<g >
<title>common_interrupt (1 samples, 0.01%)</title><rect x="520.8" y="421" width="0.1" height="15.0" fill="rgb(231,195,48)" rx="2" ry="2" />
<text  x="523.79" y="431.5" ></text>
</g>
<g >
<title>task_ctx_sched_out (2 samples, 0.03%)</title><rect x="10.0" y="229" width="0.3" height="15.0" fill="rgb(230,132,14)" rx="2" ry="2" />
<text  x="13.00" y="239.5" ></text>
</g>
<g >
<title>tasklet_action_common.isra.0 (1 samples, 0.01%)</title><rect x="327.0" y="213" width="0.2" height="15.0" fill="rgb(254,180,11)" rx="2" ry="2" />
<text  x="330.01" y="223.5" ></text>
</g>
<g >
<title>rmqueue (25 samples, 0.34%)</title><rect x="327.5" y="309" width="4.0" height="15.0" fill="rgb(217,11,54)" rx="2" ry="2" />
<text  x="330.49" y="319.5" ></text>
</g>
<g >
<title>default_wake_function (1 samples, 0.01%)</title><rect x="341.2" y="133" width="0.1" height="15.0" fill="rgb(205,195,3)" rx="2" ry="2" />
<text  x="344.15" y="143.5" ></text>
</g>
<g >
<title>do_anonymous_page (1,174 samples, 15.99%)</title><rect x="148.5" y="373" width="188.6" height="15.0" fill="rgb(211,19,37)" rx="2" ry="2" />
<text  x="151.50" y="383.5" >do_anonymous_page</text>
</g>
<g >
<title>generic_exec_single (1 samples, 0.01%)</title><rect x="139.8" y="245" width="0.2" height="15.0" fill="rgb(244,173,11)" rx="2" ry="2" />
<text  x="142.83" y="255.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="1182.1" y="437" width="0.2" height="15.0" fill="rgb(232,127,22)" rx="2" ry="2" />
<text  x="1185.13" y="447.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.01%)</title><rect x="1186.1" y="261" width="0.2" height="15.0" fill="rgb(252,78,28)" rx="2" ry="2" />
<text  x="1189.14" y="271.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1,192 samples, 16.23%)</title><rect x="146.3" y="389" width="191.5" height="15.0" fill="rgb(211,25,15)" rx="2" ry="2" />
<text  x="149.25" y="399.5" >__handle_mm_fault</text>
</g>
<g >
<title>__const_udelay (1 samples, 0.01%)</title><rect x="520.9" y="149" width="0.2" height="15.0" fill="rgb(232,56,12)" rx="2" ry="2" />
<text  x="523.95" y="159.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (2 samples, 0.03%)</title><rect x="1188.7" y="437" width="0.3" height="15.0" fill="rgb(239,37,21)" rx="2" ry="2" />
<text  x="1191.71" y="447.5" ></text>
</g>
<g >
<title>__pte_alloc (3 samples, 0.04%)</title><rect x="149.5" y="357" width="0.4" height="15.0" fill="rgb(205,95,12)" rx="2" ry="2" />
<text  x="152.47" y="367.5" ></text>
</g>
<g >
<title>__sched_text_start (1 samples, 0.01%)</title><rect x="340.7" y="357" width="0.1" height="15.0" fill="rgb(212,73,17)" rx="2" ry="2" />
<text  x="343.67" y="367.5" ></text>
</g>
<g >
<title>ttwu_queue_wakelist (1 samples, 0.01%)</title><rect x="520.8" y="165" width="0.1" height="15.0" fill="rgb(207,155,53)" rx="2" ry="2" />
<text  x="523.79" y="175.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (2 samples, 0.03%)</title><rect x="333.3" y="293" width="0.3" height="15.0" fill="rgb(238,134,33)" rx="2" ry="2" />
<text  x="336.28" y="303.5" ></text>
</g>
<g >
<title>send_call_function_single_ipi (1 samples, 0.01%)</title><rect x="341.2" y="69" width="0.1" height="15.0" fill="rgb(234,203,39)" rx="2" ry="2" />
<text  x="344.15" y="79.5" ></text>
</g>
<g >
<title>irq_exit_rcu (2 samples, 0.03%)</title><rect x="340.8" y="341" width="0.4" height="15.0" fill="rgb(247,219,27)" rx="2" ry="2" />
<text  x="343.83" y="351.5" ></text>
</g>
<g >
<title>irq_work_single (1 samples, 0.01%)</title><rect x="341.2" y="293" width="0.1" height="15.0" fill="rgb(243,113,43)" rx="2" ry="2" />
<text  x="344.15" y="303.5" ></text>
</g>
<g >
<title>perf_event_task_tick (2 samples, 0.03%)</title><rect x="340.3" y="309" width="0.4" height="15.0" fill="rgb(248,104,27)" rx="2" ry="2" />
<text  x="343.35" y="319.5" ></text>
</g>
<g >
<title>__smp_call_single_queue (1 samples, 0.01%)</title><rect x="520.8" y="149" width="0.1" height="15.0" fill="rgb(250,150,7)" rx="2" ry="2" />
<text  x="523.79" y="159.5" ></text>
</g>
<g >
<title>smp_call_function_single_async (1 samples, 0.01%)</title><rect x="139.8" y="261" width="0.2" height="15.0" fill="rgb(252,96,36)" rx="2" ry="2" />
<text  x="142.83" y="271.5" ></text>
</g>
<g >
<title>irqentry_exit (7 samples, 0.10%)</title><rect x="1182.3" y="405" width="1.1" height="15.0" fill="rgb(251,220,44)" rx="2" ry="2" />
<text  x="1185.29" y="415.5" ></text>
</g>
<g >
<title>sysvec_call_function_single (1 samples, 0.01%)</title><rect x="520.9" y="421" width="0.2" height="15.0" fill="rgb(249,193,16)" rx="2" ry="2" />
<text  x="523.95" y="431.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.01%)</title><rect x="337.0" y="309" width="0.1" height="15.0" fill="rgb(247,133,29)" rx="2" ry="2" />
<text  x="339.97" y="319.5" ></text>
</g>
<g >
<title>__alloc_pages (3 samples, 0.04%)</title><rect x="149.5" y="309" width="0.4" height="15.0" fill="rgb(247,91,17)" rx="2" ry="2" />
<text  x="152.47" y="319.5" ></text>
</g>
<g >
<title>amd_pmu_wait_on_overflow (2 samples, 0.03%)</title><rect x="340.3" y="245" width="0.4" height="15.0" fill="rgb(241,62,14)" rx="2" ry="2" />
<text  x="343.35" y="255.5" ></text>
</g>
<g >
<title>preempt_schedule_common (2 samples, 0.03%)</title><rect x="10.0" y="277" width="0.3" height="15.0" fill="rgb(217,175,53)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>__const_udelay (1 samples, 0.01%)</title><rect x="340.7" y="261" width="0.1" height="15.0" fill="rgb(230,108,44)" rx="2" ry="2" />
<text  x="343.67" y="271.5" ></text>
</g>
<g >
<title>__mod_memcg_state (1 samples, 0.01%)</title><rect x="1186.1" y="245" width="0.2" height="15.0" fill="rgb(220,166,45)" rx="2" ry="2" />
<text  x="1189.14" y="255.5" ></text>
</g>
<g >
<title>asm_sysvec_call_function_single (3 samples, 0.04%)</title><rect x="340.8" y="453" width="0.5" height="15.0" fill="rgb(217,16,42)" rx="2" ry="2" />
<text  x="343.83" y="463.5" ></text>
</g>
<g >
<title>__common_interrupt (2 samples, 0.03%)</title><rect x="340.8" y="277" width="0.4" height="15.0" fill="rgb(249,57,45)" rx="2" ry="2" />
<text  x="343.83" y="287.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.0 (2 samples, 0.03%)</title><rect x="340.3" y="357" width="0.4" height="15.0" fill="rgb(247,121,34)" rx="2" ry="2" />
<text  x="343.35" y="367.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="520.8" y="389" width="0.1" height="15.0" fill="rgb(218,163,9)" rx="2" ry="2" />
<text  x="523.79" y="399.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (7 samples, 0.10%)</title><rect x="1182.3" y="389" width="1.1" height="15.0" fill="rgb(225,0,43)" rx="2" ry="2" />
<text  x="1185.29" y="399.5" ></text>
</g>
<g >
<title>tty_write (21 samples, 0.29%)</title><rect x="10.0" y="357" width="3.4" height="15.0" fill="rgb(224,88,2)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>native_send_call_func_single_ipi (19 samples, 0.26%)</title><rect x="10.3" y="149" width="3.1" height="15.0" fill="rgb(220,92,32)" rx="2" ry="2" />
<text  x="13.32" y="159.5" ></text>
</g>
<g >
<title>default_wake_function (1 samples, 0.01%)</title><rect x="520.8" y="197" width="0.1" height="15.0" fill="rgb(252,147,10)" rx="2" ry="2" />
<text  x="523.79" y="207.5" ></text>
</g>
<g >
<title>x86_pmu_disable (1 samples, 0.01%)</title><rect x="340.7" y="309" width="0.1" height="15.0" fill="rgb(217,197,34)" rx="2" ry="2" />
<text  x="343.67" y="319.5" ></text>
</g>
<g >
<title>vma_interval_tree_insert (2 samples, 0.03%)</title><rect x="1188.7" y="325" width="0.3" height="15.0" fill="rgb(224,83,9)" rx="2" ry="2" />
<text  x="1191.71" y="335.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.01%)</title><rect x="139.8" y="389" width="0.2" height="15.0" fill="rgb(240,109,39)" rx="2" ry="2" />
<text  x="142.83" y="399.5" ></text>
</g>
<g >
<title>release_pages (12 samples, 0.16%)</title><rect x="1186.6" y="277" width="2.0" height="15.0" fill="rgb(225,190,20)" rx="2" ry="2" />
<text  x="1189.63" y="287.5" ></text>
</g>
<g >
<title>improve (1,119 samples, 15.24%)</title><rect x="341.3" y="453" width="179.8" height="15.0" fill="rgb(206,42,44)" rx="2" ry="2" />
<text  x="344.31" y="463.5" >improve</text>
</g>
<g >
<title>irqentry_exit_to_user_mode (1 samples, 0.01%)</title><rect x="520.9" y="389" width="0.2" height="15.0" fill="rgb(246,157,37)" rx="2" ry="2" />
<text  x="523.95" y="399.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_out (2 samples, 0.03%)</title><rect x="10.0" y="245" width="0.3" height="15.0" fill="rgb(223,75,26)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>amd_pmu_wait_on_overflow (2 samples, 0.03%)</title><rect x="10.0" y="117" width="0.3" height="15.0" fill="rgb(254,200,37)" rx="2" ry="2" />
<text  x="13.00" y="127.5" ></text>
</g>
<g >
<title>__x64_sys_execve (6 samples, 0.08%)</title><rect x="1189.0" y="437" width="1.0" height="15.0" fill="rgb(212,202,15)" rx="2" ry="2" />
<text  x="1192.04" y="447.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.01%)</title><rect x="336.8" y="309" width="0.2" height="15.0" fill="rgb(216,175,15)" rx="2" ry="2" />
<text  x="339.81" y="319.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (3 samples, 0.04%)</title><rect x="333.3" y="309" width="0.5" height="15.0" fill="rgb(252,61,27)" rx="2" ry="2" />
<text  x="336.28" y="319.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1,125 samples, 15.32%)</title><rect x="150.8" y="325" width="180.7" height="15.0" fill="rgb(239,130,31)" rx="2" ry="2" />
<text  x="153.75" y="335.5" >get_page_from_freelist</text>
</g>
<g >
<title>__mod_zone_page_state (2 samples, 0.03%)</title><rect x="1187.3" y="229" width="0.3" height="15.0" fill="rgb(205,178,10)" rx="2" ry="2" />
<text  x="1190.27" y="239.5" ></text>
</g>
<g >
<title>asm_sysvec_irq_work (2 samples, 0.03%)</title><rect x="1183.4" y="437" width="0.3" height="15.0" fill="rgb(254,69,12)" rx="2" ry="2" />
<text  x="1186.41" y="447.5" ></text>
</g>
<g >
<title>perf_event_exec (6 samples, 0.08%)</title><rect x="1189.0" y="341" width="1.0" height="15.0" fill="rgb(220,201,45)" rx="2" ry="2" />
<text  x="1192.04" y="351.5" ></text>
</g>
<g >
<title>perf_pmu_disable.part.0 (2 samples, 0.03%)</title><rect x="340.3" y="293" width="0.4" height="15.0" fill="rgb(205,109,48)" rx="2" ry="2" />
<text  x="343.35" y="303.5" ></text>
</g>
<g >
<title>clear_page_erms (1 samples, 0.01%)</title><rect x="1185.7" y="229" width="0.1" height="15.0" fill="rgb(234,54,43)" rx="2" ry="2" />
<text  x="1188.66" y="239.5" ></text>
</g>
<g >
<title>clear_page_erms (1,093 samples, 14.88%)</title><rect x="151.6" y="309" width="175.6" height="15.0" fill="rgb(232,66,26)" rx="2" ry="2" />
<text  x="154.56" y="319.5" >clear_page_erms</text>
</g>
<g >
<title>try_to_wake_up (19 samples, 0.26%)</title><rect x="10.3" y="213" width="3.1" height="15.0" fill="rgb(210,164,13)" rx="2" ry="2" />
<text  x="13.32" y="223.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (7 samples, 0.10%)</title><rect x="1182.3" y="309" width="1.1" height="15.0" fill="rgb(242,7,4)" rx="2" ry="2" />
<text  x="1185.29" y="319.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (8 samples, 0.11%)</title><rect x="338.9" y="389" width="1.3" height="15.0" fill="rgb(224,165,49)" rx="2" ry="2" />
<text  x="341.90" y="399.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (1 samples, 0.01%)</title><rect x="340.2" y="389" width="0.1" height="15.0" fill="rgb(231,142,8)" rx="2" ry="2" />
<text  x="343.19" y="399.5" ></text>
</g>
<g >
<title>memcg_check_events (1 samples, 0.01%)</title><rect x="336.2" y="341" width="0.1" height="15.0" fill="rgb(209,213,3)" rx="2" ry="2" />
<text  x="339.17" y="351.5" ></text>
</g>
<g >
<title>ttwu_queue_wakelist (19 samples, 0.26%)</title><rect x="10.3" y="197" width="3.1" height="15.0" fill="rgb(247,17,43)" rx="2" ry="2" />
<text  x="13.32" y="207.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (2 samples, 0.03%)</title><rect x="13.4" y="469" width="0.3" height="15.0" fill="rgb(240,137,31)" rx="2" ry="2" />
<text  x="16.37" y="479.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.01%)</title><rect x="341.2" y="181" width="0.1" height="15.0" fill="rgb(226,172,26)" rx="2" ry="2" />
<text  x="344.15" y="191.5" ></text>
</g>
<g >
<title>amd_pmu_disable_all (1 samples, 0.01%)</title><rect x="150.6" y="229" width="0.2" height="15.0" fill="rgb(214,0,9)" rx="2" ry="2" />
<text  x="153.59" y="239.5" ></text>
</g>
<g >
<title>native_write_msr (6 samples, 0.08%)</title><rect x="1189.0" y="277" width="1.0" height="15.0" fill="rgb(251,46,22)" rx="2" ry="2" />
<text  x="1192.04" y="287.5" ></text>
</g>
<g >
<title>page_mapping (1 samples, 0.01%)</title><rect x="334.1" y="325" width="0.1" height="15.0" fill="rgb(239,17,8)" rx="2" ry="2" />
<text  x="337.08" y="335.5" ></text>
</g>
<g >
<title>zap_pte_range.isra.0 (22 samples, 0.30%)</title><rect x="1185.2" y="325" width="3.5" height="15.0" fill="rgb(230,200,13)" rx="2" ry="2" />
<text  x="1188.18" y="335.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.01%)</title><rect x="1186.5" y="293" width="0.1" height="15.0" fill="rgb(214,40,9)" rx="2" ry="2" />
<text  x="1189.47" y="303.5" ></text>
</g>
<g >
<title>native_write_msr (1 samples, 0.01%)</title><rect x="341.2" y="37" width="0.1" height="15.0" fill="rgb(221,206,54)" rx="2" ry="2" />
<text  x="344.15" y="47.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (1 samples, 0.01%)</title><rect x="336.8" y="277" width="0.2" height="15.0" fill="rgb(245,152,12)" rx="2" ry="2" />
<text  x="339.81" y="287.5" ></text>
</g>
<g >
<title>normal (4,124 samples, 56.15%)</title><rect x="521.1" y="453" width="662.6" height="15.0" fill="rgb(234,213,27)" rx="2" ry="2" />
<text  x="524.11" y="463.5" >normal</text>
</g>
<g >
<title>pty_write (19 samples, 0.26%)</title><rect x="10.3" y="309" width="3.1" height="15.0" fill="rgb(254,111,13)" rx="2" ry="2" />
<text  x="13.32" y="319.5" ></text>
</g>
<g >
<title>tasklet_action (1 samples, 0.01%)</title><rect x="520.8" y="373" width="0.1" height="15.0" fill="rgb(243,208,4)" rx="2" ry="2" />
<text  x="523.79" y="383.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.01%)</title><rect x="1186.1" y="277" width="0.2" height="15.0" fill="rgb(236,55,1)" rx="2" ry="2" />
<text  x="1189.14" y="287.5" ></text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (14 samples, 0.19%)</title><rect x="332.6" y="357" width="2.3" height="15.0" fill="rgb(220,83,41)" rx="2" ry="2" />
<text  x="335.64" y="367.5" ></text>
</g>
<g >
<title>pagevec_add_and_need_flush (1 samples, 0.01%)</title><rect x="334.7" y="341" width="0.2" height="15.0" fill="rgb(212,132,5)" rx="2" ry="2" />
<text  x="337.72" y="351.5" ></text>
</g>
<g >
<title>native_write_msr (19 samples, 0.26%)</title><rect x="10.3" y="133" width="3.1" height="15.0" fill="rgb(246,117,38)" rx="2" ry="2" />
<text  x="13.32" y="143.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.01%)</title><rect x="1182.1" y="309" width="0.2" height="15.0" fill="rgb(228,93,2)" rx="2" ry="2" />
<text  x="1185.13" y="319.5" ></text>
</g>
<g >
<title>ctx_resched (6 samples, 0.08%)</title><rect x="1189.0" y="325" width="1.0" height="15.0" fill="rgb(239,121,3)" rx="2" ry="2" />
<text  x="1192.04" y="335.5" ></text>
</g>
<g >
<title>unlink_anon_vmas (1 samples, 0.01%)</title><rect x="1184.9" y="357" width="0.1" height="15.0" fill="rgb(228,8,0)" rx="2" ry="2" />
<text  x="1187.86" y="367.5" ></text>
</g>
<g >
<title>delay_tsc (1 samples, 0.01%)</title><rect x="520.9" y="133" width="0.2" height="15.0" fill="rgb(225,54,34)" rx="2" ry="2" />
<text  x="523.95" y="143.5" ></text>
</g>
<g >
<title>x86_pmu_enable (6 samples, 0.08%)</title><rect x="1189.0" y="293" width="1.0" height="15.0" fill="rgb(216,224,21)" rx="2" ry="2" />
<text  x="1192.04" y="303.5" ></text>
</g>
<g >
<title>native_write_msr (1 samples, 0.01%)</title><rect x="520.8" y="101" width="0.1" height="15.0" fill="rgb(232,199,23)" rx="2" ry="2" />
<text  x="523.79" y="111.5" ></text>
</g>
<g >
<title>tasklet_action (1 samples, 0.01%)</title><rect x="327.0" y="229" width="0.2" height="15.0" fill="rgb(243,150,32)" rx="2" ry="2" />
<text  x="330.01" y="239.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.01%)</title><rect x="340.0" y="373" width="0.2" height="15.0" fill="rgb(216,223,24)" rx="2" ry="2" />
<text  x="343.03" y="383.5" ></text>
</g>
<g >
<title>irqentry_exit (3 samples, 0.04%)</title><rect x="340.8" y="421" width="0.5" height="15.0" fill="rgb(220,20,4)" rx="2" ry="2" />
<text  x="343.83" y="431.5" ></text>
</g>
<g >
<title>__get_free_pages (1 samples, 0.01%)</title><rect x="1185.7" y="293" width="0.1" height="15.0" fill="rgb(250,181,27)" rx="2" ry="2" />
<text  x="1188.66" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (24 samples, 0.33%)</title><rect x="1184.9" y="469" width="3.8" height="15.0" fill="rgb(245,67,22)" rx="2" ry="2" />
<text  x="1187.86" y="479.5" ></text>
</g>
<g >
<title>mem_cgroup_charge (10 samples, 0.14%)</title><rect x="334.9" y="357" width="1.6" height="15.0" fill="rgb(227,24,1)" rx="2" ry="2" />
<text  x="337.89" y="367.5" ></text>
</g>
<g >
<title>do_syscall_64 (21 samples, 0.29%)</title><rect x="10.0" y="437" width="3.4" height="15.0" fill="rgb(206,114,53)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.01%)</title><rect x="1187.1" y="245" width="0.2" height="15.0" fill="rgb(209,71,29)" rx="2" ry="2" />
<text  x="1190.11" y="255.5" ></text>
</g>
<g >
<title>__sysvec_irq_work (1 samples, 0.01%)</title><rect x="341.2" y="341" width="0.1" height="15.0" fill="rgb(229,44,5)" rx="2" ry="2" />
<text  x="344.15" y="351.5" ></text>
</g>
<g >
<title>x86_pmu_disable (2 samples, 0.03%)</title><rect x="340.3" y="277" width="0.4" height="15.0" fill="rgb(206,154,21)" rx="2" ry="2" />
<text  x="343.35" y="287.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.08%)</title><rect x="1189.0" y="485" width="1.0" height="15.0" fill="rgb(224,74,48)" rx="2" ry="2" />
<text  x="1192.04" y="495.5" ></text>
</g>
<g >
<title>amd_pmu_wait_on_overflow (1 samples, 0.01%)</title><rect x="1182.1" y="229" width="0.2" height="15.0" fill="rgb(232,63,31)" rx="2" ry="2" />
<text  x="1185.13" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::stdio_sync_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::xsputn (1 samples, 0.01%)</title><rect x="13.7" y="421" width="0.2" height="15.0" fill="rgb(229,80,23)" rx="2" ry="2" />
<text  x="16.70" y="431.5" ></text>
</g>
<g >
<title>__wake_up_common (2 samples, 0.03%)</title><rect x="1183.4" y="229" width="0.3" height="15.0" fill="rgb(229,207,11)" rx="2" ry="2" />
<text  x="1186.41" y="239.5" ></text>
</g>
<g >
<title>dl_main (2 samples, 0.03%)</title><rect x="13.4" y="453" width="0.3" height="15.0" fill="rgb(230,17,25)" rx="2" ry="2" />
<text  x="16.37" y="463.5" ></text>
</g>
<g >
<title>send_call_function_single_ipi (1 samples, 0.01%)</title><rect x="520.8" y="133" width="0.1" height="15.0" fill="rgb(220,101,20)" rx="2" ry="2" />
<text  x="523.79" y="143.5" ></text>
</g>
<g >
<title>__handle_mm_fault (1 samples, 0.01%)</title><rect x="145.4" y="405" width="0.2" height="15.0" fill="rgb(209,160,48)" rx="2" ry="2" />
<text  x="148.45" y="415.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (21 samples, 0.29%)</title><rect x="10.0" y="453" width="3.4" height="15.0" fill="rgb(246,118,40)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>ttwu_queue_wakelist (1 samples, 0.01%)</title><rect x="341.2" y="101" width="0.1" height="15.0" fill="rgb(215,79,22)" rx="2" ry="2" />
<text  x="344.15" y="111.5" ></text>
</g>
<g >
<title>x86_pmu_stop (2 samples, 0.03%)</title><rect x="10.0" y="149" width="0.3" height="15.0" fill="rgb(248,85,12)" rx="2" ry="2" />
<text  x="13.00" y="159.5" ></text>
</g>
<g >
<title>bprm_execve (6 samples, 0.08%)</title><rect x="1189.0" y="405" width="1.0" height="15.0" fill="rgb(222,54,36)" rx="2" ry="2" />
<text  x="1192.04" y="415.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (2 samples, 0.03%)</title><rect x="1188.7" y="421" width="0.3" height="15.0" fill="rgb(206,58,18)" rx="2" ry="2" />
<text  x="1191.71" y="431.5" ></text>
</g>
<g >
<title>__const_udelay (1 samples, 0.01%)</title><rect x="150.6" y="197" width="0.2" height="15.0" fill="rgb(228,81,38)" rx="2" ry="2" />
<text  x="153.59" y="207.5" ></text>
</g>
<g >
<title>vmacache_find (2 samples, 0.03%)</title><rect x="145.6" y="389" width="0.3" height="15.0" fill="rgb(248,15,16)" rx="2" ry="2" />
<text  x="148.61" y="399.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (3 samples, 0.04%)</title><rect x="340.8" y="405" width="0.5" height="15.0" fill="rgb(212,63,14)" rx="2" ry="2" />
<text  x="343.83" y="415.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="340.8" y="373" width="0.4" height="15.0" fill="rgb(216,1,20)" rx="2" ry="2" />
<text  x="343.83" y="383.5" ></text>
</g>
<g >
<title>__mod_memcg_state (1 samples, 0.01%)</title><rect x="336.8" y="293" width="0.2" height="15.0" fill="rgb(213,20,22)" rx="2" ry="2" />
<text  x="339.81" y="303.5" ></text>
</g>
<g >
<title>asm_common_interrupt (1 samples, 0.01%)</title><rect x="327.0" y="293" width="0.2" height="15.0" fill="rgb(216,182,46)" rx="2" ry="2" />
<text  x="330.01" y="303.5" ></text>
</g>
<g >
<title>vmci_datagram_invoke_guest_handler (1 samples, 0.01%)</title><rect x="520.8" y="325" width="0.1" height="15.0" fill="rgb(213,94,2)" rx="2" ry="2" />
<text  x="523.79" y="335.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.01%)</title><rect x="341.2" y="165" width="0.1" height="15.0" fill="rgb(247,175,1)" rx="2" ry="2" />
<text  x="344.15" y="175.5" ></text>
</g>
<g >
<title>clear_page_erms (3 samples, 0.04%)</title><rect x="149.5" y="277" width="0.4" height="15.0" fill="rgb(217,18,20)" rx="2" ry="2" />
<text  x="152.47" y="287.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="520.9" y="325" width="0.2" height="15.0" fill="rgb(230,19,14)" rx="2" ry="2" />
<text  x="523.95" y="335.5" ></text>
</g>
<g >
<title>autoremove_wake_function (1 samples, 0.01%)</title><rect x="341.2" y="149" width="0.1" height="15.0" fill="rgb(208,21,23)" rx="2" ry="2" />
<text  x="344.15" y="159.5" ></text>
</g>
<g >
<title>amd_pmu_wait_on_overflow (1 samples, 0.01%)</title><rect x="150.6" y="213" width="0.2" height="15.0" fill="rgb(246,156,33)" rx="2" ry="2" />
<text  x="153.59" y="223.5" ></text>
</g>
<g >
<title>prep_new_page (2 samples, 0.03%)</title><rect x="327.2" y="309" width="0.3" height="15.0" fill="rgb(242,172,38)" rx="2" ry="2" />
<text  x="330.17" y="319.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="520.9" y="293" width="0.2" height="15.0" fill="rgb(213,54,20)" rx="2" ry="2" />
<text  x="523.95" y="303.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="139.8" y="373" width="0.2" height="15.0" fill="rgb(225,228,36)" rx="2" ry="2" />
<text  x="142.83" y="383.5" ></text>
</g>
<g >
<title>new_sync_write (21 samples, 0.29%)</title><rect x="10.0" y="373" width="3.4" height="15.0" fill="rgb(244,189,47)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>amd_pmu_disable_event (1 samples, 0.01%)</title><rect x="520.9" y="181" width="0.2" height="15.0" fill="rgb(245,180,1)" rx="2" ry="2" />
<text  x="523.95" y="191.5" ></text>
</g>
<g >
<title>do_exit (24 samples, 0.33%)</title><rect x="1184.9" y="421" width="3.8" height="15.0" fill="rgb(224,49,37)" rx="2" ry="2" />
<text  x="1187.86" y="431.5" ></text>
</g>
<g >
<title>tick_sched_timer (2 samples, 0.03%)</title><rect x="340.3" y="373" width="0.4" height="15.0" fill="rgb(210,113,21)" rx="2" ry="2" />
<text  x="343.35" y="383.5" ></text>
</g>
<g >
<title>__GI___libc_write (21 samples, 0.29%)</title><rect x="10.0" y="469" width="3.4" height="15.0" fill="rgb(207,136,13)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.01%)</title><rect x="327.0" y="245" width="0.2" height="15.0" fill="rgb(218,27,54)" rx="2" ry="2" />
<text  x="330.01" y="255.5" ></text>
</g>
<g >
<title>__sched_text_start (2 samples, 0.03%)</title><rect x="10.0" y="261" width="0.3" height="15.0" fill="rgb(241,38,15)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>unmap_vmas (23 samples, 0.31%)</title><rect x="1185.0" y="373" width="3.7" height="15.0" fill="rgb(224,6,3)" rx="2" ry="2" />
<text  x="1188.02" y="383.5" ></text>
</g>
<g >
<title>__cond_resched (2 samples, 0.03%)</title><rect x="10.0" y="293" width="0.3" height="15.0" fill="rgb(247,28,54)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.01%)</title><rect x="340.8" y="245" width="0.2" height="15.0" fill="rgb(208,145,54)" rx="2" ry="2" />
<text  x="343.83" y="255.5" ></text>
</g>
<g >
<title>__const_udelay (1 samples, 0.01%)</title><rect x="1182.1" y="213" width="0.2" height="15.0" fill="rgb(205,8,23)" rx="2" ry="2" />
<text  x="1185.13" y="223.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (6 samples, 0.08%)</title><rect x="1189.0" y="309" width="1.0" height="15.0" fill="rgb(248,34,20)" rx="2" ry="2" />
<text  x="1192.04" y="319.5" ></text>
</g>
<g >
<title>__common_interrupt (1 samples, 0.01%)</title><rect x="139.8" y="421" width="0.2" height="15.0" fill="rgb(222,226,37)" rx="2" ry="2" />
<text  x="142.83" y="431.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (2 samples, 0.03%)</title><rect x="1188.7" y="469" width="0.3" height="15.0" fill="rgb(215,71,41)" rx="2" ry="2" />
<text  x="1191.71" y="479.5" ></text>
</g>
<g >
<title>vmci_transport_recv_stream_cb (1 samples, 0.01%)</title><rect x="520.8" y="309" width="0.1" height="15.0" fill="rgb(248,93,16)" rx="2" ry="2" />
<text  x="523.79" y="319.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (7 samples, 0.10%)</title><rect x="334.9" y="341" width="1.1" height="15.0" fill="rgb(229,55,49)" rx="2" ry="2" />
<text  x="337.89" y="351.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_out (1 samples, 0.01%)</title><rect x="150.6" y="277" width="0.2" height="15.0" fill="rgb(217,7,31)" rx="2" ry="2" />
<text  x="153.59" y="287.5" ></text>
</g>
<g >
<title>native_apic_msr_eoi_write (1 samples, 0.01%)</title><rect x="341.0" y="245" width="0.2" height="15.0" fill="rgb(240,167,18)" rx="2" ry="2" />
<text  x="343.99" y="255.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="520.9" y="309" width="0.2" height="15.0" fill="rgb(252,123,30)" rx="2" ry="2" />
<text  x="523.95" y="319.5" ></text>
</g>
<g >
<title>asm_sysvec_call_function_single (1 samples, 0.01%)</title><rect x="520.9" y="437" width="0.2" height="15.0" fill="rgb(247,33,30)" rx="2" ry="2" />
<text  x="523.95" y="447.5" ></text>
</g>
<g >
<title>autoremove_wake_function (1 samples, 0.01%)</title><rect x="520.8" y="213" width="0.1" height="15.0" fill="rgb(249,208,0)" rx="2" ry="2" />
<text  x="523.79" y="223.5" ></text>
</g>
<g >
<title>ep_poll_callback (2 samples, 0.03%)</title><rect x="1183.4" y="277" width="0.3" height="15.0" fill="rgb(224,37,21)" rx="2" ry="2" />
<text  x="1186.41" y="287.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="520.9" y="341" width="0.2" height="15.0" fill="rgb(213,222,29)" rx="2" ry="2" />
<text  x="523.95" y="351.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (1 samples, 0.01%)</title><rect x="520.8" y="261" width="0.1" height="15.0" fill="rgb(248,7,7)" rx="2" ry="2" />
<text  x="523.79" y="271.5" ></text>
</g>
<g >
<title>handle_mm_fault (1,195 samples, 16.27%)</title><rect x="145.9" y="405" width="192.0" height="15.0" fill="rgb(229,226,37)" rx="2" ry="2" />
<text  x="148.93" y="415.5" >handle_mm_fault</text>
</g>
<g >
<title>__wake_up (2 samples, 0.03%)</title><rect x="1183.4" y="325" width="0.3" height="15.0" fill="rgb(208,19,50)" rx="2" ry="2" />
<text  x="1186.41" y="335.5" ></text>
</g>
<g >
<title>__wake_up (1 samples, 0.01%)</title><rect x="341.2" y="261" width="0.1" height="15.0" fill="rgb(248,213,51)" rx="2" ry="2" />
<text  x="344.15" y="271.5" ></text>
</g>
<g >
<title>sysvec_call_function_single (3 samples, 0.04%)</title><rect x="340.8" y="437" width="0.5" height="15.0" fill="rgb(253,200,37)" rx="2" ry="2" />
<text  x="343.83" y="447.5" ></text>
</g>
<g >
<title>irq_work_run (2 samples, 0.03%)</title><rect x="1183.4" y="389" width="0.3" height="15.0" fill="rgb(206,91,45)" rx="2" ry="2" />
<text  x="1186.41" y="399.5" ></text>
</g>
<g >
<title>try_charge (4 samples, 0.05%)</title><rect x="335.4" y="325" width="0.6" height="15.0" fill="rgb(206,66,36)" rx="2" ry="2" />
<text  x="338.37" y="335.5" ></text>
</g>
<g >
<title>__sched_text_start (1 samples, 0.01%)</title><rect x="150.6" y="293" width="0.2" height="15.0" fill="rgb(209,70,28)" rx="2" ry="2" />
<text  x="153.59" y="303.5" ></text>
</g>
<g >
<title>pte_alloc_one (3 samples, 0.04%)</title><rect x="149.5" y="341" width="0.4" height="15.0" fill="rgb(227,75,42)" rx="2" ry="2" />
<text  x="152.47" y="351.5" ></text>
</g>
<g >
<title>do_mmap (2 samples, 0.03%)</title><rect x="1188.7" y="389" width="0.3" height="15.0" fill="rgb(238,30,10)" rx="2" ry="2" />
<text  x="1191.71" y="399.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (3 samples, 0.04%)</title><rect x="1186.0" y="293" width="0.5" height="15.0" fill="rgb(248,122,46)" rx="2" ry="2" />
<text  x="1188.98" y="303.5" ></text>
</g>
<g >
<title>x86_pmu_disable (1 samples, 0.01%)</title><rect x="150.6" y="245" width="0.2" height="15.0" fill="rgb(253,35,1)" rx="2" ry="2" />
<text  x="153.59" y="255.5" ></text>
</g>
<g >
<title>__mod_zone_page_state (2 samples, 0.03%)</title><rect x="1188.1" y="213" width="0.3" height="15.0" fill="rgb(225,211,23)" rx="2" ry="2" />
<text  x="1191.07" y="223.5" ></text>
</g>
<g >
<title>vmci_transport_notify_pkt_handle_pkt (1 samples, 0.01%)</title><rect x="520.8" y="293" width="0.1" height="15.0" fill="rgb(249,225,37)" rx="2" ry="2" />
<text  x="523.79" y="303.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="340.8" y="213" width="0.2" height="15.0" fill="rgb(251,110,52)" rx="2" ry="2" />
<text  x="343.83" y="223.5" ></text>
</g>
<g >
<title>page_add_new_anon_rmap (4 samples, 0.05%)</title><rect x="336.5" y="357" width="0.6" height="15.0" fill="rgb(252,175,31)" rx="2" ry="2" />
<text  x="339.49" y="367.5" ></text>
</g>
<g >
<title>amd_pmu_wait_on_overflow (1 samples, 0.01%)</title><rect x="340.0" y="277" width="0.2" height="15.0" fill="rgb(226,175,39)" rx="2" ry="2" />
<text  x="343.03" y="287.5" ></text>
</g>
<g >
<title>amd_pmu_disable_all (1 samples, 0.01%)</title><rect x="1182.1" y="245" width="0.2" height="15.0" fill="rgb(232,149,31)" rx="2" ry="2" />
<text  x="1185.13" y="255.5" ></text>
</g>
<g >
<title>_raw_spin_lock (3 samples, 0.04%)</title><rect x="147.7" y="373" width="0.5" height="15.0" fill="rgb(250,37,9)" rx="2" ry="2" />
<text  x="150.70" y="383.5" ></text>
</g>
<g >
<title>rmqueue_bulk.constprop.0 (19 samples, 0.26%)</title><rect x="328.5" y="293" width="3.0" height="15.0" fill="rgb(230,205,6)" rx="2" ry="2" />
<text  x="331.46" y="303.5" ></text>
</g>
<g >
<title>vmacache_find (1 samples, 0.01%)</title><rect x="337.9" y="405" width="0.2" height="15.0" fill="rgb(226,162,44)" rx="2" ry="2" />
<text  x="340.94" y="415.5" ></text>
</g>
<g >
<title>__sysvec_irq_work (2 samples, 0.03%)</title><rect x="1183.4" y="405" width="0.3" height="15.0" fill="rgb(247,104,39)" rx="2" ry="2" />
<text  x="1186.41" y="415.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="520.9" y="357" width="0.2" height="15.0" fill="rgb(207,11,32)" rx="2" ry="2" />
<text  x="523.95" y="367.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.01%)</title><rect x="340.8" y="229" width="0.2" height="15.0" fill="rgb(232,152,21)" rx="2" ry="2" />
<text  x="343.83" y="239.5" ></text>
</g>
<g >
<title>__sched_text_start (7 samples, 0.10%)</title><rect x="1182.3" y="341" width="1.1" height="15.0" fill="rgb(232,93,42)" rx="2" ry="2" />
<text  x="1185.29" y="351.5" ></text>
</g>
<g >
<title>amd_pmu_wait_on_overflow (1 samples, 0.01%)</title><rect x="340.7" y="277" width="0.1" height="15.0" fill="rgb(234,216,6)" rx="2" ry="2" />
<text  x="343.67" y="287.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (7 samples, 0.10%)</title><rect x="1182.3" y="373" width="1.1" height="15.0" fill="rgb(223,16,52)" rx="2" ry="2" />
<text  x="1185.29" y="383.5" ></text>
</g>
<g >
<title>std::num_put&lt;char, std::ostreambuf_iterator&lt;char, std::char_traits&lt;char&gt; &gt; &gt;::~num_put (1 samples, 0.01%)</title><rect x="13.7" y="469" width="0.2" height="15.0" fill="rgb(252,109,8)" rx="2" ry="2" />
<text  x="16.70" y="479.5" ></text>
</g>
<g >
<title>__const_udelay (2 samples, 0.03%)</title><rect x="10.0" y="101" width="0.3" height="15.0" fill="rgb(235,144,46)" rx="2" ry="2" />
<text  x="13.00" y="111.5" ></text>
</g>
<g >
<title>preempt_schedule_common (1 samples, 0.01%)</title><rect x="150.6" y="309" width="0.2" height="15.0" fill="rgb(243,122,21)" rx="2" ry="2" />
<text  x="153.59" y="319.5" ></text>
</g>
<g >
<title>asm_common_interrupt (1 samples, 0.01%)</title><rect x="139.8" y="453" width="0.2" height="15.0" fill="rgb(252,162,5)" rx="2" ry="2" />
<text  x="142.83" y="463.5" ></text>
</g>
<g >
<title>file_tty_write.isra.0 (21 samples, 0.29%)</title><rect x="10.0" y="341" width="3.4" height="15.0" fill="rgb(241,25,24)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>native_send_call_func_single_ipi (1 samples, 0.01%)</title><rect x="520.8" y="117" width="0.1" height="15.0" fill="rgb(217,149,43)" rx="2" ry="2" />
<text  x="523.79" y="127.5" ></text>
</g>
<g >
<title>page_remove_rmap (5 samples, 0.07%)</title><rect x="1185.8" y="309" width="0.8" height="15.0" fill="rgb(251,88,16)" rx="2" ry="2" />
<text  x="1188.82" y="319.5" ></text>
</g>
<g >
<title>irq_work_single (2 samples, 0.03%)</title><rect x="1183.4" y="357" width="0.3" height="15.0" fill="rgb(238,140,47)" rx="2" ry="2" />
<text  x="1186.41" y="367.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.01%)</title><rect x="333.6" y="293" width="0.2" height="15.0" fill="rgb(246,126,35)" rx="2" ry="2" />
<text  x="336.60" y="303.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (1 samples, 0.01%)</title><rect x="336.0" y="341" width="0.2" height="15.0" fill="rgb(238,177,25)" rx="2" ry="2" />
<text  x="339.01" y="351.5" ></text>
</g>
<g >
<title>__wake_up (2 samples, 0.03%)</title><rect x="1183.4" y="261" width="0.3" height="15.0" fill="rgb(239,135,44)" rx="2" ry="2" />
<text  x="1186.41" y="271.5" ></text>
</g>
<g >
<title>__x64_sys_write (21 samples, 0.29%)</title><rect x="10.0" y="421" width="3.4" height="15.0" fill="rgb(222,112,35)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>__sched_text_start (1 samples, 0.01%)</title><rect x="340.0" y="357" width="0.2" height="15.0" fill="rgb(237,32,5)" rx="2" ry="2" />
<text  x="343.03" y="367.5" ></text>
</g>
<g >
<title>vm_normal_page (1 samples, 0.01%)</title><rect x="1188.6" y="309" width="0.1" height="15.0" fill="rgb(225,80,41)" rx="2" ry="2" />
<text  x="1191.55" y="319.5" ></text>
</g>
<g >
<title>amd_pmu_disable_all (1 samples, 0.01%)</title><rect x="340.0" y="293" width="0.2" height="15.0" fill="rgb(241,126,11)" rx="2" ry="2" />
<text  x="343.03" y="303.5" ></text>
</g>
<g >
<title>do_user_addr_fault (1,202 samples, 16.37%)</title><rect x="145.0" y="421" width="193.1" height="15.0" fill="rgb(206,189,40)" rx="2" ry="2" />
<text  x="147.97" y="431.5" >do_user_addr_fault</text>
</g>
<g >
<title>blk_mq_complete_request (1 samples, 0.01%)</title><rect x="139.8" y="293" width="0.2" height="15.0" fill="rgb(229,188,45)" rx="2" ry="2" />
<text  x="142.83" y="303.5" ></text>
</g>
<g >
<title>scsi_mq_done (1 samples, 0.01%)</title><rect x="139.8" y="309" width="0.2" height="15.0" fill="rgb(253,210,29)" rx="2" ry="2" />
<text  x="142.83" y="319.5" ></text>
</g>
<g >
<title>common_interrupt (2 samples, 0.03%)</title><rect x="340.8" y="293" width="0.4" height="15.0" fill="rgb(224,187,42)" rx="2" ry="2" />
<text  x="343.83" y="303.5" ></text>
</g>
<g >
<title>__wake_up_common (2 samples, 0.03%)</title><rect x="1183.4" y="293" width="0.3" height="15.0" fill="rgb(232,154,45)" rx="2" ry="2" />
<text  x="1186.41" y="303.5" ></text>
</g>
<g >
<title>queue_work_on (19 samples, 0.26%)</title><rect x="10.3" y="277" width="3.1" height="15.0" fill="rgb(231,74,35)" rx="2" ry="2" />
<text  x="13.32" y="287.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.01%)</title><rect x="1182.1" y="325" width="0.2" height="15.0" fill="rgb(232,91,16)" rx="2" ry="2" />
<text  x="1185.13" y="335.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (1 samples, 0.01%)</title><rect x="340.7" y="389" width="0.1" height="15.0" fill="rgb(236,172,41)" rx="2" ry="2" />
<text  x="343.67" y="399.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="340.3" y="421" width="0.4" height="15.0" fill="rgb(244,71,11)" rx="2" ry="2" />
<text  x="343.35" y="431.5" ></text>
</g>
<g >
<title>__count_memcg_events (1 samples, 0.01%)</title><rect x="335.2" y="325" width="0.2" height="15.0" fill="rgb(214,99,36)" rx="2" ry="2" />
<text  x="338.21" y="335.5" ></text>
</g>
<g >
<title>native_read_msr (1 samples, 0.01%)</title><rect x="340.0" y="261" width="0.2" height="15.0" fill="rgb(237,131,50)" rx="2" ry="2" />
<text  x="343.03" y="271.5" ></text>
</g>
<g >
<title>free_unref_page_list (7 samples, 0.10%)</title><rect x="1187.3" y="261" width="1.1" height="15.0" fill="rgb(223,16,44)" rx="2" ry="2" />
<text  x="1190.27" y="271.5" ></text>
</g>
<g >
<title>free_unref_page_commit (7 samples, 0.10%)</title><rect x="1187.3" y="245" width="1.1" height="15.0" fill="rgb(235,100,54)" rx="2" ry="2" />
<text  x="1190.27" y="255.5" ></text>
</g>
<g >
<title>policy_node (1 samples, 0.01%)</title><rect x="331.8" y="341" width="0.2" height="15.0" fill="rgb(248,143,4)" rx="2" ry="2" />
<text  x="334.83" y="351.5" ></text>
</g>
<g >
<title>native_send_call_func_single_ipi (1 samples, 0.01%)</title><rect x="341.2" y="53" width="0.1" height="15.0" fill="rgb(250,26,40)" rx="2" ry="2" />
<text  x="344.15" y="63.5" ></text>
</g>
<g >
<title>lru_cache_add (13 samples, 0.18%)</title><rect x="332.6" y="341" width="2.1" height="15.0" fill="rgb(207,105,22)" rx="2" ry="2" />
<text  x="335.64" y="351.5" ></text>
</g>
<g >
<title>perf_pmu_disable.part.0 (1 samples, 0.01%)</title><rect x="150.6" y="261" width="0.2" height="15.0" fill="rgb(223,97,39)" rx="2" ry="2" />
<text  x="153.59" y="271.5" ></text>
</g>
<g >
<title>perf_event_task_tick (1 samples, 0.01%)</title><rect x="1182.1" y="293" width="0.2" height="15.0" fill="rgb(247,40,34)" rx="2" ry="2" />
<text  x="1185.13" y="303.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.01%)</title><rect x="331.7" y="341" width="0.1" height="15.0" fill="rgb(209,19,7)" rx="2" ry="2" />
<text  x="334.67" y="351.5" ></text>
</g>
<g >
<title>pagevec_add_and_need_flush (3 samples, 0.04%)</title><rect x="334.2" y="325" width="0.5" height="15.0" fill="rgb(208,82,15)" rx="2" ry="2" />
<text  x="337.24" y="335.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (2 samples, 0.03%)</title><rect x="1183.4" y="309" width="0.3" height="15.0" fill="rgb(223,201,11)" rx="2" ry="2" />
<text  x="1186.41" y="319.5" ></text>
</g>
<g >
<title>pmd_none_or_trans_huge_or_clear_bad (1 samples, 0.01%)</title><rect x="337.5" y="373" width="0.1" height="15.0" fill="rgb(251,129,9)" rx="2" ry="2" />
<text  x="340.46" y="383.5" ></text>
</g>
<g >
<title>do_group_exit (24 samples, 0.33%)</title><rect x="1184.9" y="437" width="3.8" height="15.0" fill="rgb(206,119,39)" rx="2" ry="2" />
<text  x="1187.86" y="447.5" ></text>
</g>
<g >
<title>irqentry_exit (1 samples, 0.01%)</title><rect x="340.7" y="421" width="0.1" height="15.0" fill="rgb(217,101,44)" rx="2" ry="2" />
<text  x="343.67" y="431.5" ></text>
</g>
<g >
<title>amd_pmu_disable_event (2 samples, 0.03%)</title><rect x="10.0" y="133" width="0.3" height="15.0" fill="rgb(230,113,9)" rx="2" ry="2" />
<text  x="13.00" y="143.5" ></text>
</g>
<g >
<title>perf_pmu_disable.part.0 (1 samples, 0.01%)</title><rect x="340.0" y="325" width="0.2" height="15.0" fill="rgb(221,195,33)" rx="2" ry="2" />
<text  x="343.03" y="335.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.01%)</title><rect x="1186.3" y="277" width="0.2" height="15.0" fill="rgb(231,132,54)" rx="2" ry="2" />
<text  x="1189.30" y="287.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.01%)</title><rect x="1182.1" y="357" width="0.2" height="15.0" fill="rgb(239,65,24)" rx="2" ry="2" />
<text  x="1185.13" y="367.5" ></text>
</g>
<g >
<title>unmap_page_range (23 samples, 0.31%)</title><rect x="1185.0" y="341" width="3.7" height="15.0" fill="rgb(217,201,2)" rx="2" ry="2" />
<text  x="1188.02" y="351.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.01%)</title><rect x="520.8" y="229" width="0.1" height="15.0" fill="rgb(228,89,14)" rx="2" ry="2" />
<text  x="523.79" y="239.5" ></text>
</g>
<g >
<title>ex11 (7,338 samples, 99.92%)</title><rect x="10.0" y="501" width="1179.0" height="15.0" fill="rgb(248,109,48)" rx="2" ry="2" />
<text  x="13.00" y="511.5" >ex11</text>
</g>
<g >
<title>sysvec_irq_work (2 samples, 0.03%)</title><rect x="1183.4" y="421" width="0.3" height="15.0" fill="rgb(217,154,52)" rx="2" ry="2" />
<text  x="1186.41" y="431.5" ></text>
</g>
<g >
<title>mmap_region (2 samples, 0.03%)</title><rect x="1188.7" y="373" width="0.3" height="15.0" fill="rgb(247,124,19)" rx="2" ry="2" />
<text  x="1191.71" y="383.5" ></text>
</g>
<g >
<title>__wake_up (1 samples, 0.01%)</title><rect x="341.2" y="197" width="0.1" height="15.0" fill="rgb(254,105,31)" rx="2" ry="2" />
<text  x="344.15" y="207.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (2 samples, 0.03%)</title><rect x="340.3" y="389" width="0.4" height="15.0" fill="rgb(212,121,20)" rx="2" ry="2" />
<text  x="343.35" y="399.5" ></text>
</g>
<g >
<title>rb_next (1 samples, 0.01%)</title><rect x="1184.9" y="341" width="0.1" height="15.0" fill="rgb(218,174,49)" rx="2" ry="2" />
<text  x="1187.86" y="351.5" ></text>
</g>
<g >
<title>send_call_function_single_ipi (1 samples, 0.01%)</title><rect x="139.8" y="213" width="0.2" height="15.0" fill="rgb(212,91,9)" rx="2" ry="2" />
<text  x="142.83" y="223.5" ></text>
</g>
<g >
<title>ioread8_rep (1 samples, 0.01%)</title><rect x="327.0" y="197" width="0.2" height="15.0" fill="rgb(247,48,3)" rx="2" ry="2" />
<text  x="330.01" y="207.5" ></text>
</g>
<g >
<title>x86_pmu_enable (7 samples, 0.10%)</title><rect x="1182.3" y="277" width="1.1" height="15.0" fill="rgb(210,53,43)" rx="2" ry="2" />
<text  x="1185.29" y="287.5" ></text>
</g>
<g >
<title>do_syscall_64 (2 samples, 0.03%)</title><rect x="1188.7" y="453" width="0.3" height="15.0" fill="rgb(230,181,3)" rx="2" ry="2" />
<text  x="1191.71" y="463.5" ></text>
</g>
<g >
<title>memmove (2 samples, 0.03%)</title><rect x="13.4" y="437" width="0.3" height="15.0" fill="rgb(217,3,13)" rx="2" ry="2" />
<text  x="16.37" y="447.5" ></text>
</g>
<g >
<title>__cond_resched (1 samples, 0.01%)</title><rect x="331.5" y="341" width="0.2" height="15.0" fill="rgb(211,70,21)" rx="2" ry="2" />
<text  x="334.51" y="351.5" ></text>
</g>
<g >
<title>x86_pmu_del (2 samples, 0.03%)</title><rect x="10.0" y="165" width="0.3" height="15.0" fill="rgb(211,38,18)" rx="2" ry="2" />
<text  x="13.00" y="175.5" ></text>
</g>
<g >
<title>get_vma_policy.part.0 (1 samples, 0.01%)</title><rect x="332.5" y="357" width="0.1" height="15.0" fill="rgb(243,61,50)" rx="2" ry="2" />
<text  x="335.48" y="367.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.01%)</title><rect x="340.7" y="373" width="0.1" height="15.0" fill="rgb(253,195,27)" rx="2" ry="2" />
<text  x="343.67" y="383.5" ></text>
</g>
<g >
<title>wake_up_klogd_work_func (1 samples, 0.01%)</title><rect x="341.2" y="277" width="0.1" height="15.0" fill="rgb(205,144,44)" rx="2" ry="2" />
<text  x="344.15" y="287.5" ></text>
</g>
<g >
<title>event_sched_out.isra.0 (2 samples, 0.03%)</title><rect x="10.0" y="181" width="0.3" height="15.0" fill="rgb(209,38,40)" rx="2" ry="2" />
<text  x="13.00" y="191.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (2 samples, 0.03%)</title><rect x="1188.7" y="405" width="0.3" height="15.0" fill="rgb(253,107,43)" rx="2" ry="2" />
<text  x="1191.71" y="415.5" ></text>
</g>
<g >
<title>irq_work_run_list (1 samples, 0.01%)</title><rect x="341.2" y="309" width="0.1" height="15.0" fill="rgb(241,10,48)" rx="2" ry="2" />
<text  x="344.15" y="319.5" ></text>
</g>
<g >
<title>native_write_msr (1 samples, 0.01%)</title><rect x="139.8" y="181" width="0.2" height="15.0" fill="rgb(208,35,53)" rx="2" ry="2" />
<text  x="142.83" y="191.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (3 samples, 0.04%)</title><rect x="340.3" y="453" width="0.5" height="15.0" fill="rgb(223,109,27)" rx="2" ry="2" />
<text  x="343.35" y="463.5" ></text>
</g>
<g >
<title>common_interrupt (1 samples, 0.01%)</title><rect x="327.0" y="277" width="0.2" height="15.0" fill="rgb(209,54,12)" rx="2" ry="2" />
<text  x="330.01" y="287.5" ></text>
</g>
<g >
<title>page_mapping (2 samples, 0.03%)</title><rect x="333.8" y="309" width="0.3" height="15.0" fill="rgb(220,87,2)" rx="2" ry="2" />
<text  x="336.76" y="319.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (24 samples, 0.33%)</title><rect x="1184.9" y="453" width="3.8" height="15.0" fill="rgb(246,113,6)" rx="2" ry="2" />
<text  x="1187.86" y="463.5" ></text>
</g>
<g >
<title>x86_pmu_stop (1 samples, 0.01%)</title><rect x="520.9" y="197" width="0.2" height="15.0" fill="rgb(222,7,3)" rx="2" ry="2" />
<text  x="523.95" y="207.5" ></text>
</g>
<g >
<title>native_write_msr (7 samples, 0.10%)</title><rect x="1182.3" y="261" width="1.1" height="15.0" fill="rgb(207,71,40)" rx="2" ry="2" />
<text  x="1185.29" y="271.5" ></text>
</g>
<g >
<title>blk_mq_complete_request_remote (1 samples, 0.01%)</title><rect x="139.8" y="277" width="0.2" height="15.0" fill="rgb(223,181,3)" rx="2" ry="2" />
<text  x="142.83" y="287.5" ></text>
</g>
<g >
<title>delay_tsc (2 samples, 0.03%)</title><rect x="10.0" y="85" width="0.3" height="15.0" fill="rgb(227,201,27)" rx="2" ry="2" />
<text  x="13.00" y="95.5" ></text>
</g>
<g >
<title>__libc_start_main (7,288 samples, 99.24%)</title><rect x="13.9" y="485" width="1171.0" height="15.0" fill="rgb(224,205,53)" rx="2" ry="2" />
<text  x="16.86" y="495.5" >__libc_start_main</text>
</g>
<g >
<title>native_send_call_func_single_ipi (1 samples, 0.01%)</title><rect x="139.8" y="197" width="0.2" height="15.0" fill="rgb(246,152,21)" rx="2" ry="2" />
<text  x="142.83" y="207.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.01%)</title><rect x="1187.1" y="261" width="0.2" height="15.0" fill="rgb(246,81,19)" rx="2" ry="2" />
<text  x="1190.11" y="271.5" ></text>
</g>
<g >
<title>handle_fasteoi_irq (2 samples, 0.03%)</title><rect x="340.8" y="261" width="0.4" height="15.0" fill="rgb(243,11,15)" rx="2" ry="2" />
<text  x="343.83" y="271.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_out (1 samples, 0.01%)</title><rect x="340.7" y="341" width="0.1" height="15.0" fill="rgb(223,214,27)" rx="2" ry="2" />
<text  x="343.67" y="351.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2 samples, 0.03%)</title><rect x="340.3" y="405" width="0.4" height="15.0" fill="rgb(217,192,41)" rx="2" ry="2" />
<text  x="343.35" y="415.5" ></text>
</g>
<g >
<title>__pagevec_lru_add (9 samples, 0.12%)</title><rect x="332.6" y="325" width="1.5" height="15.0" fill="rgb(217,194,30)" rx="2" ry="2" />
<text  x="335.64" y="335.5" ></text>
</g>
<g >
<title>do_syscall_64 (6 samples, 0.08%)</title><rect x="1189.0" y="453" width="1.0" height="15.0" fill="rgb(209,75,6)" rx="2" ry="2" />
<text  x="1192.04" y="463.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (3 samples, 0.04%)</title><rect x="340.8" y="389" width="0.5" height="15.0" fill="rgb(229,217,30)" rx="2" ry="2" />
<text  x="343.83" y="399.5" ></text>
</g>
<g >
<title>native_write_msr (2 samples, 0.03%)</title><rect x="1183.4" y="101" width="0.3" height="15.0" fill="rgb(234,145,4)" rx="2" ry="2" />
<text  x="1186.41" y="111.5" ></text>
</g>
<g >
<title>handle_mm_fault (3 samples, 0.04%)</title><rect x="338.4" y="421" width="0.5" height="15.0" fill="rgb(248,105,37)" rx="2" ry="2" />
<text  x="341.42" y="431.5" ></text>
</g>
<g >
<title>sysvec_call_function_single (7 samples, 0.10%)</title><rect x="1182.3" y="421" width="1.1" height="15.0" fill="rgb(211,171,42)" rx="2" ry="2" />
<text  x="1185.29" y="431.5" ></text>
</g>
<g >
<title>__smp_call_single_queue (1 samples, 0.01%)</title><rect x="139.8" y="229" width="0.2" height="15.0" fill="rgb(209,76,1)" rx="2" ry="2" />
<text  x="142.83" y="239.5" ></text>
</g>
<g >
<title>std::ostream::_M_insert&lt;long&gt; (1 samples, 0.01%)</title><rect x="13.7" y="437" width="0.2" height="15.0" fill="rgb(211,197,51)" rx="2" ry="2" />
<text  x="16.70" y="447.5" ></text>
</g>
<g >
<title>tasklet_action_common.isra.0 (1 samples, 0.01%)</title><rect x="520.8" y="357" width="0.1" height="15.0" fill="rgb(219,195,16)" rx="2" ry="2" />
<text  x="523.79" y="367.5" ></text>
</g>
<g >
<title>ctx_sched_out (2 samples, 0.03%)</title><rect x="10.0" y="213" width="0.3" height="15.0" fill="rgb(238,31,27)" rx="2" ry="2" />
<text  x="13.00" y="223.5" ></text>
</g>
<g >
<title>__page_set_anon_rmap (1 samples, 0.01%)</title><rect x="149.3" y="357" width="0.2" height="15.0" fill="rgb(222,222,53)" rx="2" ry="2" />
<text  x="152.31" y="367.5" ></text>
</g>
<g >
<title>scheduler_tick (2 samples, 0.03%)</title><rect x="340.3" y="325" width="0.4" height="15.0" fill="rgb(246,132,24)" rx="2" ry="2" />
<text  x="343.35" y="335.5" ></text>
</g>
<g >
<title>asm_sysvec_call_function_single (7 samples, 0.10%)</title><rect x="1182.3" y="437" width="1.1" height="15.0" fill="rgb(240,158,11)" rx="2" ry="2" />
<text  x="1185.29" y="447.5" ></text>
</g>
<g >
<title>alloc_pages_vma (1,133 samples, 15.43%)</title><rect x="149.9" y="357" width="182.1" height="15.0" fill="rgb(240,106,21)" rx="2" ry="2" />
<text  x="152.95" y="367.5" >alloc_pages_vma</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (3 samples, 0.04%)</title><rect x="340.3" y="437" width="0.5" height="15.0" fill="rgb(207,12,7)" rx="2" ry="2" />
<text  x="343.35" y="447.5" ></text>
</g>
<g >
<title>[unknown] (1 samples, 0.01%)</title><rect x="13.7" y="453" width="0.2" height="15.0" fill="rgb(253,197,0)" rx="2" ry="2" />
<text  x="16.70" y="463.5" ></text>
</g>
<g >
<title>asm_common_interrupt (2 samples, 0.03%)</title><rect x="340.8" y="309" width="0.4" height="15.0" fill="rgb(218,199,19)" rx="2" ry="2" />
<text  x="343.83" y="319.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (2 samples, 0.03%)</title><rect x="340.8" y="325" width="0.4" height="15.0" fill="rgb(243,68,52)" rx="2" ry="2" />
<text  x="343.83" y="335.5" ></text>
</g>
<g >
<title>__smp_call_single_queue (1 samples, 0.01%)</title><rect x="341.2" y="85" width="0.1" height="15.0" fill="rgb(209,33,7)" rx="2" ry="2" />
<text  x="344.15" y="95.5" ></text>
</g>
<g >
<title>alloc_pages (1 samples, 0.01%)</title><rect x="1185.7" y="277" width="0.1" height="15.0" fill="rgb(210,228,46)" rx="2" ry="2" />
<text  x="1188.66" y="287.5" ></text>
</g>
<g >
<title>__tlb_remove_page_size (1 samples, 0.01%)</title><rect x="1185.7" y="309" width="0.1" height="15.0" fill="rgb(223,159,51)" rx="2" ry="2" />
<text  x="1188.66" y="319.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.01%)</title><rect x="336.3" y="341" width="0.2" height="15.0" fill="rgb(248,217,33)" rx="2" ry="2" />
<text  x="339.33" y="351.5" ></text>
</g>
<g >
<title>__queue_work (19 samples, 0.26%)</title><rect x="10.3" y="261" width="3.1" height="15.0" fill="rgb(206,20,36)" rx="2" ry="2" />
<text  x="13.32" y="271.5" ></text>
</g>
<g >
<title>load_elf_binary (6 samples, 0.08%)</title><rect x="1189.0" y="373" width="1.0" height="15.0" fill="rgb(236,73,35)" rx="2" ry="2" />
<text  x="1192.04" y="383.5" ></text>
</g>
<g >
<title>mmput (24 samples, 0.33%)</title><rect x="1184.9" y="405" width="3.8" height="15.0" fill="rgb(213,167,33)" rx="2" ry="2" />
<text  x="1187.86" y="415.5" ></text>
</g>
<g >
<title>asm_sysvec_call_function_single (1 samples, 0.01%)</title><rect x="144.8" y="421" width="0.2" height="15.0" fill="rgb(223,159,52)" rx="2" ry="2" />
<text  x="147.81" y="431.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.01%)</title><rect x="1185.7" y="245" width="0.1" height="15.0" fill="rgb(244,97,46)" rx="2" ry="2" />
<text  x="1188.66" y="255.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.01%)</title><rect x="341.2" y="117" width="0.1" height="15.0" fill="rgb(254,216,25)" rx="2" ry="2" />
<text  x="344.15" y="127.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.01%)</title><rect x="520.8" y="245" width="0.1" height="15.0" fill="rgb(224,223,39)" rx="2" ry="2" />
<text  x="523.79" y="255.5" ></text>
</g>
<g >
<title>std::__ostream_insert&lt;char, std::char_traits&lt;char&gt; &gt; (1 samples, 0.01%)</title><rect x="1184.7" y="469" width="0.2" height="15.0" fill="rgb(253,154,42)" rx="2" ry="2" />
<text  x="1187.70" y="479.5" ></text>
</g>
<g >
<title>wake_up_klogd_work_func (2 samples, 0.03%)</title><rect x="1183.4" y="341" width="0.3" height="15.0" fill="rgb(236,57,39)" rx="2" ry="2" />
<text  x="1186.41" y="351.5" ></text>
</g>
<g >
<title>alloc_pages (3 samples, 0.04%)</title><rect x="149.5" y="325" width="0.4" height="15.0" fill="rgb(243,112,21)" rx="2" ry="2" />
<text  x="152.47" y="335.5" ></text>
</g>
<g >
<title>__cond_resched (2 samples, 0.03%)</title><rect x="150.4" y="325" width="0.4" height="15.0" fill="rgb(231,228,34)" rx="2" ry="2" />
<text  x="153.43" y="335.5" ></text>
</g>
<g >
<title>__inc_numa_state (2 samples, 0.03%)</title><rect x="151.2" y="309" width="0.4" height="15.0" fill="rgb(220,102,24)" rx="2" ry="2" />
<text  x="154.23" y="319.5" ></text>
</g>
<g >
<title>__irqentry_text_end (2 samples, 0.03%)</title><rect x="139.5" y="453" width="0.3" height="15.0" fill="rgb(240,185,38)" rx="2" ry="2" />
<text  x="142.50" y="463.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.0 (1 samples, 0.01%)</title><rect x="1182.1" y="341" width="0.2" height="15.0" fill="rgb(252,1,32)" rx="2" ry="2" />
<text  x="1185.13" y="351.5" ></text>
</g>
<g >
<title>irqentry_exit (1 samples, 0.01%)</title><rect x="520.9" y="405" width="0.2" height="15.0" fill="rgb(227,211,1)" rx="2" ry="2" />
<text  x="523.95" y="415.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (1,247 samples, 16.98%)</title><rect x="140.0" y="453" width="200.3" height="15.0" fill="rgb(209,61,43)" rx="2" ry="2" />
<text  x="142.99" y="463.5" >asm_exc_page_fault</text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.01%)</title><rect x="341.2" y="229" width="0.1" height="15.0" fill="rgb(251,68,4)" rx="2" ry="2" />
<text  x="344.15" y="239.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.01%)</title><rect x="1182.1" y="373" width="0.2" height="15.0" fill="rgb(248,221,4)" rx="2" ry="2" />
<text  x="1185.13" y="383.5" ></text>
</g>
<g >
<title>group_sched_out.part.0 (2 samples, 0.03%)</title><rect x="10.0" y="197" width="0.3" height="15.0" fill="rgb(227,225,37)" rx="2" ry="2" />
<text  x="13.00" y="207.5" ></text>
</g>
<g >
<title>free_pgtables (1 samples, 0.01%)</title><rect x="1184.9" y="373" width="0.1" height="15.0" fill="rgb(229,69,36)" rx="2" ry="2" />
<text  x="1187.86" y="383.5" ></text>
</g>
<g >
<title>irq_exit_rcu (1 samples, 0.01%)</title><rect x="520.8" y="405" width="0.1" height="15.0" fill="rgb(233,117,53)" rx="2" ry="2" />
<text  x="523.79" y="415.5" ></text>
</g>
<g >
<title>perf-exec (6 samples, 0.08%)</title><rect x="1189.0" y="501" width="1.0" height="15.0" fill="rgb(206,96,5)" rx="2" ry="2" />
<text  x="1192.04" y="511.5" ></text>
</g>
<g >
<title>vfs_write (21 samples, 0.29%)</title><rect x="10.0" y="389" width="3.4" height="15.0" fill="rgb(229,185,32)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (2 samples, 0.03%)</title><rect x="337.1" y="373" width="0.4" height="15.0" fill="rgb(217,4,22)" rx="2" ry="2" />
<text  x="340.14" y="383.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (12 samples, 0.16%)</title><rect x="1186.6" y="293" width="2.0" height="15.0" fill="rgb(228,24,52)" rx="2" ry="2" />
<text  x="1189.63" y="303.5" ></text>
</g>
<g >
<title>mpt_interrupt (1 samples, 0.01%)</title><rect x="340.8" y="197" width="0.2" height="15.0" fill="rgb(218,118,16)" rx="2" ry="2" />
<text  x="343.83" y="207.5" ></text>
</g>
<g >
<title>find_vma (2 samples, 0.03%)</title><rect x="338.1" y="421" width="0.3" height="15.0" fill="rgb(211,7,27)" rx="2" ry="2" />
<text  x="341.10" y="431.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (6 samples, 0.08%)</title><rect x="1189.0" y="421" width="1.0" height="15.0" fill="rgb(215,12,18)" rx="2" ry="2" />
<text  x="1192.04" y="431.5" ></text>
</g>
<g >
<title>sync_regs (6 samples, 0.08%)</title><rect x="1183.7" y="453" width="1.0" height="15.0" fill="rgb(236,13,26)" rx="2" ry="2" />
<text  x="1186.73" y="463.5" ></text>
</g>
<g >
<title>amd_pmu_wait_on_overflow (1 samples, 0.01%)</title><rect x="520.9" y="165" width="0.2" height="15.0" fill="rgb(253,201,12)" rx="2" ry="2" />
<text  x="523.95" y="175.5" ></text>
</g>
<g >
<title>exec_binprm (6 samples, 0.08%)</title><rect x="1189.0" y="389" width="1.0" height="15.0" fill="rgb(228,126,4)" rx="2" ry="2" />
<text  x="1192.04" y="399.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.01%)</title><rect x="520.8" y="181" width="0.1" height="15.0" fill="rgb(235,190,24)" rx="2" ry="2" />
<text  x="523.79" y="191.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="1182.1" y="421" width="0.2" height="15.0" fill="rgb(222,153,18)" rx="2" ry="2" />
<text  x="1185.13" y="431.5" ></text>
</g>
<g >
<title>x86_pmu_disable (1 samples, 0.01%)</title><rect x="1182.1" y="261" width="0.2" height="15.0" fill="rgb(234,169,33)" rx="2" ry="2" />
<text  x="1185.13" y="271.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (24 samples, 0.33%)</title><rect x="1184.9" y="485" width="3.8" height="15.0" fill="rgb(252,30,39)" rx="2" ry="2" />
<text  x="1187.86" y="495.5" ></text>
</g>
<g >
<title>[unknown] (24 samples, 0.33%)</title><rect x="10.0" y="485" width="3.9" height="15.0" fill="rgb(208,21,37)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="340.8" y="357" width="0.4" height="15.0" fill="rgb(247,17,8)" rx="2" ry="2" />
<text  x="343.83" y="367.5" ></text>
</g>
<g >
<title>send_call_function_single_ipi (2 samples, 0.03%)</title><rect x="1183.4" y="133" width="0.3" height="15.0" fill="rgb(230,218,30)" rx="2" ry="2" />
<text  x="1186.41" y="143.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.01%)</title><rect x="520.9" y="229" width="0.2" height="15.0" fill="rgb(223,80,51)" rx="2" ry="2" />
<text  x="523.95" y="239.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (1 samples, 0.01%)</title><rect x="340.7" y="405" width="0.1" height="15.0" fill="rgb(246,87,37)" rx="2" ry="2" />
<text  x="343.67" y="415.5" ></text>
</g>
<g >
<title>unmap_single_vma (23 samples, 0.31%)</title><rect x="1185.0" y="357" width="3.7" height="15.0" fill="rgb(221,89,11)" rx="2" ry="2" />
<text  x="1188.02" y="367.5" ></text>
</g>
<g >
<title>__get_vma_policy (2 samples, 0.03%)</title><rect x="149.0" y="357" width="0.3" height="15.0" fill="rgb(229,157,20)" rx="2" ry="2" />
<text  x="151.98" y="367.5" ></text>
</g>
<g >
<title>wake_up_process (19 samples, 0.26%)</title><rect x="10.3" y="229" width="3.1" height="15.0" fill="rgb(250,217,34)" rx="2" ry="2" />
<text  x="13.32" y="239.5" ></text>
</g>
<g >
<title>delay_tsc (1 samples, 0.01%)</title><rect x="340.7" y="245" width="0.1" height="15.0" fill="rgb(224,13,54)" rx="2" ry="2" />
<text  x="343.67" y="255.5" ></text>
</g>
<g >
<title>ksys_write (21 samples, 0.29%)</title><rect x="10.0" y="405" width="3.4" height="15.0" fill="rgb(231,195,37)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>amd_pmu_disable_all (1 samples, 0.01%)</title><rect x="340.7" y="293" width="0.1" height="15.0" fill="rgb(216,92,31)" rx="2" ry="2" />
<text  x="343.67" y="303.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (12 samples, 0.16%)</title><rect x="1186.6" y="309" width="2.0" height="15.0" fill="rgb(206,61,43)" rx="2" ry="2" />
<text  x="1189.63" y="319.5" ></text>
</g>
<g >
<title>get_page_from_freelist (3 samples, 0.04%)</title><rect x="149.5" y="293" width="0.4" height="15.0" fill="rgb(242,212,51)" rx="2" ry="2" />
<text  x="152.47" y="303.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (1 samples, 0.01%)</title><rect x="341.2" y="245" width="0.1" height="15.0" fill="rgb(228,4,32)" rx="2" ry="2" />
<text  x="344.15" y="255.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (5 samples, 0.07%)</title><rect x="1187.6" y="229" width="0.8" height="15.0" fill="rgb(248,64,7)" rx="2" ry="2" />
<text  x="1190.59" y="239.5" ></text>
</g>
<g >
<title>mpt_interrupt (1 samples, 0.01%)</title><rect x="139.8" y="341" width="0.2" height="15.0" fill="rgb(218,85,3)" rx="2" ry="2" />
<text  x="142.83" y="351.5" ></text>
</g>
<g >
<title>default_wake_function (2 samples, 0.03%)</title><rect x="1183.4" y="197" width="0.3" height="15.0" fill="rgb(206,109,43)" rx="2" ry="2" />
<text  x="1186.41" y="207.5" ></text>
</g>
<g >
<title>__vma_link_file (2 samples, 0.03%)</title><rect x="1188.7" y="341" width="0.3" height="15.0" fill="rgb(254,16,17)" rx="2" ry="2" />
<text  x="1191.71" y="351.5" ></text>
</g>
<g >
<title>mem_cgroup_update_lru_size (1 samples, 0.01%)</title><rect x="1188.4" y="261" width="0.2" height="15.0" fill="rgb(238,89,10)" rx="2" ry="2" />
<text  x="1191.39" y="271.5" ></text>
</g>
<g >
<title>irqentry_exit (9 samples, 0.12%)</title><rect x="338.9" y="421" width="1.4" height="15.0" fill="rgb(227,57,32)" rx="2" ry="2" />
<text  x="341.90" y="431.5" ></text>
</g>
<g >
<title>vma_link (2 samples, 0.03%)</title><rect x="1188.7" y="357" width="0.3" height="15.0" fill="rgb(230,126,7)" rx="2" ry="2" />
<text  x="1191.71" y="367.5" ></text>
</g>
<g >
<title>perf_event_task_tick (1 samples, 0.01%)</title><rect x="520.9" y="213" width="0.2" height="15.0" fill="rgb(236,216,4)" rx="2" ry="2" />
<text  x="523.95" y="223.5" ></text>
</g>
<g >
<title>native_send_call_func_single_ipi (2 samples, 0.03%)</title><rect x="1183.4" y="117" width="0.3" height="15.0" fill="rgb(224,54,13)" rx="2" ry="2" />
<text  x="1186.41" y="127.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.01%)</title><rect x="1182.1" y="405" width="0.2" height="15.0" fill="rgb(247,220,47)" rx="2" ry="2" />
<text  x="1185.13" y="415.5" ></text>
</g>
<g >
<title>try_to_wake_up (2 samples, 0.03%)</title><rect x="1183.4" y="181" width="0.3" height="15.0" fill="rgb(236,26,53)" rx="2" ry="2" />
<text  x="1186.41" y="191.5" ></text>
</g>
<g >
<title>finish_task_switch (7 samples, 0.10%)</title><rect x="1182.3" y="325" width="1.1" height="15.0" fill="rgb(210,32,22)" rx="2" ry="2" />
<text  x="1185.29" y="335.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (4 samples, 0.05%)</title><rect x="336.5" y="341" width="0.6" height="15.0" fill="rgb(239,89,54)" rx="2" ry="2" />
<text  x="339.49" y="351.5" ></text>
</g>
<g >
<title>perf_pmu_disable.part.0 (1 samples, 0.01%)</title><rect x="1182.1" y="277" width="0.2" height="15.0" fill="rgb(226,35,44)" rx="2" ry="2" />
<text  x="1185.13" y="287.5" ></text>
</g>
<g >
<title>irq_work_run_list (2 samples, 0.03%)</title><rect x="1183.4" y="373" width="0.3" height="15.0" fill="rgb(232,80,12)" rx="2" ry="2" />
<text  x="1186.41" y="383.5" ></text>
</g>
<g >
<title>n_tty_write (21 samples, 0.29%)</title><rect x="10.0" y="325" width="3.4" height="15.0" fill="rgb(236,24,11)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>__alloc_pages (2 samples, 0.03%)</title><rect x="148.7" y="357" width="0.3" height="15.0" fill="rgb(241,80,40)" rx="2" ry="2" />
<text  x="151.66" y="367.5" ></text>
</g>
<g >
<title>all (7,344 samples, 100%)</title><rect x="10.0" y="517" width="1180.0" height="15.0" fill="rgb(249,168,24)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (2 samples, 0.03%)</title><rect x="1183.4" y="245" width="0.3" height="15.0" fill="rgb(240,164,14)" rx="2" ry="2" />
<text  x="1186.41" y="255.5" ></text>
</g>
<g >
<title>sock_def_readable (1 samples, 0.01%)</title><rect x="520.8" y="277" width="0.1" height="15.0" fill="rgb(220,121,29)" rx="2" ry="2" />
<text  x="523.79" y="287.5" ></text>
</g>
<g >
<title>exit_mmap (24 samples, 0.33%)</title><rect x="1184.9" y="389" width="3.8" height="15.0" fill="rgb(242,223,33)" rx="2" ry="2" />
<text  x="1187.86" y="399.5" ></text>
</g>
<g >
<title>perf_pmu_disable.part.0 (1 samples, 0.01%)</title><rect x="340.7" y="325" width="0.1" height="15.0" fill="rgb(235,41,34)" rx="2" ry="2" />
<text  x="343.67" y="335.5" ></text>
</g>
<g >
<title>delay_tsc (1 samples, 0.01%)</title><rect x="150.6" y="181" width="0.2" height="15.0" fill="rgb(223,51,24)" rx="2" ry="2" />
<text  x="153.59" y="191.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (9 samples, 0.12%)</title><rect x="338.9" y="405" width="1.4" height="15.0" fill="rgb(224,219,33)" rx="2" ry="2" />
<text  x="341.90" y="415.5" ></text>
</g>
<g >
<title>__alloc_pages (1 samples, 0.01%)</title><rect x="1185.7" y="261" width="0.1" height="15.0" fill="rgb(218,74,45)" rx="2" ry="2" />
<text  x="1188.66" y="271.5" ></text>
</g>
<g >
<title>__alloc_pages (1,130 samples, 15.39%)</title><rect x="149.9" y="341" width="181.6" height="15.0" fill="rgb(231,66,4)" rx="2" ry="2" />
<text  x="152.95" y="351.5" >__alloc_pages</text>
</g>
<g >
<title>tick_sched_handle.isra.0 (1 samples, 0.01%)</title><rect x="520.9" y="261" width="0.2" height="15.0" fill="rgb(237,98,31)" rx="2" ry="2" />
<text  x="523.95" y="271.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_out (1 samples, 0.01%)</title><rect x="340.0" y="341" width="0.2" height="15.0" fill="rgb(206,60,28)" rx="2" ry="2" />
<text  x="343.03" y="351.5" ></text>
</g>
<g >
<title>irq_work_run (1 samples, 0.01%)</title><rect x="341.2" y="325" width="0.1" height="15.0" fill="rgb(216,140,47)" rx="2" ry="2" />
<text  x="344.15" y="335.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (1 samples, 0.01%)</title><rect x="520.9" y="373" width="0.2" height="15.0" fill="rgb(240,25,38)" rx="2" ry="2" />
<text  x="523.95" y="383.5" ></text>
</g>
<g >
<title>asm_sysvec_irq_work (1 samples, 0.01%)</title><rect x="341.2" y="373" width="0.1" height="15.0" fill="rgb(205,151,8)" rx="2" ry="2" />
<text  x="344.15" y="383.5" ></text>
</g>
<g >
<title>insert_work (19 samples, 0.26%)</title><rect x="10.3" y="245" width="3.1" height="15.0" fill="rgb(227,208,34)" rx="2" ry="2" />
<text  x="13.32" y="255.5" ></text>
</g>
<g >
<title>delay_tsc (1 samples, 0.01%)</title><rect x="1182.1" y="197" width="0.2" height="15.0" fill="rgb(213,216,37)" rx="2" ry="2" />
<text  x="1185.13" y="207.5" ></text>
</g>
<g >
<title>__smp_call_single_queue (19 samples, 0.26%)</title><rect x="10.3" y="181" width="3.1" height="15.0" fill="rgb(209,145,11)" rx="2" ry="2" />
<text  x="13.32" y="191.5" ></text>
</g>
<g >
<title>schedule (7 samples, 0.10%)</title><rect x="1182.3" y="357" width="1.1" height="15.0" fill="rgb(223,51,38)" rx="2" ry="2" />
<text  x="1185.29" y="367.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.01%)</title><rect x="520.9" y="277" width="0.2" height="15.0" fill="rgb(248,108,13)" rx="2" ry="2" />
<text  x="523.95" y="287.5" ></text>
</g>
<g >
<title>ep_poll_callback (1 samples, 0.01%)</title><rect x="341.2" y="213" width="0.1" height="15.0" fill="rgb(237,111,30)" rx="2" ry="2" />
<text  x="344.15" y="223.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (1 samples, 0.01%)</title><rect x="1186.1" y="229" width="0.2" height="15.0" fill="rgb(243,217,35)" rx="2" ry="2" />
<text  x="1189.14" y="239.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.01%)</title><rect x="1182.1" y="389" width="0.2" height="15.0" fill="rgb(237,5,13)" rx="2" ry="2" />
<text  x="1185.13" y="399.5" ></text>
</g>
<g >
<title>__smp_call_single_queue (2 samples, 0.03%)</title><rect x="1183.4" y="149" width="0.3" height="15.0" fill="rgb(220,191,38)" rx="2" ry="2" />
<text  x="1186.41" y="159.5" ></text>
</g>
<g >
<title>send_call_function_single_ipi (19 samples, 0.26%)</title><rect x="10.3" y="165" width="3.1" height="15.0" fill="rgb(237,25,8)" rx="2" ry="2" />
<text  x="13.32" y="175.5" ></text>
</g>
<g >
<title>mmap64 (2 samples, 0.03%)</title><rect x="1188.7" y="485" width="0.3" height="15.0" fill="rgb(229,120,46)" rx="2" ry="2" />
<text  x="1191.71" y="495.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (2 samples, 0.03%)</title><rect x="339.7" y="373" width="0.3" height="15.0" fill="rgb(223,32,52)" rx="2" ry="2" />
<text  x="342.71" y="383.5" ></text>
</g>
<g >
<title>common_interrupt (1 samples, 0.01%)</title><rect x="139.8" y="437" width="0.2" height="15.0" fill="rgb(220,31,30)" rx="2" ry="2" />
<text  x="142.83" y="447.5" ></text>
</g>
<g >
<title>tty_flip_buffer_push (19 samples, 0.26%)</title><rect x="10.3" y="293" width="3.1" height="15.0" fill="rgb(253,222,19)" rx="2" ry="2" />
<text  x="13.32" y="303.5" ></text>
</g>
</g>
</svg>
