<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="534" onload="init(evt)" viewBox="0 0 1200 534" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="534.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="517" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="517" > </text>
<g id="frames">
<g >
<title>queue_work_on (12 samples, 0.24%)</title><rect x="11.0" y="245" width="2.9" height="15.0" fill="rgb(248,49,44)" rx="2" ry="2" />
<text  x="13.96" y="255.5" ></text>
</g>
<g >
<title>uhci_irq (1 samples, 0.02%)</title><rect x="1167.8" y="85" width="0.3" height="15.0" fill="rgb(241,87,12)" rx="2" ry="2" />
<text  x="1170.85" y="95.5" ></text>
</g>
<g >
<title>asm_common_interrupt (2 samples, 0.04%)</title><rect x="1175.6" y="357" width="0.4" height="15.0" fill="rgb(238,138,11)" rx="2" ry="2" />
<text  x="1178.55" y="367.5" ></text>
</g>
<g >
<title>ioapic_ack_level (2 samples, 0.04%)</title><rect x="1175.6" y="293" width="0.4" height="15.0" fill="rgb(224,197,41)" rx="2" ry="2" />
<text  x="1178.55" y="303.5" ></text>
</g>
<g >
<title>irqentry_exit (11 samples, 0.22%)</title><rect x="1176.3" y="389" width="2.6" height="15.0" fill="rgb(237,54,13)" rx="2" ry="2" />
<text  x="1179.28" y="399.5" ></text>
</g>
<g >
<title>page_add_file_rmap (2 samples, 0.04%)</title><rect x="1181.3" y="309" width="0.5" height="15.0" fill="rgb(214,27,21)" rx="2" ry="2" />
<text  x="1184.33" y="319.5" ></text>
</g>
<g >
<title>usb_hcd_irq (1 samples, 0.02%)</title><rect x="1152.4" y="149" width="0.3" height="15.0" fill="rgb(213,224,1)" rx="2" ry="2" />
<text  x="1155.44" y="159.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="1185.9" y="229" width="0.2" height="15.0" fill="rgb(224,13,19)" rx="2" ry="2" />
<text  x="1188.91" y="239.5" ></text>
</g>
<g >
<title>uhci_get_current_frame_number.part.0 (1 samples, 0.02%)</title><rect x="1096.6" y="229" width="0.2" height="15.0" fill="rgb(206,50,21)" rx="2" ry="2" />
<text  x="1099.58" y="239.5" ></text>
</g>
<g >
<title>main (4,849 samples, 98.94%)</title><rect x="13.9" y="437" width="1167.4" height="15.0" fill="rgb(247,132,17)" rx="2" ry="2" />
<text  x="16.85" y="447.5" >main</text>
</g>
<g >
<title>schedule (1 samples, 0.02%)</title><rect x="1174.4" y="341" width="0.2" height="15.0" fill="rgb(214,61,47)" rx="2" ry="2" />
<text  x="1177.35" y="351.5" ></text>
</g>
<g >
<title>mmput (28 samples, 0.57%)</title><rect x="1181.8" y="373" width="6.8" height="15.0" fill="rgb(220,195,6)" rx="2" ry="2" />
<text  x="1184.81" y="383.5" ></text>
</g>
<g >
<title>native_read_msr (2 samples, 0.04%)</title><rect x="1175.6" y="261" width="0.4" height="15.0" fill="rgb(228,74,16)" rx="2" ry="2" />
<text  x="1178.55" y="271.5" ></text>
</g>
<g >
<title>usb_hcd_irq (1 samples, 0.02%)</title><rect x="1167.8" y="101" width="0.3" height="15.0" fill="rgb(207,42,46)" rx="2" ry="2" />
<text  x="1170.85" y="111.5" ></text>
</g>
<g >
<title>do_user_addr_fault (264 samples, 5.39%)</title><rect x="1108.1" y="389" width="63.6" height="15.0" fill="rgb(205,66,2)" rx="2" ry="2" />
<text  x="1111.14" y="399.5" >do_use..</text>
</g>
<g >
<title>rcu_core_si (1 samples, 0.02%)</title><rect x="1176.0" y="357" width="0.3" height="15.0" fill="rgb(237,9,24)" rx="2" ry="2" />
<text  x="1179.04" y="367.5" ></text>
</g>
<g >
<title>__common_interrupt (1 samples, 0.02%)</title><rect x="1167.8" y="181" width="0.3" height="15.0" fill="rgb(210,67,42)" rx="2" ry="2" />
<text  x="1170.85" y="191.5" ></text>
</g>
<g >
<title>ioapic_ack_level (2 samples, 0.04%)</title><rect x="1096.8" y="357" width="0.5" height="15.0" fill="rgb(209,151,2)" rx="2" ry="2" />
<text  x="1099.82" y="367.5" ></text>
</g>
<g >
<title>wake_up_process (1 samples, 0.02%)</title><rect x="1176.0" y="261" width="0.3" height="15.0" fill="rgb(212,206,36)" rx="2" ry="2" />
<text  x="1179.04" y="271.5" ></text>
</g>
<g >
<title>do_syscall_64 (28 samples, 0.57%)</title><rect x="1181.8" y="437" width="6.8" height="15.0" fill="rgb(232,25,30)" rx="2" ry="2" />
<text  x="1184.81" y="447.5" ></text>
</g>
<g >
<title>__x64_sys_write (16 samples, 0.33%)</title><rect x="10.0" y="389" width="3.9" height="15.0" fill="rgb(241,191,36)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>event_sched_out.isra.0 (2 samples, 0.04%)</title><rect x="10.2" y="149" width="0.5" height="15.0" fill="rgb(205,162,34)" rx="2" ry="2" />
<text  x="13.24" y="159.5" ></text>
</g>
<g >
<title>should_fail_alloc_page (1 samples, 0.02%)</title><rect x="1159.4" y="309" width="0.3" height="15.0" fill="rgb(245,123,28)" rx="2" ry="2" />
<text  x="1162.42" y="319.5" ></text>
</g>
<g >
<title>vfs_write (16 samples, 0.33%)</title><rect x="10.0" y="357" width="3.9" height="15.0" fill="rgb(239,27,47)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.02%)</title><rect x="1185.9" y="213" width="0.2" height="15.0" fill="rgb(250,42,3)" rx="2" ry="2" />
<text  x="1188.91" y="223.5" ></text>
</g>
<g >
<title>mptscsih_io_done (1 samples, 0.02%)</title><rect x="1108.9" y="245" width="0.2" height="15.0" fill="rgb(219,7,28)" rx="2" ry="2" />
<text  x="1111.86" y="255.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1119.0" y="261" width="0.2" height="15.0" fill="rgb(207,209,31)" rx="2" ry="2" />
<text  x="1121.97" y="271.5" ></text>
</g>
<g >
<title>blk_mq_complete_request (1 samples, 0.02%)</title><rect x="1108.9" y="213" width="0.2" height="15.0" fill="rgb(241,126,27)" rx="2" ry="2" />
<text  x="1111.86" y="223.5" ></text>
</g>
<g >
<title>amd_pmu_wait_on_overflow (1 samples, 0.02%)</title><rect x="1176.3" y="245" width="0.2" height="15.0" fill="rgb(223,200,48)" rx="2" ry="2" />
<text  x="1179.28" y="255.5" ></text>
</g>
<g >
<title>rcu_core (1 samples, 0.02%)</title><rect x="1176.0" y="341" width="0.3" height="15.0" fill="rgb(221,184,18)" rx="2" ry="2" />
<text  x="1179.04" y="351.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (1 samples, 0.02%)</title><rect x="1170.0" y="277" width="0.3" height="15.0" fill="rgb(226,173,48)" rx="2" ry="2" />
<text  x="1173.02" y="287.5" ></text>
</g>
<g >
<title>cgroup_throttle_swaprate (3 samples, 0.06%)</title><rect x="1159.7" y="325" width="0.7" height="15.0" fill="rgb(228,94,3)" rx="2" ry="2" />
<text  x="1162.66" y="335.5" ></text>
</g>
<g >
<title>native_write_msr (6 samples, 0.12%)</title><rect x="1188.6" y="245" width="1.4" height="15.0" fill="rgb(216,4,1)" rx="2" ry="2" />
<text  x="1191.56" y="255.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (2 samples, 0.04%)</title><rect x="1183.3" y="229" width="0.4" height="15.0" fill="rgb(233,171,33)" rx="2" ry="2" />
<text  x="1186.26" y="239.5" ></text>
</g>
<g >
<title>__common_interrupt (1 samples, 0.02%)</title><rect x="1108.9" y="341" width="0.2" height="15.0" fill="rgb(248,58,21)" rx="2" ry="2" />
<text  x="1111.86" y="351.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (325 samples, 6.63%)</title><rect x="1097.3" y="421" width="78.3" height="15.0" fill="rgb(205,60,47)" rx="2" ry="2" />
<text  x="1100.30" y="431.5" >asm_exc_p..</text>
</g>
<g >
<title>smp_call_function_single_async (1 samples, 0.02%)</title><rect x="1108.9" y="181" width="0.2" height="15.0" fill="rgb(218,55,40)" rx="2" ry="2" />
<text  x="1111.86" y="191.5" ></text>
</g>
<g >
<title>page_add_new_anon_rmap (6 samples, 0.12%)</title><rect x="1169.1" y="325" width="1.4" height="15.0" fill="rgb(232,65,20)" rx="2" ry="2" />
<text  x="1172.05" y="335.5" ></text>
</g>
<g >
<title>uhci_giveback_urb (1 samples, 0.02%)</title><rect x="1096.6" y="261" width="0.2" height="15.0" fill="rgb(224,214,24)" rx="2" ry="2" />
<text  x="1099.58" y="271.5" ></text>
</g>
<g >
<title>native_read_msr (1 samples, 0.02%)</title><rect x="10.0" y="133" width="0.2" height="15.0" fill="rgb(212,203,21)" rx="2" ry="2" />
<text  x="13.00" y="143.5" ></text>
</g>
<g >
<title>tty_flip_buffer_push (13 samples, 0.27%)</title><rect x="10.7" y="261" width="3.2" height="15.0" fill="rgb(210,40,6)" rx="2" ry="2" />
<text  x="13.72" y="271.5" ></text>
</g>
<g >
<title>__const_udelay (1 samples, 0.02%)</title><rect x="1176.3" y="229" width="0.2" height="15.0" fill="rgb(215,28,51)" rx="2" ry="2" />
<text  x="1179.28" y="239.5" ></text>
</g>
<g >
<title>x86_pmu_disable (1 samples, 0.02%)</title><rect x="10.0" y="181" width="0.2" height="15.0" fill="rgb(240,182,4)" rx="2" ry="2" />
<text  x="13.00" y="191.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (16 samples, 0.33%)</title><rect x="10.0" y="421" width="3.9" height="15.0" fill="rgb(248,206,51)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>swake_up_locked.part.0 (1 samples, 0.02%)</title><rect x="1176.0" y="277" width="0.3" height="15.0" fill="rgb(213,93,36)" rx="2" ry="2" />
<text  x="1179.04" y="287.5" ></text>
</g>
<g >
<title>__count_memcg_events (1 samples, 0.02%)</title><rect x="1166.2" y="277" width="0.2" height="15.0" fill="rgb(254,219,52)" rx="2" ry="2" />
<text  x="1169.16" y="287.5" ></text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="1176.0" y="245" width="0.3" height="15.0" fill="rgb(227,122,44)" rx="2" ry="2" />
<text  x="1179.04" y="255.5" ></text>
</g>
<g >
<title>amd_pmu_disable_all (1 samples, 0.02%)</title><rect x="1176.3" y="261" width="0.2" height="15.0" fill="rgb(221,7,11)" rx="2" ry="2" />
<text  x="1179.28" y="271.5" ></text>
</g>
<g >
<title>perf_event_exec (6 samples, 0.12%)</title><rect x="1188.6" y="309" width="1.4" height="15.0" fill="rgb(236,195,51)" rx="2" ry="2" />
<text  x="1191.56" y="319.5" ></text>
</g>
<g >
<title>amd_pmu_wait_on_overflow (1 samples, 0.02%)</title><rect x="1119.0" y="69" width="0.2" height="15.0" fill="rgb(233,225,40)" rx="2" ry="2" />
<text  x="1121.97" y="79.5" ></text>
</g>
<g >
<title>__handle_mm_fault (2 samples, 0.04%)</title><rect x="1181.3" y="373" width="0.5" height="15.0" fill="rgb(215,105,21)" rx="2" ry="2" />
<text  x="1184.33" y="383.5" ></text>
</g>
<g >
<title>pmd_val (1 samples, 0.02%)</title><rect x="1170.7" y="341" width="0.3" height="15.0" fill="rgb(237,21,47)" rx="2" ry="2" />
<text  x="1173.74" y="351.5" ></text>
</g>
<g >
<title>__sched_text_start (1 samples, 0.02%)</title><rect x="1174.4" y="325" width="0.2" height="15.0" fill="rgb(223,176,0)" rx="2" ry="2" />
<text  x="1177.35" y="335.5" ></text>
</g>
<g >
<title>asm_common_interrupt (1 samples, 0.02%)</title><rect x="1108.9" y="373" width="0.2" height="15.0" fill="rgb(254,119,40)" rx="2" ry="2" />
<text  x="1111.86" y="383.5" ></text>
</g>
<g >
<title>usb_hcd_irq (5 samples, 0.10%)</title><rect x="1095.6" y="309" width="1.2" height="15.0" fill="rgb(236,157,53)" rx="2" ry="2" />
<text  x="1098.62" y="319.5" ></text>
</g>
<g >
<title>handle_fasteoi_irq (1 samples, 0.02%)</title><rect x="1108.9" y="325" width="0.2" height="15.0" fill="rgb(246,94,36)" rx="2" ry="2" />
<text  x="1111.86" y="335.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="1108.9" y="309" width="0.2" height="15.0" fill="rgb(242,212,46)" rx="2" ry="2" />
<text  x="1111.86" y="319.5" ></text>
</g>
<g >
<title>__handle_mm_fault (251 samples, 5.12%)</title><rect x="1110.5" y="357" width="60.5" height="15.0" fill="rgb(236,11,53)" rx="2" ry="2" />
<text  x="1113.55" y="367.5" >__hand..</text>
</g>
<g >
<title>unmap_vmas (28 samples, 0.57%)</title><rect x="1181.8" y="341" width="6.8" height="15.0" fill="rgb(222,85,43)" rx="2" ry="2" />
<text  x="1184.81" y="351.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (1 samples, 0.02%)</title><rect x="1174.6" y="357" width="0.2" height="15.0" fill="rgb(213,107,0)" rx="2" ry="2" />
<text  x="1177.59" y="367.5" ></text>
</g>
<g >
<title>preempt_schedule_common (3 samples, 0.06%)</title><rect x="10.0" y="245" width="0.7" height="15.0" fill="rgb(228,174,32)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>do_anonymous_page (2 samples, 0.04%)</title><rect x="1171.0" y="357" width="0.5" height="15.0" fill="rgb(230,148,7)" rx="2" ry="2" />
<text  x="1173.98" y="367.5" ></text>
</g>
<g >
<title>irqentry_exit (9 samples, 0.18%)</title><rect x="1172.7" y="389" width="2.1" height="15.0" fill="rgb(244,149,48)" rx="2" ry="2" />
<text  x="1175.66" y="399.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="1152.4" y="181" width="0.3" height="15.0" fill="rgb(234,10,52)" rx="2" ry="2" />
<text  x="1155.44" y="191.5" ></text>
</g>
<g >
<title>native_write_msr (1 samples, 0.02%)</title><rect x="1176.0" y="165" width="0.3" height="15.0" fill="rgb(206,141,4)" rx="2" ry="2" />
<text  x="1179.04" y="175.5" ></text>
</g>
<g >
<title>tlb_flush_mmu (15 samples, 0.31%)</title><rect x="1184.9" y="277" width="3.7" height="15.0" fill="rgb(205,115,42)" rx="2" ry="2" />
<text  x="1187.94" y="287.5" ></text>
</g>
<g >
<title>ttwu_queue_wakelist (1 samples, 0.02%)</title><rect x="1176.0" y="229" width="0.3" height="15.0" fill="rgb(228,125,48)" rx="2" ry="2" />
<text  x="1179.04" y="239.5" ></text>
</g>
<g >
<title>do_set_pte (2 samples, 0.04%)</title><rect x="1181.3" y="325" width="0.5" height="15.0" fill="rgb(205,173,26)" rx="2" ry="2" />
<text  x="1184.33" y="335.5" ></text>
</g>
<g >
<title>__mod_zone_page_state (1 samples, 0.02%)</title><rect x="1164.5" y="277" width="0.2" height="15.0" fill="rgb(253,153,40)" rx="2" ry="2" />
<text  x="1167.48" y="287.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1119.0" y="245" width="0.2" height="15.0" fill="rgb(217,160,35)" rx="2" ry="2" />
<text  x="1121.97" y="255.5" ></text>
</g>
<g >
<title>[unknown] (6 samples, 0.12%)</title><rect x="1188.6" y="453" width="1.4" height="15.0" fill="rgb(241,77,32)" rx="2" ry="2" />
<text  x="1191.56" y="463.5" ></text>
</g>
<g >
<title>uhci_scan_schedule.part.0 (1 samples, 0.02%)</title><rect x="1152.4" y="117" width="0.3" height="15.0" fill="rgb(241,45,9)" rx="2" ry="2" />
<text  x="1155.44" y="127.5" ></text>
</g>
<g >
<title>__smp_call_single_queue (12 samples, 0.24%)</title><rect x="11.0" y="149" width="2.9" height="15.0" fill="rgb(254,75,37)" rx="2" ry="2" />
<text  x="13.96" y="159.5" ></text>
</g>
<g >
<title>x86_pmu_del (2 samples, 0.04%)</title><rect x="10.2" y="133" width="0.5" height="15.0" fill="rgb(226,18,5)" rx="2" ry="2" />
<text  x="13.24" y="143.5" ></text>
</g>
<g >
<title>get_vma_policy.part.0 (4 samples, 0.08%)</title><rect x="1160.4" y="325" width="0.9" height="15.0" fill="rgb(219,159,1)" rx="2" ry="2" />
<text  x="1163.39" y="335.5" ></text>
</g>
<g >
<title>mem_cgroup_uncharge_list (3 samples, 0.06%)</title><rect x="1187.8" y="229" width="0.8" height="15.0" fill="rgb(231,189,46)" rx="2" ry="2" />
<text  x="1190.83" y="239.5" ></text>
</g>
<g >
<title>page_remove_rmap (7 samples, 0.14%)</title><rect x="1183.3" y="277" width="1.6" height="15.0" fill="rgb(235,5,32)" rx="2" ry="2" />
<text  x="1186.26" y="287.5" ></text>
</g>
<g >
<title>native_read_msr (1 samples, 0.02%)</title><rect x="10.5" y="69" width="0.2" height="15.0" fill="rgb(246,77,23)" rx="2" ry="2" />
<text  x="13.48" y="79.5" ></text>
</g>
<g >
<title>handle_fasteoi_irq (1 samples, 0.02%)</title><rect x="1167.8" y="165" width="0.3" height="15.0" fill="rgb(212,100,28)" rx="2" ry="2" />
<text  x="1170.85" y="175.5" ></text>
</g>
<g >
<title>__GI___libc_write (16 samples, 0.33%)</title><rect x="10.0" y="437" width="3.9" height="15.0" fill="rgb(254,178,17)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>__queue_work (12 samples, 0.24%)</title><rect x="11.0" y="229" width="2.9" height="15.0" fill="rgb(206,89,52)" rx="2" ry="2" />
<text  x="13.96" y="239.5" ></text>
</g>
<g >
<title>irqentry_exit (1 samples, 0.02%)</title><rect x="1175.3" y="405" width="0.3" height="15.0" fill="rgb(223,162,45)" rx="2" ry="2" />
<text  x="1178.31" y="415.5" ></text>
</g>
<g >
<title>error_entry (3 samples, 0.06%)</title><rect x="1178.9" y="421" width="0.7" height="15.0" fill="rgb(229,191,54)" rx="2" ry="2" />
<text  x="1181.92" y="431.5" ></text>
</g>
<g >
<title>ksys_write (16 samples, 0.33%)</title><rect x="10.0" y="373" width="3.9" height="15.0" fill="rgb(222,8,39)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (6 samples, 0.12%)</title><rect x="1177.5" y="293" width="1.4" height="15.0" fill="rgb(250,39,35)" rx="2" ry="2" />
<text  x="1180.48" y="303.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="1119.0" y="197" width="0.2" height="15.0" fill="rgb(252,88,45)" rx="2" ry="2" />
<text  x="1121.97" y="207.5" ></text>
</g>
<g >
<title>uncharge_page (3 samples, 0.06%)</title><rect x="1187.8" y="213" width="0.8" height="15.0" fill="rgb(219,176,0)" rx="2" ry="2" />
<text  x="1190.83" y="223.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (1 samples, 0.02%)</title><rect x="1167.8" y="229" width="0.3" height="15.0" fill="rgb(235,204,29)" rx="2" ry="2" />
<text  x="1170.85" y="239.5" ></text>
</g>
<g >
<title>common_interrupt (11 samples, 0.22%)</title><rect x="1094.7" y="405" width="2.6" height="15.0" fill="rgb(218,207,51)" rx="2" ry="2" />
<text  x="1097.66" y="415.5" ></text>
</g>
<g >
<title>mutex_lock (3 samples, 0.06%)</title><rect x="10.0" y="277" width="0.7" height="15.0" fill="rgb(209,66,6)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>native_write_msr (1 samples, 0.02%)</title><rect x="1108.9" y="101" width="0.2" height="15.0" fill="rgb(217,101,14)" rx="2" ry="2" />
<text  x="1111.86" y="111.5" ></text>
</g>
<g >
<title>common_interrupt (1 samples, 0.02%)</title><rect x="1108.9" y="357" width="0.2" height="15.0" fill="rgb(235,53,52)" rx="2" ry="2" />
<text  x="1111.86" y="367.5" ></text>
</g>
<g >
<title>rcu_report_qs_rnp (1 samples, 0.02%)</title><rect x="1176.0" y="325" width="0.3" height="15.0" fill="rgb(253,228,7)" rx="2" ry="2" />
<text  x="1179.04" y="335.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.02%)</title><rect x="1164.2" y="261" width="0.3" height="15.0" fill="rgb(237,45,1)" rx="2" ry="2" />
<text  x="1167.24" y="271.5" ></text>
</g>
<g >
<title>filemap_map_pages (2 samples, 0.04%)</title><rect x="1181.3" y="341" width="0.5" height="15.0" fill="rgb(211,70,20)" rx="2" ry="2" />
<text  x="1184.33" y="351.5" ></text>
</g>
<g >
<title>native_apic_msr_read (2 samples, 0.04%)</title><rect x="1096.8" y="341" width="0.5" height="15.0" fill="rgb(251,98,49)" rx="2" ry="2" />
<text  x="1099.82" y="351.5" ></text>
</g>
<g >
<title>native_read_msr (2 samples, 0.04%)</title><rect x="1096.8" y="325" width="0.5" height="15.0" fill="rgb(252,106,51)" rx="2" ry="2" />
<text  x="1099.82" y="335.5" ></text>
</g>
<g >
<title>amd_pmu_disable_all (1 samples, 0.02%)</title><rect x="10.0" y="165" width="0.2" height="15.0" fill="rgb(219,222,26)" rx="2" ry="2" />
<text  x="13.00" y="175.5" ></text>
</g>
<g >
<title>ttwu_queue_wakelist (12 samples, 0.24%)</title><rect x="11.0" y="165" width="2.9" height="15.0" fill="rgb(222,195,27)" rx="2" ry="2" />
<text  x="13.96" y="175.5" ></text>
</g>
<g >
<title>native_send_call_func_single_ipi (1 samples, 0.02%)</title><rect x="1108.9" y="117" width="0.2" height="15.0" fill="rgb(205,3,22)" rx="2" ry="2" />
<text  x="1111.86" y="127.5" ></text>
</g>
<g >
<title>free_pcppages_bulk (6 samples, 0.12%)</title><rect x="1186.4" y="197" width="1.4" height="15.0" fill="rgb(230,10,54)" rx="2" ry="2" />
<text  x="1189.39" y="207.5" ></text>
</g>
<g >
<title>bprm_execve (6 samples, 0.12%)</title><rect x="1188.6" y="373" width="1.4" height="15.0" fill="rgb(242,43,22)" rx="2" ry="2" />
<text  x="1191.56" y="383.5" ></text>
</g>
<g >
<title>handle_mm_fault (258 samples, 5.26%)</title><rect x="1109.3" y="373" width="62.2" height="15.0" fill="rgb(233,72,41)" rx="2" ry="2" />
<text  x="1112.34" y="383.5" >handle..</text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="1167.8" y="149" width="0.3" height="15.0" fill="rgb(212,125,14)" rx="2" ry="2" />
<text  x="1170.85" y="159.5" ></text>
</g>
<g >
<title>pmd_none_or_trans_huge_or_clear_bad (1 samples, 0.02%)</title><rect x="1170.5" y="341" width="0.2" height="15.0" fill="rgb(213,119,16)" rx="2" ry="2" />
<text  x="1173.50" y="351.5" ></text>
</g>
<g >
<title>uhci_irq (1 samples, 0.02%)</title><rect x="1152.4" y="133" width="0.3" height="15.0" fill="rgb(220,30,18)" rx="2" ry="2" />
<text  x="1155.44" y="143.5" ></text>
</g>
<g >
<title>delay_tsc (1 samples, 0.02%)</title><rect x="1119.0" y="37" width="0.2" height="15.0" fill="rgb(225,136,29)" rx="2" ry="2" />
<text  x="1121.97" y="47.5" ></text>
</g>
<g >
<title>up_read (2 samples, 0.04%)</title><rect x="1174.8" y="389" width="0.5" height="15.0" fill="rgb(252,152,37)" rx="2" ry="2" />
<text  x="1177.83" y="399.5" ></text>
</g>
<g >
<title>__x64_sys_exit_group (28 samples, 0.57%)</title><rect x="1181.8" y="421" width="6.8" height="15.0" fill="rgb(233,29,47)" rx="2" ry="2" />
<text  x="1184.81" y="431.5" ></text>
</g>
<g >
<title>snd_ensoniq_playback1_pointer (1 samples, 0.02%)</title><rect x="1095.4" y="261" width="0.2" height="15.0" fill="rgb(216,32,7)" rx="2" ry="2" />
<text  x="1098.38" y="271.5" ></text>
</g>
<g >
<title>task_ctx_sched_out (2 samples, 0.04%)</title><rect x="10.2" y="197" width="0.5" height="15.0" fill="rgb(223,145,52)" rx="2" ry="2" />
<text  x="13.24" y="207.5" ></text>
</g>
<g >
<title>__sched_text_start (3 samples, 0.06%)</title><rect x="10.0" y="229" width="0.7" height="15.0" fill="rgb(244,1,28)" rx="2" ry="2" />
<text  x="13.00" y="239.5" ></text>
</g>
<g >
<title>amd_pmu_wait_on_overflow (1 samples, 0.02%)</title><rect x="1174.4" y="245" width="0.2" height="15.0" fill="rgb(232,49,21)" rx="2" ry="2" />
<text  x="1177.35" y="255.5" ></text>
</g>
<g >
<title>irq_exit_rcu (1 samples, 0.02%)</title><rect x="1167.8" y="245" width="0.3" height="15.0" fill="rgb(250,49,17)" rx="2" ry="2" />
<text  x="1170.85" y="255.5" ></text>
</g>
<g >
<title>sysvec_call_function_single (11 samples, 0.22%)</title><rect x="1176.3" y="405" width="2.6" height="15.0" fill="rgb(246,104,10)" rx="2" ry="2" />
<text  x="1179.28" y="415.5" ></text>
</g>
<g >
<title>amd_pmu_disable_event (4 samples, 0.08%)</title><rect x="1176.5" y="197" width="1.0" height="15.0" fill="rgb(228,204,44)" rx="2" ry="2" />
<text  x="1179.52" y="207.5" ></text>
</g>
<g >
<title>try_charge (7 samples, 0.14%)</title><rect x="1166.6" y="293" width="1.7" height="15.0" fill="rgb(246,4,31)" rx="2" ry="2" />
<text  x="1169.65" y="303.5" ></text>
</g>
<g >
<title>prep_new_page (5 samples, 0.10%)</title><rect x="1152.7" y="277" width="1.2" height="15.0" fill="rgb(213,125,45)" rx="2" ry="2" />
<text  x="1155.68" y="287.5" ></text>
</g>
<g >
<title>zap_pte_range.isra.0 (28 samples, 0.57%)</title><rect x="1181.8" y="293" width="6.8" height="15.0" fill="rgb(228,63,14)" rx="2" ry="2" />
<text  x="1184.81" y="303.5" ></text>
</g>
<g >
<title>__unlock_page_memcg (2 samples, 0.04%)</title><rect x="1181.3" y="293" width="0.5" height="15.0" fill="rgb(226,202,49)" rx="2" ry="2" />
<text  x="1184.33" y="303.5" ></text>
</g>
<g >
<title>asm_common_interrupt (1 samples, 0.02%)</title><rect x="1167.8" y="213" width="0.3" height="15.0" fill="rgb(220,194,38)" rx="2" ry="2" />
<text  x="1170.85" y="223.5" ></text>
</g>
<g >
<title>send_call_function_single_ipi (1 samples, 0.02%)</title><rect x="1108.9" y="133" width="0.2" height="15.0" fill="rgb(240,127,6)" rx="2" ry="2" />
<text  x="1111.86" y="143.5" ></text>
</g>
<g >
<title>uhci_irq (5 samples, 0.10%)</title><rect x="1095.6" y="293" width="1.2" height="15.0" fill="rgb(219,140,10)" rx="2" ry="2" />
<text  x="1098.62" y="303.5" ></text>
</g>
<g >
<title>snd_pcm_update_hw_ptr0 (1 samples, 0.02%)</title><rect x="1095.4" y="277" width="0.2" height="15.0" fill="rgb(254,14,44)" rx="2" ry="2" />
<text  x="1098.38" y="287.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (3 samples, 0.06%)</title><rect x="1175.6" y="421" width="0.7" height="15.0" fill="rgb(231,55,33)" rx="2" ry="2" />
<text  x="1178.55" y="431.5" ></text>
</g>
<g >
<title>uhci_get_current_frame_number.part.0 (1 samples, 0.02%)</title><rect x="1152.4" y="69" width="0.3" height="15.0" fill="rgb(236,120,19)" rx="2" ry="2" />
<text  x="1155.44" y="79.5" ></text>
</g>
<g >
<title>file_tty_write.isra.0 (16 samples, 0.33%)</title><rect x="10.0" y="309" width="3.9" height="15.0" fill="rgb(219,3,37)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (6 samples, 0.12%)</title><rect x="1188.6" y="421" width="1.4" height="15.0" fill="rgb(232,18,26)" rx="2" ry="2" />
<text  x="1191.56" y="431.5" ></text>
</g>
<g >
<title>_init (2 samples, 0.04%)</title><rect x="1181.3" y="453" width="0.5" height="15.0" fill="rgb(240,171,30)" rx="2" ry="2" />
<text  x="1184.33" y="463.5" ></text>
</g>
<g >
<title>__x64_sys_execve (6 samples, 0.12%)</title><rect x="1188.6" y="405" width="1.4" height="15.0" fill="rgb(215,97,31)" rx="2" ry="2" />
<text  x="1191.56" y="415.5" ></text>
</g>
<g >
<title>prep_new_page (2 samples, 0.04%)</title><rect x="1157.7" y="293" width="0.5" height="15.0" fill="rgb(209,138,10)" rx="2" ry="2" />
<text  x="1160.74" y="303.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_out (5 samples, 0.10%)</title><rect x="1176.3" y="309" width="1.2" height="15.0" fill="rgb(216,55,12)" rx="2" ry="2" />
<text  x="1179.28" y="319.5" ></text>
</g>
<g >
<title>perf_event_task_tick (1 samples, 0.02%)</title><rect x="1119.0" y="133" width="0.2" height="15.0" fill="rgb(244,7,29)" rx="2" ry="2" />
<text  x="1121.97" y="143.5" ></text>
</g>
<g >
<title>page_mapping (3 samples, 0.06%)</title><rect x="1165.2" y="277" width="0.7" height="15.0" fill="rgb(232,92,37)" rx="2" ry="2" />
<text  x="1168.20" y="287.5" ></text>
</g>
<g >
<title>n_tty_write (16 samples, 0.33%)</title><rect x="10.0" y="293" width="3.9" height="15.0" fill="rgb(241,119,46)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>lru_cache_add (18 samples, 0.37%)</title><rect x="1161.6" y="309" width="4.3" height="15.0" fill="rgb(229,52,44)" rx="2" ry="2" />
<text  x="1164.59" y="319.5" ></text>
</g>
<g >
<title>native_send_call_func_single_ipi (3 samples, 0.06%)</title><rect x="11.0" y="133" width="0.7" height="15.0" fill="rgb(246,226,22)" rx="2" ry="2" />
<text  x="13.96" y="143.5" ></text>
</g>
<g >
<title>__common_interrupt (2 samples, 0.04%)</title><rect x="1175.6" y="325" width="0.4" height="15.0" fill="rgb(217,208,10)" rx="2" ry="2" />
<text  x="1178.55" y="335.5" ></text>
</g>
<g >
<title>do_group_exit (28 samples, 0.57%)</title><rect x="1181.8" y="405" width="6.8" height="15.0" fill="rgb(206,40,15)" rx="2" ry="2" />
<text  x="1184.81" y="415.5" ></text>
</g>
<g >
<title>__cond_resched (1 samples, 0.02%)</title><rect x="1158.2" y="309" width="0.3" height="15.0" fill="rgb(232,36,36)" rx="2" ry="2" />
<text  x="1161.22" y="319.5" ></text>
</g>
<g >
<title>x86_pmu_disable (1 samples, 0.02%)</title><rect x="1119.0" y="101" width="0.2" height="15.0" fill="rgb(224,46,6)" rx="2" ry="2" />
<text  x="1121.97" y="111.5" ></text>
</g>
<g >
<title>native_apic_msr_read (2 samples, 0.04%)</title><rect x="1175.6" y="277" width="0.4" height="15.0" fill="rgb(234,168,9)" rx="2" ry="2" />
<text  x="1178.55" y="287.5" ></text>
</g>
<g >
<title>asm_common_interrupt (1 samples, 0.02%)</title><rect x="1152.4" y="261" width="0.3" height="15.0" fill="rgb(208,64,11)" rx="2" ry="2" />
<text  x="1155.44" y="271.5" ></text>
</g>
<g >
<title>__softirqentry_text_start (3 samples, 0.06%)</title><rect x="1175.6" y="373" width="0.7" height="15.0" fill="rgb(230,41,12)" rx="2" ry="2" />
<text  x="1178.55" y="383.5" ></text>
</g>
<g >
<title>pty_write (13 samples, 0.27%)</title><rect x="10.7" y="277" width="3.2" height="15.0" fill="rgb(223,112,8)" rx="2" ry="2" />
<text  x="13.72" y="287.5" ></text>
</g>
<g >
<title>handle_fasteoi_irq (2 samples, 0.04%)</title><rect x="1175.6" y="309" width="0.4" height="15.0" fill="rgb(218,50,32)" rx="2" ry="2" />
<text  x="1178.55" y="319.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1167.8" y="277" width="0.3" height="15.0" fill="rgb(211,94,27)" rx="2" ry="2" />
<text  x="1170.85" y="287.5" ></text>
</g>
<g >
<title>handle_irq_event (9 samples, 0.18%)</title><rect x="1094.7" y="357" width="2.1" height="15.0" fill="rgb(228,7,33)" rx="2" ry="2" />
<text  x="1097.66" y="367.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="1119.0" y="149" width="0.2" height="15.0" fill="rgb(254,28,53)" rx="2" ry="2" />
<text  x="1121.97" y="159.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (8 samples, 0.16%)</title><rect x="1172.7" y="357" width="1.9" height="15.0" fill="rgb(234,57,19)" rx="2" ry="2" />
<text  x="1175.66" y="367.5" ></text>
</g>
<g >
<title>alloc_pages_vma (173 samples, 3.53%)</title><rect x="1118.0" y="325" width="41.7" height="15.0" fill="rgb(233,58,47)" rx="2" ry="2" />
<text  x="1121.01" y="335.5" >all..</text>
</g>
<g >
<title>mpt_interrupt (2 samples, 0.04%)</title><rect x="1094.7" y="309" width="0.4" height="15.0" fill="rgb(219,35,3)" rx="2" ry="2" />
<text  x="1097.66" y="319.5" ></text>
</g>
<g >
<title>sync_regs (7 samples, 0.14%)</title><rect x="1179.6" y="421" width="1.7" height="15.0" fill="rgb(234,37,32)" rx="2" ry="2" />
<text  x="1182.65" y="431.5" ></text>
</g>
<g >
<title>__smp_call_single_queue (1 samples, 0.02%)</title><rect x="1176.0" y="213" width="0.3" height="15.0" fill="rgb(211,200,28)" rx="2" ry="2" />
<text  x="1179.04" y="223.5" ></text>
</g>
<g >
<title>handle_mm_fault (4 samples, 0.08%)</title><rect x="1171.7" y="389" width="1.0" height="15.0" fill="rgb(234,198,50)" rx="2" ry="2" />
<text  x="1174.70" y="399.5" ></text>
</g>
<g >
<title>delay_tsc (1 samples, 0.02%)</title><rect x="10.2" y="53" width="0.3" height="15.0" fill="rgb(235,73,29)" rx="2" ry="2" />
<text  x="13.24" y="63.5" ></text>
</g>
<g >
<title>ex1 (4,895 samples, 99.88%)</title><rect x="10.0" y="469" width="1178.6" height="15.0" fill="rgb(231,85,9)" rx="2" ry="2" />
<text  x="13.00" y="479.5" >ex1</text>
</g>
<g >
<title>__mod_lruvec_page_state (4 samples, 0.08%)</title><rect x="1169.3" y="309" width="1.0" height="15.0" fill="rgb(233,1,21)" rx="2" ry="2" />
<text  x="1172.29" y="319.5" ></text>
</g>
<g >
<title>lock_page_memcg (1 samples, 0.02%)</title><rect x="1184.7" y="261" width="0.2" height="15.0" fill="rgb(222,189,4)" rx="2" ry="2" />
<text  x="1187.70" y="271.5" ></text>
</g>
<g >
<title>do_user_addr_fault (2 samples, 0.04%)</title><rect x="1181.3" y="405" width="0.5" height="15.0" fill="rgb(235,209,32)" rx="2" ry="2" />
<text  x="1184.33" y="415.5" ></text>
</g>
<g >
<title>send_call_function_single_ipi (9 samples, 0.18%)</title><rect x="11.7" y="133" width="2.2" height="15.0" fill="rgb(212,52,8)" rx="2" ry="2" />
<text  x="14.69" y="143.5" ></text>
</g>
<g >
<title>do_fault (2 samples, 0.04%)</title><rect x="1181.3" y="357" width="0.5" height="15.0" fill="rgb(221,25,44)" rx="2" ry="2" />
<text  x="1184.33" y="367.5" ></text>
</g>
<g >
<title>lock_page_lruvec_irqsave (2 samples, 0.04%)</title><rect x="1164.7" y="277" width="0.5" height="15.0" fill="rgb(247,134,41)" rx="2" ry="2" />
<text  x="1167.72" y="287.5" ></text>
</g>
<g >
<title>unmap_page_range (28 samples, 0.57%)</title><rect x="1181.8" y="309" width="6.8" height="15.0" fill="rgb(242,5,29)" rx="2" ry="2" />
<text  x="1184.81" y="319.5" ></text>
</g>
<g >
<title>down_read_trylock (1 samples, 0.02%)</title><rect x="1109.1" y="373" width="0.2" height="15.0" fill="rgb(245,66,37)" rx="2" ry="2" />
<text  x="1112.10" y="383.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (9 samples, 0.18%)</title><rect x="1166.2" y="309" width="2.1" height="15.0" fill="rgb(254,222,45)" rx="2" ry="2" />
<text  x="1169.16" y="319.5" ></text>
</g>
<g >
<title>exc_page_fault (282 samples, 5.75%)</title><rect x="1107.4" y="405" width="67.9" height="15.0" fill="rgb(228,54,2)" rx="2" ry="2" />
<text  x="1110.42" y="415.5" >exc_pag..</text>
</g>
<g >
<title>perf_pmu_disable.part.0 (1 samples, 0.02%)</title><rect x="10.0" y="197" width="0.2" height="15.0" fill="rgb(214,203,4)" rx="2" ry="2" />
<text  x="13.00" y="207.5" ></text>
</g>
<g >
<title>__sched_text_start (11 samples, 0.22%)</title><rect x="1176.3" y="325" width="2.6" height="15.0" fill="rgb(206,111,30)" rx="2" ry="2" />
<text  x="1179.28" y="335.5" ></text>
</g>
<g >
<title>ctx_sched_out (4 samples, 0.08%)</title><rect x="1176.5" y="277" width="1.0" height="15.0" fill="rgb(223,36,41)" rx="2" ry="2" />
<text  x="1179.52" y="287.5" ></text>
</g>
<g >
<title>__mod_zone_page_state (1 samples, 0.02%)</title><rect x="1161.8" y="293" width="0.3" height="15.0" fill="rgb(254,80,43)" rx="2" ry="2" />
<text  x="1164.83" y="303.5" ></text>
</g>
<g >
<title>__get_vma_policy (1 samples, 0.02%)</title><rect x="1117.3" y="325" width="0.2" height="15.0" fill="rgb(214,50,25)" rx="2" ry="2" />
<text  x="1120.29" y="335.5" ></text>
</g>
<g >
<title>get_page_from_freelist (160 samples, 3.26%)</title><rect x="1119.2" y="293" width="38.5" height="15.0" fill="rgb(252,120,18)" rx="2" ry="2" />
<text  x="1122.21" y="303.5" >get..</text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="1119.0" y="229" width="0.2" height="15.0" fill="rgb(217,53,5)" rx="2" ry="2" />
<text  x="1121.97" y="239.5" ></text>
</g>
<g >
<title>__inc_numa_state (1 samples, 0.02%)</title><rect x="1155.1" y="261" width="0.2" height="15.0" fill="rgb(206,75,8)" rx="2" ry="2" />
<text  x="1158.09" y="271.5" ></text>
</g>
<g >
<title>insert_work (12 samples, 0.24%)</title><rect x="11.0" y="213" width="2.9" height="15.0" fill="rgb(233,23,48)" rx="2" ry="2" />
<text  x="13.96" y="223.5" ></text>
</g>
<g >
<title>wake_up_process (12 samples, 0.24%)</title><rect x="11.0" y="197" width="2.9" height="15.0" fill="rgb(234,39,3)" rx="2" ry="2" />
<text  x="13.96" y="207.5" ></text>
</g>
<g >
<title>propagate_protected_usage (1 samples, 0.02%)</title><rect x="1168.1" y="277" width="0.2" height="15.0" fill="rgb(242,2,36)" rx="2" ry="2" />
<text  x="1171.09" y="287.5" ></text>
</g>
<g >
<title>finish_task_switch (6 samples, 0.12%)</title><rect x="1177.5" y="309" width="1.4" height="15.0" fill="rgb(236,74,34)" rx="2" ry="2" />
<text  x="1180.48" y="319.5" ></text>
</g>
<g >
<title>event_sched_out.isra.0 (4 samples, 0.08%)</title><rect x="1176.5" y="245" width="1.0" height="15.0" fill="rgb(238,100,25)" rx="2" ry="2" />
<text  x="1179.52" y="255.5" ></text>
</g>
<g >
<title>amd_pmu_disable_all (1 samples, 0.02%)</title><rect x="1174.4" y="261" width="0.2" height="15.0" fill="rgb(207,186,39)" rx="2" ry="2" />
<text  x="1177.35" y="271.5" ></text>
</g>
<g >
<title>amd_pmu_disable_event (2 samples, 0.04%)</title><rect x="10.2" y="101" width="0.5" height="15.0" fill="rgb(247,59,49)" rx="2" ry="2" />
<text  x="13.24" y="111.5" ></text>
</g>
<g >
<title>__cond_resched (2 samples, 0.04%)</title><rect x="1118.7" y="293" width="0.5" height="15.0" fill="rgb(244,215,32)" rx="2" ry="2" />
<text  x="1121.73" y="303.5" ></text>
</g>
<g >
<title>generic_exec_single (1 samples, 0.02%)</title><rect x="1108.9" y="165" width="0.2" height="15.0" fill="rgb(207,22,3)" rx="2" ry="2" />
<text  x="1111.86" y="175.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="1119.0" y="213" width="0.2" height="15.0" fill="rgb(218,22,26)" rx="2" ry="2" />
<text  x="1121.97" y="223.5" ></text>
</g>
<g >
<title>get_task_policy.part.0 (3 samples, 0.06%)</title><rect x="1158.7" y="293" width="0.7" height="15.0" fill="rgb(217,148,18)" rx="2" ry="2" />
<text  x="1161.70" y="303.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (6 samples, 0.12%)</title><rect x="1188.6" y="389" width="1.4" height="15.0" fill="rgb(232,209,20)" rx="2" ry="2" />
<text  x="1191.56" y="399.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (1 samples, 0.02%)</title><rect x="1166.2" y="261" width="0.2" height="15.0" fill="rgb(232,82,43)" rx="2" ry="2" />
<text  x="1169.16" y="271.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="1108.9" y="277" width="0.2" height="15.0" fill="rgb(237,108,2)" rx="2" ry="2" />
<text  x="1111.86" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (6 samples, 0.12%)</title><rect x="1188.6" y="437" width="1.4" height="15.0" fill="rgb(241,131,15)" rx="2" ry="2" />
<text  x="1191.56" y="447.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (3 samples, 0.06%)</title><rect x="1163.5" y="261" width="0.7" height="15.0" fill="rgb(244,188,16)" rx="2" ry="2" />
<text  x="1166.52" y="271.5" ></text>
</g>
<g >
<title>x86_pmu_disable (1 samples, 0.02%)</title><rect x="1174.4" y="277" width="0.2" height="15.0" fill="rgb(208,134,24)" rx="2" ry="2" />
<text  x="1177.35" y="287.5" ></text>
</g>
<g >
<title>x86_pmu_stop (2 samples, 0.04%)</title><rect x="10.2" y="117" width="0.5" height="15.0" fill="rgb(249,20,24)" rx="2" ry="2" />
<text  x="13.24" y="127.5" ></text>
</g>
<g >
<title>asm_common_interrupt (11 samples, 0.22%)</title><rect x="1094.7" y="421" width="2.6" height="15.0" fill="rgb(226,28,24)" rx="2" ry="2" />
<text  x="1097.66" y="431.5" ></text>
</g>
<g >
<title>amd_pmu_disable_all (1 samples, 0.02%)</title><rect x="1119.0" y="85" width="0.2" height="15.0" fill="rgb(253,59,29)" rx="2" ry="2" />
<text  x="1121.97" y="95.5" ></text>
</g>
<g >
<title>release_pages (14 samples, 0.29%)</title><rect x="1185.2" y="245" width="3.4" height="15.0" fill="rgb(248,22,37)" rx="2" ry="2" />
<text  x="1188.18" y="255.5" ></text>
</g>
<g >
<title>native_send_call_func_single_ipi (9 samples, 0.18%)</title><rect x="11.7" y="117" width="2.2" height="15.0" fill="rgb(222,174,19)" rx="2" ry="2" />
<text  x="14.69" y="127.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="1152.4" y="165" width="0.3" height="15.0" fill="rgb(253,180,28)" rx="2" ry="2" />
<text  x="1155.44" y="175.5" ></text>
</g>
<g >
<title>__alloc_pages (166 samples, 3.39%)</title><rect x="1118.3" y="309" width="39.9" height="15.0" fill="rgb(240,105,40)" rx="2" ry="2" />
<text  x="1121.25" y="319.5" >__a..</text>
</g>
<g >
<title>__cond_resched (3 samples, 0.06%)</title><rect x="10.0" y="261" width="0.7" height="15.0" fill="rgb(226,145,23)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>unmap_single_vma (28 samples, 0.57%)</title><rect x="1181.8" y="325" width="6.8" height="15.0" fill="rgb(245,70,24)" rx="2" ry="2" />
<text  x="1184.81" y="335.5" ></text>
</g>
<g >
<title>x86_pmu_enable (6 samples, 0.12%)</title><rect x="1188.6" y="261" width="1.4" height="15.0" fill="rgb(217,59,2)" rx="2" ry="2" />
<text  x="1191.56" y="271.5" ></text>
</g>
<g >
<title>uhci_giveback_urb (1 samples, 0.02%)</title><rect x="1152.4" y="101" width="0.3" height="15.0" fill="rgb(245,100,35)" rx="2" ry="2" />
<text  x="1155.44" y="111.5" ></text>
</g>
<g >
<title>__common_interrupt (11 samples, 0.22%)</title><rect x="1094.7" y="389" width="2.6" height="15.0" fill="rgb(226,140,30)" rx="2" ry="2" />
<text  x="1097.66" y="399.5" ></text>
</g>
<g >
<title>task_ctx_sched_out (4 samples, 0.08%)</title><rect x="1176.5" y="293" width="1.0" height="15.0" fill="rgb(248,170,54)" rx="2" ry="2" />
<text  x="1179.52" y="303.5" ></text>
</g>
<g >
<title>common_interrupt (2 samples, 0.04%)</title><rect x="1175.6" y="341" width="0.4" height="15.0" fill="rgb(218,32,21)" rx="2" ry="2" />
<text  x="1178.55" y="351.5" ></text>
</g>
<g >
<title>native_write_msr (6 samples, 0.12%)</title><rect x="1177.5" y="245" width="1.4" height="15.0" fill="rgb(250,152,21)" rx="2" ry="2" />
<text  x="1180.48" y="255.5" ></text>
</g>
<g >
<title>mpt_interrupt (1 samples, 0.02%)</title><rect x="1108.9" y="261" width="0.2" height="15.0" fill="rgb(234,93,28)" rx="2" ry="2" />
<text  x="1111.86" y="271.5" ></text>
</g>
<g >
<title>mem_cgroup_charge_statistics.isra.0 (1 samples, 0.02%)</title><rect x="1166.2" y="293" width="0.2" height="15.0" fill="rgb(232,143,52)" rx="2" ry="2" />
<text  x="1169.16" y="303.5" ></text>
</g>
<g >
<title>x86_pmu_enable (6 samples, 0.12%)</title><rect x="1177.5" y="261" width="1.4" height="15.0" fill="rgb(229,78,3)" rx="2" ry="2" />
<text  x="1180.48" y="271.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (9 samples, 0.18%)</title><rect x="1094.7" y="341" width="2.1" height="15.0" fill="rgb(230,9,38)" rx="2" ry="2" />
<text  x="1097.66" y="351.5" ></text>
</g>
<g >
<title>__page_set_anon_rmap (2 samples, 0.04%)</title><rect x="1117.5" y="325" width="0.5" height="15.0" fill="rgb(209,80,43)" rx="2" ry="2" />
<text  x="1120.53" y="335.5" ></text>
</g>
<g >
<title>irq_exit_rcu (3 samples, 0.06%)</title><rect x="1175.6" y="389" width="0.7" height="15.0" fill="rgb(212,164,52)" rx="2" ry="2" />
<text  x="1178.55" y="399.5" ></text>
</g>
<g >
<title>x86_pmu_disable (1 samples, 0.02%)</title><rect x="1176.3" y="277" width="0.2" height="15.0" fill="rgb(208,50,17)" rx="2" ry="2" />
<text  x="1179.28" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (28 samples, 0.57%)</title><rect x="1181.8" y="453" width="6.8" height="15.0" fill="rgb(217,42,44)" rx="2" ry="2" />
<text  x="1184.81" y="463.5" ></text>
</g>
<g >
<title>common_interrupt (1 samples, 0.02%)</title><rect x="1167.8" y="197" width="0.3" height="15.0" fill="rgb(226,48,31)" rx="2" ry="2" />
<text  x="1170.85" y="207.5" ></text>
</g>
<g >
<title>page_counter_try_charge (1 samples, 0.02%)</title><rect x="1166.4" y="293" width="0.2" height="15.0" fill="rgb(214,104,45)" rx="2" ry="2" />
<text  x="1169.40" y="303.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="1119.0" y="165" width="0.2" height="15.0" fill="rgb(224,183,22)" rx="2" ry="2" />
<text  x="1121.97" y="175.5" ></text>
</g>
<g >
<title>ctx_resched (6 samples, 0.12%)</title><rect x="1188.6" y="293" width="1.4" height="15.0" fill="rgb(236,36,23)" rx="2" ry="2" />
<text  x="1191.56" y="303.5" ></text>
</g>
<g >
<title>kthread_blkcg (1 samples, 0.02%)</title><rect x="1160.1" y="309" width="0.3" height="15.0" fill="rgb(250,96,15)" rx="2" ry="2" />
<text  x="1163.14" y="319.5" ></text>
</g>
<g >
<title>perf_pmu_disable.part.0 (1 samples, 0.02%)</title><rect x="1176.3" y="293" width="0.2" height="15.0" fill="rgb(252,201,9)" rx="2" ry="2" />
<text  x="1179.28" y="303.5" ></text>
</g>
<g >
<title>uhci_unlink_qh (1 samples, 0.02%)</title><rect x="1152.4" y="85" width="0.3" height="15.0" fill="rgb(220,24,35)" rx="2" ry="2" />
<text  x="1155.44" y="95.5" ></text>
</g>
<g >
<title>new_sync_write (16 samples, 0.33%)</title><rect x="10.0" y="341" width="3.9" height="15.0" fill="rgb(225,3,20)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>__page_set_anon_rmap (1 samples, 0.02%)</title><rect x="1170.3" y="309" width="0.2" height="15.0" fill="rgb(234,125,26)" rx="2" ry="2" />
<text  x="1173.26" y="319.5" ></text>
</g>
<g >
<title>__mod_node_page_state (1 samples, 0.02%)</title><rect x="1184.5" y="245" width="0.2" height="15.0" fill="rgb(223,56,47)" rx="2" ry="2" />
<text  x="1187.46" y="255.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (15 samples, 0.31%)</title><rect x="1184.9" y="261" width="3.7" height="15.0" fill="rgb(240,155,13)" rx="2" ry="2" />
<text  x="1187.94" y="271.5" ></text>
</g>
<g >
<title>all (4,901 samples, 100%)</title><rect x="10.0" y="485" width="1180.0" height="15.0" fill="rgb(229,154,25)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (3 samples, 0.06%)</title><rect x="1175.6" y="405" width="0.7" height="15.0" fill="rgb(251,99,17)" rx="2" ry="2" />
<text  x="1178.55" y="415.5" ></text>
</g>
<g >
<title>load_elf_binary (6 samples, 0.12%)</title><rect x="1188.6" y="341" width="1.4" height="15.0" fill="rgb(242,208,21)" rx="2" ry="2" />
<text  x="1191.56" y="351.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (2 samples, 0.04%)</title><rect x="1168.3" y="309" width="0.5" height="15.0" fill="rgb(205,192,19)" rx="2" ry="2" />
<text  x="1171.33" y="319.5" ></text>
</g>
<g >
<title>__smp_call_single_queue (1 samples, 0.02%)</title><rect x="1108.9" y="149" width="0.2" height="15.0" fill="rgb(244,119,49)" rx="2" ry="2" />
<text  x="1111.86" y="159.5" ></text>
</g>
<g >
<title>__mod_memcg_state (1 samples, 0.02%)</title><rect x="1170.0" y="261" width="0.3" height="15.0" fill="rgb(219,57,0)" rx="2" ry="2" />
<text  x="1173.02" y="271.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (2 samples, 0.04%)</title><rect x="1181.3" y="437" width="0.5" height="15.0" fill="rgb(217,145,31)" rx="2" ry="2" />
<text  x="1184.33" y="447.5" ></text>
</g>
<g >
<title>do_anonymous_page (226 samples, 4.61%)</title><rect x="1116.1" y="341" width="54.4" height="15.0" fill="rgb(247,91,18)" rx="2" ry="2" />
<text  x="1119.08" y="351.5" >do_an..</text>
</g>
<g >
<title>irqentry_exit_to_user_mode (9 samples, 0.18%)</title><rect x="1172.7" y="373" width="2.1" height="15.0" fill="rgb(229,181,28)" rx="2" ry="2" />
<text  x="1175.66" y="383.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (1 samples, 0.02%)</title><rect x="1170.0" y="293" width="0.3" height="15.0" fill="rgb(234,79,14)" rx="2" ry="2" />
<text  x="1173.02" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (16 samples, 0.33%)</title><rect x="10.0" y="405" width="3.9" height="15.0" fill="rgb(207,63,33)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="1167.8" y="133" width="0.3" height="15.0" fill="rgb(251,210,19)" rx="2" ry="2" />
<text  x="1170.85" y="143.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (11 samples, 0.22%)</title><rect x="1176.3" y="373" width="2.6" height="15.0" fill="rgb(250,151,14)" rx="2" ry="2" />
<text  x="1179.28" y="383.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (6 samples, 0.12%)</title><rect x="1183.3" y="261" width="1.4" height="15.0" fill="rgb(213,111,51)" rx="2" ry="2" />
<text  x="1186.26" y="271.5" ></text>
</g>
<g >
<title>exec_binprm (6 samples, 0.12%)</title><rect x="1188.6" y="357" width="1.4" height="15.0" fill="rgb(226,120,36)" rx="2" ry="2" />
<text  x="1191.56" y="367.5" ></text>
</g>
<g >
<title>uhci_unlink_qh (1 samples, 0.02%)</title><rect x="1096.6" y="245" width="0.2" height="15.0" fill="rgb(238,104,39)" rx="2" ry="2" />
<text  x="1099.58" y="255.5" ></text>
</g>
<g >
<title>try_to_wake_up (12 samples, 0.24%)</title><rect x="11.0" y="181" width="2.9" height="15.0" fill="rgb(224,149,34)" rx="2" ry="2" />
<text  x="13.96" y="191.5" ></text>
</g>
<g >
<title>_raw_spin_lock (7 samples, 0.14%)</title><rect x="1113.9" y="341" width="1.7" height="15.0" fill="rgb(235,37,51)" rx="2" ry="2" />
<text  x="1116.92" y="351.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.02%)</title><rect x="1168.8" y="309" width="0.3" height="15.0" fill="rgb(246,68,24)" rx="2" ry="2" />
<text  x="1171.81" y="319.5" ></text>
</g>
<g >
<title>free_unref_page_commit (6 samples, 0.12%)</title><rect x="1186.4" y="213" width="1.4" height="15.0" fill="rgb(245,76,31)" rx="2" ry="2" />
<text  x="1189.39" y="223.5" ></text>
</g>
<g >
<title>__mod_node_page_state (3 samples, 0.06%)</title><rect x="1183.7" y="229" width="0.8" height="15.0" fill="rgb(212,35,45)" rx="2" ry="2" />
<text  x="1186.74" y="239.5" ></text>
</g>
<g >
<title>handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="1108.9" y="293" width="0.2" height="15.0" fill="rgb(237,76,18)" rx="2" ry="2" />
<text  x="1111.86" y="303.5" ></text>
</g>
<g >
<title>x86_pmu_stop (4 samples, 0.08%)</title><rect x="1176.5" y="213" width="1.0" height="15.0" fill="rgb(246,112,2)" rx="2" ry="2" />
<text  x="1179.52" y="223.5" ></text>
</g>
<g >
<title>[unknown] (16 samples, 0.33%)</title><rect x="10.0" y="453" width="3.9" height="15.0" fill="rgb(225,101,41)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>snd_audiopci_interrupt (2 samples, 0.04%)</title><rect x="1095.1" y="309" width="0.5" height="15.0" fill="rgb(210,196,6)" rx="2" ry="2" />
<text  x="1098.14" y="319.5" ></text>
</g>
<g >
<title>__pagevec_lru_add (16 samples, 0.33%)</title><rect x="1162.1" y="293" width="3.8" height="15.0" fill="rgb(207,218,28)" rx="2" ry="2" />
<text  x="1165.07" y="303.5" ></text>
</g>
<g >
<title>cgroup_throttle_swaprate (2 samples, 0.04%)</title><rect x="1115.6" y="341" width="0.5" height="15.0" fill="rgb(230,170,2)" rx="2" ry="2" />
<text  x="1118.60" y="351.5" ></text>
</g>
<g >
<title>amd_pmu_wait_on_overflow (2 samples, 0.04%)</title><rect x="10.2" y="85" width="0.5" height="15.0" fill="rgb(210,128,49)" rx="2" ry="2" />
<text  x="13.24" y="95.5" ></text>
</g>
<g >
<title>delay_tsc (1 samples, 0.02%)</title><rect x="1176.3" y="213" width="0.2" height="15.0" fill="rgb(224,100,7)" rx="2" ry="2" />
<text  x="1179.28" y="223.5" ></text>
</g>
<g >
<title>__tlb_remove_page_size (1 samples, 0.02%)</title><rect x="1183.0" y="277" width="0.3" height="15.0" fill="rgb(224,44,48)" rx="2" ry="2" />
<text  x="1186.02" y="287.5" ></text>
</g>
<g >
<title>blk_mq_complete_request_remote (1 samples, 0.02%)</title><rect x="1108.9" y="197" width="0.2" height="15.0" fill="rgb(235,151,37)" rx="2" ry="2" />
<text  x="1111.86" y="207.5" ></text>
</g>
<g >
<title>amd_pmu_wait_on_overflow (4 samples, 0.08%)</title><rect x="1176.5" y="181" width="1.0" height="15.0" fill="rgb(218,55,11)" rx="2" ry="2" />
<text  x="1179.52" y="191.5" ></text>
</g>
<g >
<title>tty_write (16 samples, 0.33%)</title><rect x="10.0" y="325" width="3.9" height="15.0" fill="rgb(226,113,6)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>perf_pmu_disable.part.0 (1 samples, 0.02%)</title><rect x="1174.4" y="293" width="0.2" height="15.0" fill="rgb(207,34,21)" rx="2" ry="2" />
<text  x="1177.35" y="303.5" ></text>
</g>
<g >
<title>scsi_mq_done (1 samples, 0.02%)</title><rect x="1108.9" y="229" width="0.2" height="15.0" fill="rgb(232,84,10)" rx="2" ry="2" />
<text  x="1111.86" y="239.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (6 samples, 0.12%)</title><rect x="1177.5" y="277" width="1.4" height="15.0" fill="rgb(233,15,39)" rx="2" ry="2" />
<text  x="1180.48" y="287.5" ></text>
</g>
<g >
<title>free_unref_page_list (7 samples, 0.14%)</title><rect x="1186.1" y="229" width="1.7" height="15.0" fill="rgb(212,166,43)" rx="2" ry="2" />
<text  x="1189.15" y="239.5" ></text>
</g>
<g >
<title>clear_page_erms (137 samples, 2.80%)</title><rect x="1119.7" y="277" width="33.0" height="15.0" fill="rgb(212,203,47)" rx="2" ry="2" />
<text  x="1122.70" y="287.5" >cl..</text>
</g>
<g >
<title>send_call_function_single_ipi (1 samples, 0.02%)</title><rect x="1176.0" y="197" width="0.3" height="15.0" fill="rgb(217,178,51)" rx="2" ry="2" />
<text  x="1179.04" y="207.5" ></text>
</g>
<g >
<title>native_read_msr (4 samples, 0.08%)</title><rect x="1176.5" y="165" width="1.0" height="15.0" fill="rgb(210,14,17)" rx="2" ry="2" />
<text  x="1179.52" y="175.5" ></text>
</g>
<g >
<title>__const_udelay (1 samples, 0.02%)</title><rect x="1119.0" y="53" width="0.2" height="15.0" fill="rgb(249,76,34)" rx="2" ry="2" />
<text  x="1121.97" y="63.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1167.8" y="261" width="0.3" height="15.0" fill="rgb(211,80,10)" rx="2" ry="2" />
<text  x="1170.85" y="271.5" ></text>
</g>
<g >
<title>handle_fasteoi_irq (11 samples, 0.22%)</title><rect x="1094.7" y="373" width="2.6" height="15.0" fill="rgb(240,222,53)" rx="2" ry="2" />
<text  x="1097.66" y="383.5" ></text>
</g>
<g >
<title>rcu_read_unlock_strict (1 samples, 0.02%)</title><rect x="1171.5" y="373" width="0.2" height="15.0" fill="rgb(235,229,14)" rx="2" ry="2" />
<text  x="1174.46" y="383.5" ></text>
</g>
<g >
<title>amd_pmu_wait_on_overflow (1 samples, 0.02%)</title><rect x="10.0" y="149" width="0.2" height="15.0" fill="rgb(209,138,20)" rx="2" ry="2" />
<text  x="13.00" y="159.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (9 samples, 0.18%)</title><rect x="1094.7" y="325" width="2.1" height="15.0" fill="rgb(207,74,16)" rx="2" ry="2" />
<text  x="1097.66" y="335.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1119.0" y="277" width="0.2" height="15.0" fill="rgb(210,103,24)" rx="2" ry="2" />
<text  x="1121.97" y="287.5" ></text>
</g>
<g >
<title>perf_pmu_enable.part.0 (6 samples, 0.12%)</title><rect x="1188.6" y="277" width="1.4" height="15.0" fill="rgb(246,166,24)" rx="2" ry="2" />
<text  x="1191.56" y="287.5" ></text>
</g>
<g >
<title>asm_sysvec_call_function_single (11 samples, 0.22%)</title><rect x="1176.3" y="421" width="2.6" height="15.0" fill="rgb(212,79,9)" rx="2" ry="2" />
<text  x="1179.28" y="431.5" ></text>
</g>
<g >
<title>get_task_policy.part.0 (1 samples, 0.02%)</title><rect x="1158.5" y="309" width="0.2" height="15.0" fill="rgb(244,182,4)" rx="2" ry="2" />
<text  x="1161.46" y="319.5" ></text>
</g>
<g >
<title>x86_pmu_del (4 samples, 0.08%)</title><rect x="1176.5" y="229" width="1.0" height="15.0" fill="rgb(211,121,2)" rx="2" ry="2" />
<text  x="1179.52" y="239.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (5 samples, 0.10%)</title><rect x="1183.3" y="245" width="1.2" height="15.0" fill="rgb(242,190,28)" rx="2" ry="2" />
<text  x="1186.26" y="255.5" ></text>
</g>
<g >
<title>native_send_call_func_single_ipi (1 samples, 0.02%)</title><rect x="1176.0" y="181" width="0.3" height="15.0" fill="rgb(207,180,7)" rx="2" ry="2" />
<text  x="1179.04" y="191.5" ></text>
</g>
<g >
<title>exc_page_fault (2 samples, 0.04%)</title><rect x="1181.3" y="421" width="0.5" height="15.0" fill="rgb(249,45,41)" rx="2" ry="2" />
<text  x="1184.33" y="431.5" ></text>
</g>
<g >
<title>asm_sysvec_call_function_single (1 samples, 0.02%)</title><rect x="10.7" y="245" width="0.3" height="15.0" fill="rgb(239,82,53)" rx="2" ry="2" />
<text  x="13.72" y="255.5" ></text>
</g>
<g >
<title>get_vma_policy.part.0 (3 samples, 0.06%)</title><rect x="1158.7" y="309" width="0.7" height="15.0" fill="rgb(209,124,19)" rx="2" ry="2" />
<text  x="1161.70" y="319.5" ></text>
</g>
<g >
<title>do_exit (28 samples, 0.57%)</title><rect x="1181.8" y="389" width="6.8" height="15.0" fill="rgb(248,216,29)" rx="2" ry="2" />
<text  x="1184.81" y="399.5" ></text>
</g>
<g >
<title>__common_interrupt (1 samples, 0.02%)</title><rect x="1152.4" y="229" width="0.3" height="15.0" fill="rgb(238,206,36)" rx="2" ry="2" />
<text  x="1155.44" y="239.5" ></text>
</g>
<g >
<title>native_read_msr (1 samples, 0.02%)</title><rect x="1174.4" y="229" width="0.2" height="15.0" fill="rgb(241,167,41)" rx="2" ry="2" />
<text  x="1177.35" y="239.5" ></text>
</g>
<g >
<title>uhci_scan_schedule.part.0 (2 samples, 0.04%)</title><rect x="1096.3" y="277" width="0.5" height="15.0" fill="rgb(206,57,54)" rx="2" ry="2" />
<text  x="1099.34" y="287.5" ></text>
</g>
<g >
<title>__irqentry_text_end (3 samples, 0.06%)</title><rect x="1093.9" y="421" width="0.8" height="15.0" fill="rgb(252,182,4)" rx="2" ry="2" />
<text  x="1096.93" y="431.5" ></text>
</g>
<g >
<title>lru_cache_add_inactive_or_unevictable (19 samples, 0.39%)</title><rect x="1161.3" y="325" width="4.6" height="15.0" fill="rgb(217,171,45)" rx="2" ry="2" />
<text  x="1164.35" y="335.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (11 samples, 0.22%)</title><rect x="1176.3" y="357" width="2.6" height="15.0" fill="rgb(221,31,15)" rx="2" ry="2" />
<text  x="1179.28" y="367.5" ></text>
</g>
<g >
<title>__libc_start_main (4,849 samples, 98.94%)</title><rect x="13.9" y="453" width="1167.4" height="15.0" fill="rgb(230,16,31)" rx="2" ry="2" />
<text  x="16.85" y="463.5" >__libc_start_main</text>
</g>
<g >
<title>schedule (11 samples, 0.22%)</title><rect x="1176.3" y="341" width="2.6" height="15.0" fill="rgb(211,132,9)" rx="2" ry="2" />
<text  x="1179.28" y="351.5" ></text>
</g>
<g >
<title>begin_new_exec (6 samples, 0.12%)</title><rect x="1188.6" y="325" width="1.4" height="15.0" fill="rgb(235,190,53)" rx="2" ry="2" />
<text  x="1191.56" y="335.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (4 samples, 0.08%)</title><rect x="1163.5" y="277" width="1.0" height="15.0" fill="rgb(216,119,21)" rx="2" ry="2" />
<text  x="1166.52" y="287.5" ></text>
</g>
<g >
<title>swake_up_one (1 samples, 0.02%)</title><rect x="1176.0" y="293" width="0.3" height="15.0" fill="rgb(235,196,22)" rx="2" ry="2" />
<text  x="1179.04" y="303.5" ></text>
</g>
<g >
<title>__handle_irq_event_percpu (1 samples, 0.02%)</title><rect x="1167.8" y="117" width="0.3" height="15.0" fill="rgb(242,115,4)" rx="2" ry="2" />
<text  x="1170.85" y="127.5" ></text>
</g>
<g >
<title>exit_mmap (28 samples, 0.57%)</title><rect x="1181.8" y="357" width="6.8" height="15.0" fill="rgb(237,182,47)" rx="2" ry="2" />
<text  x="1184.81" y="367.5" ></text>
</g>
<g >
<title>__const_udelay (1 samples, 0.02%)</title><rect x="10.2" y="69" width="0.3" height="15.0" fill="rgb(226,179,17)" rx="2" ry="2" />
<text  x="13.24" y="79.5" ></text>
</g>
<g >
<title>perf-exec (6 samples, 0.12%)</title><rect x="1188.6" y="469" width="1.4" height="15.0" fill="rgb(234,60,25)" rx="2" ry="2" />
<text  x="1191.56" y="479.5" ></text>
</g>
<g >
<title>group_sched_out.part.0 (4 samples, 0.08%)</title><rect x="1176.5" y="261" width="1.0" height="15.0" fill="rgb(254,143,47)" rx="2" ry="2" />
<text  x="1179.52" y="271.5" ></text>
</g>
<g >
<title>handle_fasteoi_irq (1 samples, 0.02%)</title><rect x="1152.4" y="213" width="0.3" height="15.0" fill="rgb(254,180,16)" rx="2" ry="2" />
<text  x="1155.44" y="223.5" ></text>
</g>
<g >
<title>rmqueue_bulk.constprop.0 (10 samples, 0.20%)</title><rect x="1155.3" y="261" width="2.4" height="15.0" fill="rgb(225,130,39)" rx="2" ry="2" />
<text  x="1158.33" y="271.5" ></text>
</g>
<g >
<title>rmqueue (16 samples, 0.33%)</title><rect x="1153.9" y="277" width="3.8" height="15.0" fill="rgb(231,170,2)" rx="2" ry="2" />
<text  x="1156.88" y="287.5" ></text>
</g>
<g >
<title>group_sched_out.part.0 (2 samples, 0.04%)</title><rect x="10.2" y="165" width="0.5" height="15.0" fill="rgb(222,120,2)" rx="2" ry="2" />
<text  x="13.24" y="175.5" ></text>
</g>
<g >
<title>snd_pcm_period_elapsed (1 samples, 0.02%)</title><rect x="1095.4" y="293" width="0.2" height="15.0" fill="rgb(227,164,7)" rx="2" ry="2" />
<text  x="1098.38" y="303.5" ></text>
</g>
<g >
<title>ctx_sched_out (2 samples, 0.04%)</title><rect x="10.2" y="181" width="0.5" height="15.0" fill="rgb(216,177,28)" rx="2" ry="2" />
<text  x="13.24" y="191.5" ></text>
</g>
<g >
<title>common_interrupt (1 samples, 0.02%)</title><rect x="1152.4" y="245" width="0.3" height="15.0" fill="rgb(227,98,23)" rx="2" ry="2" />
<text  x="1155.44" y="255.5" ></text>
</g>
<g >
<title>native_write_msr (9 samples, 0.18%)</title><rect x="11.7" y="101" width="2.2" height="15.0" fill="rgb(239,146,13)" rx="2" ry="2" />
<text  x="14.69" y="111.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_out (1 samples, 0.02%)</title><rect x="1174.4" y="309" width="0.2" height="15.0" fill="rgb(211,52,54)" rx="2" ry="2" />
<text  x="1177.35" y="319.5" ></text>
</g>
<g >
<title>handle_mm_fault (2 samples, 0.04%)</title><rect x="1181.3" y="389" width="0.5" height="15.0" fill="rgb(247,46,41)" rx="2" ry="2" />
<text  x="1184.33" y="399.5" ></text>
</g>
<g >
<title>mem_cgroup_charge (13 samples, 0.27%)</title><rect x="1165.9" y="325" width="3.2" height="15.0" fill="rgb(239,176,11)" rx="2" ry="2" />
<text  x="1168.92" y="335.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.0 (1 samples, 0.02%)</title><rect x="1119.0" y="181" width="0.2" height="15.0" fill="rgb(213,112,1)" rx="2" ry="2" />
<text  x="1121.97" y="191.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_out (3 samples, 0.06%)</title><rect x="10.0" y="213" width="0.7" height="15.0" fill="rgb(216,173,1)" rx="2" ry="2" />
<text  x="13.00" y="223.5" ></text>
</g>
<g >
<title>perf_pmu_disable.part.0 (1 samples, 0.02%)</title><rect x="1119.0" y="117" width="0.2" height="15.0" fill="rgb(234,166,28)" rx="2" ry="2" />
<text  x="1121.97" y="127.5" ></text>
</g>
<g >
<title>rcu_gp_kthread_wake (1 samples, 0.02%)</title><rect x="1176.0" y="309" width="0.3" height="15.0" fill="rgb(230,13,45)" rx="2" ry="2" />
<text  x="1179.04" y="319.5" ></text>
</g>
<g >
<title>handle_irq_event (1 samples, 0.02%)</title><rect x="1152.4" y="197" width="0.3" height="15.0" fill="rgb(206,34,36)" rx="2" ry="2" />
<text  x="1155.44" y="207.5" ></text>
</g>
<g >
<title>uhci_get_current_frame_number.part.0 (1 samples, 0.02%)</title><rect x="1096.3" y="261" width="0.3" height="15.0" fill="rgb(239,118,45)" rx="2" ry="2" />
<text  x="1099.34" y="271.5" ></text>
</g>
</g>
</svg>
